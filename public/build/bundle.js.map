{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/svelte/src/runtime/internal/environment.js","../../node_modules/svelte/src/runtime/internal/loop.js","../../node_modules/svelte/src/runtime/internal/globals.js","../../node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/svelte/src/runtime/internal/style_manager.js","../../node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/svelte/src/runtime/internal/await_block.js","../../node_modules/svelte/src/runtime/internal/each.js","../../node_modules/svelte/src/runtime/internal/spread.js","../../node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/svelte/src/shared/version.js","../../node_modules/svelte/src/runtime/internal/dev.js","../../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/svelte-routing/src/contexts.js","../../node_modules/svelte-routing/src/utils.js","../../node_modules/svelte-routing/src/Route.svelte","../../node_modules/svelte/src/runtime/store/index.js","../../node_modules/svelte-routing/src/history.js","../../node_modules/svelte-routing/src/Router.svelte","../../src/components/routes/Navbar.svelte","../../src/components/routes/Home.svelte","../../node_modules/@firebase/util/dist/index.esm2017.js","../../node_modules/@firebase/component/dist/esm/index.esm2017.js","../../node_modules/@firebase/logger/dist/esm/index.esm2017.js","../../node_modules/idb/build/wrap-idb-value.js","../../node_modules/idb/build/index.js","../../node_modules/@firebase/app/dist/esm/index.esm2017.js","../../node_modules/firebase/app/dist/esm/index.esm.js","../../node_modules/@firebase/database/dist/index.esm2017.js","../../src/components/routes/Login.svelte","../../src/components/routes/ChatComponent.svelte","../../src/components/routes/Contacts.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { noop } from './utils.js';\n\nexport const is_client = typeof window !== 'undefined';\n\n/** @type {() => number} */\nexport let now = is_client ? () => window.performance.now() : () => Date.now();\n\nexport let raf = is_client ? (cb) => requestAnimationFrame(cb) : noop;\n\n// used internally for testing\n/** @returns {void} */\nexport function set_now(fn) {\n\tnow = fn;\n}\n\n/** @returns {void} */\nexport function set_raf(fn) {\n\traf = fn;\n}\n","import { raf } from './environment.js';\n\nconst tasks = new Set();\n\n/**\n * @param {number} now\n * @returns {void}\n */\nfunction run_tasks(now) {\n\ttasks.forEach((task) => {\n\t\tif (!task.c(now)) {\n\t\t\ttasks.delete(task);\n\t\t\ttask.f();\n\t\t}\n\t});\n\tif (tasks.size !== 0) raf(run_tasks);\n}\n\n/**\n * For testing purposes only!\n * @returns {void}\n */\nexport function clear_loops() {\n\ttasks.clear();\n}\n\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n * @param {import('./private.js').TaskCallback} callback\n * @returns {import('./private.js').Task}\n */\nexport function loop(callback) {\n\t/** @type {import('./private.js').TaskEntry} */\n\tlet task;\n\tif (tasks.size === 0) raf(run_tasks);\n\treturn {\n\t\tpromise: new Promise((fulfill) => {\n\t\t\ttasks.add((task = { c: callback, f: fulfill }));\n\t\t}),\n\t\tabort() {\n\t\t\ttasks.delete(task);\n\t\t}\n\t};\n}\n","/** @type {typeof globalThis} */\nexport const globals =\n\ttypeof window !== 'undefined'\n\t\t? window\n\t\t: typeof globalThis !== 'undefined'\n\t\t? globalThis\n\t\t: // @ts-ignore Node typings have this\n\t\t  global;\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { append_empty_stylesheet, detach, get_root_for_style } from './dom.js';\nimport { raf } from './environment.js';\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\n/** @type {Map<Document | ShadowRoot, import('./private.d.ts').StyleInformation>} */\nconst managed_styles = new Map();\n\nlet active = 0;\n\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\n/**\n * @param {string} str\n * @returns {number}\n */\nfunction hash(str) {\n\tlet hash = 5381;\n\tlet i = str.length;\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn hash >>> 0;\n}\n\n/**\n * @param {Document | ShadowRoot} doc\n * @param {Element & ElementCSSInlineStyle} node\n * @returns {{ stylesheet: any; rules: {}; }}\n */\nfunction create_style_information(doc, node) {\n\tconst info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n\tmanaged_styles.set(doc, info);\n\treturn info;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {number} a\n * @param {number} b\n * @param {number} duration\n * @param {number} delay\n * @param {(t: number) => number} ease\n * @param {(t: number, u: number) => string} fn\n * @param {number} uid\n * @returns {string}\n */\nexport function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n\tconst step = 16.666 / duration;\n\tlet keyframes = '{\\n';\n\tfor (let p = 0; p <= 1; p += step) {\n\t\tconst t = a + (b - a) * ease(p);\n\t\tkeyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n\t}\n\tconst rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n\tconst name = `__svelte_${hash(rule)}_${uid}`;\n\tconst doc = get_root_for_style(node);\n\tconst { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n\tif (!rules[name]) {\n\t\trules[name] = true;\n\t\tstylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n\t}\n\tconst animation = node.style.animation || '';\n\tnode.style.animation = `${\n\t\tanimation ? `${animation}, ` : ''\n\t}${name} ${duration}ms linear ${delay}ms 1 both`;\n\tactive += 1;\n\treturn name;\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {string} [name]\n * @returns {void}\n */\nexport function delete_rule(node, name) {\n\tconst previous = (node.style.animation || '').split(', ');\n\tconst next = previous.filter(\n\t\tname\n\t\t\t? (anim) => anim.indexOf(name) < 0 // remove specific animation\n\t\t\t: (anim) => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n\t);\n\tconst deleted = previous.length - next.length;\n\tif (deleted) {\n\t\tnode.style.animation = next.join(', ');\n\t\tactive -= deleted;\n\t\tif (!active) clear_rules();\n\t}\n}\n\n/** @returns {void} */\nexport function clear_rules() {\n\traf(() => {\n\t\tif (active) return;\n\t\tmanaged_styles.forEach((info) => {\n\t\t\tconst { ownerNode } = info.stylesheet;\n\t\t\t// there is no ownerNode if it runs on jsdom.\n\t\t\tif (ownerNode) detach(ownerNode);\n\t\t});\n\t\tmanaged_styles.clear();\n\t});\n}\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","/** @returns {{}} */\nexport function get_spread_update(levels, updates) {\n\tconst update = {};\n\tconst to_null_out = {};\n\tconst accounted_for = { $$scope: 1 };\n\tlet i = levels.length;\n\twhile (i--) {\n\t\tconst o = levels[i];\n\t\tconst n = updates[i];\n\t\tif (n) {\n\t\t\tfor (const key in o) {\n\t\t\t\tif (!(key in n)) to_null_out[key] = 1;\n\t\t\t}\n\t\t\tfor (const key in n) {\n\t\t\t\tif (!accounted_for[key]) {\n\t\t\t\t\tupdate[key] = n[key];\n\t\t\t\t\taccounted_for[key] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlevels[i] = n;\n\t\t} else {\n\t\t\tfor (const key in o) {\n\t\t\t\taccounted_for[key] = 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (const key in to_null_out) {\n\t\tif (!(key in update)) update[key] = undefined;\n\t}\n\treturn update;\n}\n\nexport function get_spread_object(spread_props) {\n\treturn typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.19';\nexport const PUBLIC_VERSION = '4';\n","import {\n\tcustom_event,\n\tappend,\n\tappend_hydration,\n\tinsert,\n\tinsert_hydration,\n\tdetach,\n\tlisten,\n\tattr\n} from './dom.js';\nimport { SvelteComponent } from './Component.js';\nimport { is_void } from '../../shared/utils/names.js';\nimport { VERSION } from '../../shared/version.js';\nimport { contenteditable_truthy_values } from './utils.js';\nimport { ensure_array_like } from './each.js';\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @returns {void}\n */\nexport function dispatch_dev(type, detail) {\n\tdocument.dispatchEvent(custom_event(type, { version: VERSION, ...detail }, { bubbles: true }));\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append_hydration_dev(target, node) {\n\tdispatch_dev('SvelteDOMInsert', { target, node });\n\tappend_hydration(target, node);\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert(target, node, anchor);\n}\n\n/** @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert_hydration_dev(target, node, anchor) {\n\tdispatch_dev('SvelteDOMInsert', { target, node, anchor });\n\tinsert_hydration(target, node, anchor);\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach_dev(node) {\n\tdispatch_dev('SvelteDOMRemove', { node });\n\tdetach(node);\n}\n\n/**\n * @param {Node} before\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_between_dev(before, after) {\n\twhile (before.nextSibling && before.nextSibling !== after) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} after\n * @returns {void}\n */\nexport function detach_before_dev(after) {\n\twhile (after.previousSibling) {\n\t\tdetach_dev(after.previousSibling);\n\t}\n}\n\n/**\n * @param {Node} before\n * @returns {void}\n */\nexport function detach_after_dev(before) {\n\twhile (before.nextSibling) {\n\t\tdetach_dev(before.nextSibling);\n\t}\n}\n\n/**\n * @param {Node} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @param {boolean} [has_prevent_default]\n * @param {boolean} [has_stop_propagation]\n * @param {boolean} [has_stop_immediate_propagation]\n * @returns {() => void}\n */\nexport function listen_dev(\n\tnode,\n\tevent,\n\thandler,\n\toptions,\n\thas_prevent_default,\n\thas_stop_propagation,\n\thas_stop_immediate_propagation\n) {\n\tconst modifiers =\n\t\toptions === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n\tif (has_prevent_default) modifiers.push('preventDefault');\n\tif (has_stop_propagation) modifiers.push('stopPropagation');\n\tif (has_stop_immediate_propagation) modifiers.push('stopImmediatePropagation');\n\tdispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n\tconst dispose = listen(node, event, handler, options);\n\treturn () => {\n\t\tdispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n\t\tdispose();\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr_dev(node, attribute, value) {\n\tattr(node, attribute, value);\n\tif (value == null) dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n\telse dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\n\n/**\n * @param {Element} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function prop_dev(node, property, value) {\n\tnode[property] = value;\n\tdispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} property\n * @param {any} [value]\n * @returns {void}\n */\nexport function dataset_dev(node, property, value) {\n\tnode.dataset[property] = value;\n\tdispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_dev(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable_dev(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\tdispatch_dev('SvelteDOMSetData', { node: text, data });\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable_dev(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable_dev(text, data);\n\t} else {\n\t\tset_data_dev(text, data);\n\t}\n}\n\nexport function ensure_array_like_dev(arg) {\n\tif (\n\t\ttypeof arg !== 'string' &&\n\t\t!(arg && typeof arg === 'object' && 'length' in arg) &&\n\t\t!(typeof Symbol === 'function' && arg && Symbol.iterator in arg)\n\t) {\n\t\tthrow new Error('{#each} only works with iterable values.');\n\t}\n\treturn ensure_array_like(arg);\n}\n\n/**\n * @returns {void} */\nexport function validate_slots(name, slot, keys) {\n\tfor (const slot_key of Object.keys(slot)) {\n\t\tif (!~keys.indexOf(slot_key)) {\n\t\t\tconsole.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n\t\t}\n\t}\n}\n\n/**\n * @param {unknown} tag\n * @returns {void}\n */\nexport function validate_dynamic_element(tag) {\n\tconst is_string = typeof tag === 'string';\n\tif (tag && !is_string) {\n\t\tthrow new Error('<svelte:element> expects \"this\" attribute to be a string.');\n\t}\n}\n\n/**\n * @param {undefined | string} tag\n * @returns {void}\n */\nexport function validate_void_dynamic_element(tag) {\n\tif (tag && is_void(tag)) {\n\t\tconsole.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n\t}\n}\n\nexport function construct_svelte_component_dev(component, props) {\n\tconst error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n\ttry {\n\t\tconst instance = new component(props);\n\t\tif (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n\t\t\tthrow new Error(error_message);\n\t\t}\n\t\treturn instance;\n\t} catch (err) {\n\t\tconst { message } = err;\n\t\tif (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n\t\t\tthrow new Error(error_message);\n\t\t} else {\n\t\t\tthrow err;\n\t\t}\n\t}\n}\n\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n *\n * Can be used to create strongly typed Svelte components.\n *\n * #### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponent } from \"svelte\";\n * export class MyComponent extends SvelteComponent<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @extends {SvelteComponent<Props, Events>}\n */\nexport class SvelteComponentDev extends SvelteComponent {\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Props}\n\t */\n\t$$prop_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Events}\n\t */\n\t$$events_def;\n\t/**\n\t * For type checking capabilities only.\n\t * Does not exist at runtime.\n\t * ### DO NOT USE!\n\t *\n\t * @type {Slots}\n\t */\n\t$$slot_def;\n\n\t/** @param {import('./public.js').ComponentConstructorOptions<Props>} options */\n\tconstructor(options) {\n\t\tif (!options || (!options.target && !options.$$inline)) {\n\t\t\tthrow new Error(\"'target' is a required option\");\n\t\t}\n\t\tsuper();\n\t}\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tsuper.$destroy();\n\t\tthis.$destroy = () => {\n\t\t\tconsole.warn('Component was already destroyed'); // eslint-disable-line no-console\n\t\t};\n\t}\n\n\t/** @returns {void} */\n\t$capture_state() {}\n\n\t/** @returns {void} */\n\t$inject_state() {}\n}\n/**\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n * @template {Record<string, any>} [Slots=any]\n * @deprecated Use `SvelteComponent` instead. See PR for more information: https://github.com/sveltejs/svelte/pull/8512\n * @extends {SvelteComponentDev<Props, Events, Slots>}\n */\nexport class SvelteComponentTyped extends SvelteComponentDev {}\n\n/** @returns {() => void} */\nexport function loop_guard(timeout) {\n\tconst start = Date.now();\n\treturn () => {\n\t\tif (Date.now() - start > timeout) {\n\t\t\tthrow new Error('Infinite loop detected');\n\t\t}\n\t};\n}\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","import { getContext } from \"svelte\";\n\nexport const LOCATION = {};\nexport const ROUTER = {};\nexport const HISTORY = {};\n\nexport const useLocation = () => getContext(LOCATION);\nexport const useRouter = () => getContext(ROUTER);\nexport const useHistory = () => getContext(HISTORY);\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/utils.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\n\nconst PARAM = /^:(.+)/;\nconst SEGMENT_POINTS = 4;\nconst STATIC_POINTS = 3;\nconst DYNAMIC_POINTS = 2;\nconst SPLAT_PENALTY = 1;\nconst ROOT_POINTS = 1;\n\n/**\n * Split up the URI into segments delimited by `/`\n * Strip starting/ending `/`\n * @param {string} uri\n * @return {string[]}\n */\nconst segmentize = (uri) => uri.replace(/(^\\/+|\\/+$)/g, \"\").split(\"/\");\n/**\n * Strip `str` of potential start and end `/`\n * @param {string} string\n * @return {string}\n */\nconst stripSlashes = (string) => string.replace(/(^\\/+|\\/+$)/g, \"\");\n/**\n * Score a route depending on how its individual segments look\n * @param {object} route\n * @param {number} index\n * @return {object}\n */\nconst rankRoute = (route, index) => {\n    const score = route.default\n        ? 0\n        : segmentize(route.path).reduce((score, segment) => {\n              score += SEGMENT_POINTS;\n\n              if (segment === \"\") {\n                  score += ROOT_POINTS;\n              } else if (PARAM.test(segment)) {\n                  score += DYNAMIC_POINTS;\n              } else if (segment[0] === \"*\") {\n                  score -= SEGMENT_POINTS + SPLAT_PENALTY;\n              } else {\n                  score += STATIC_POINTS;\n              }\n\n              return score;\n          }, 0);\n\n    return { route, score, index };\n};\n/**\n * Give a score to all routes and sort them on that\n * If two routes have the exact same score, we go by index instead\n * @param {object[]} routes\n * @return {object[]}\n */\nconst rankRoutes = (routes) =>\n    routes\n        .map(rankRoute)\n        .sort((a, b) =>\n            a.score < b.score ? 1 : a.score > b.score ? -1 : a.index - b.index\n        );\n/**\n * Ranks and picks the best route to match. Each segment gets the highest\n * amount of points, then the type of segment gets an additional amount of\n * points where\n *\n *  static > dynamic > splat > root\n *\n * This way we don't have to worry about the order of our routes, let the\n * computers do it.\n *\n * A route looks like this\n *\n *  { path, default, value }\n *\n * And a returned match looks like:\n *\n *  { route, params, uri }\n *\n * @param {object[]} routes\n * @param {string} uri\n * @return {?object}\n */\nconst pick = (routes, uri) => {\n    let match;\n    let default_;\n\n    const [uriPathname] = uri.split(\"?\");\n    const uriSegments = segmentize(uriPathname);\n    const isRootUri = uriSegments[0] === \"\";\n    const ranked = rankRoutes(routes);\n\n    for (let i = 0, l = ranked.length; i < l; i++) {\n        const route = ranked[i].route;\n        let missed = false;\n\n        if (route.default) {\n            default_ = {\n                route,\n                params: {},\n                uri,\n            };\n            continue;\n        }\n\n        const routeSegments = segmentize(route.path);\n        const params = {};\n        const max = Math.max(uriSegments.length, routeSegments.length);\n        let index = 0;\n\n        for (; index < max; index++) {\n            const routeSegment = routeSegments[index];\n            const uriSegment = uriSegments[index];\n\n            if (routeSegment && routeSegment[0] === \"*\") {\n                // Hit a splat, just grab the rest, and return a match\n                // uri:   /files/documents/work\n                // route: /files/* or /files/*splatname\n                const splatName =\n                    routeSegment === \"*\" ? \"*\" : routeSegment.slice(1);\n\n                params[splatName] = uriSegments\n                    .slice(index)\n                    .map(decodeURIComponent)\n                    .join(\"/\");\n                break;\n            }\n\n            if (typeof uriSegment === \"undefined\") {\n                // URI is shorter than the route, no match\n                // uri:   /users\n                // route: /users/:userId\n                missed = true;\n                break;\n            }\n\n            const dynamicMatch = PARAM.exec(routeSegment);\n\n            if (dynamicMatch && !isRootUri) {\n                const value = decodeURIComponent(uriSegment);\n                params[dynamicMatch[1]] = value;\n            } else if (routeSegment !== uriSegment) {\n                // Current segments don't match, not dynamic, not splat, so no match\n                // uri:   /users/123/settings\n                // route: /users/:id/profile\n                missed = true;\n                break;\n            }\n        }\n\n        if (!missed) {\n            match = {\n                route,\n                params,\n                uri: \"/\" + uriSegments.slice(0, index).join(\"/\"),\n            };\n            break;\n        }\n    }\n\n    return match || default_ || null;\n};\n/**\n * Add the query to the pathname if a query is given\n * @param {string} pathname\n * @param {string} [query]\n * @return {string}\n */\nconst addQuery = (pathname, query) => pathname + (query ? `?${query}` : \"\");\n/**\n * Resolve URIs as though every path is a directory, no files. Relative URIs\n * in the browser can feel awkward because not only can you be \"in a directory\",\n * you can be \"at a file\", too. For example:\n *\n *  browserSpecResolve('foo', '/bar/') => /bar/foo\n *  browserSpecResolve('foo', '/bar') => /foo\n *\n * But on the command line of a file system, it's not as complicated. You can't\n * `cd` from a file, only directories. This way, links have to know less about\n * their current path. To go deeper you can do this:\n *\n *  <Link to=\"deeper\"/>\n *  // instead of\n *  <Link to=`{${props.uri}/deeper}`/>\n *\n * Just like `cd`, if you want to go deeper from the command line, you do this:\n *\n *  cd deeper\n *  # not\n *  cd $(pwd)/deeper\n *\n * By treating every path as a directory, linking to relative paths should\n * require less contextual information and (fingers crossed) be more intuitive.\n * @param {string} to\n * @param {string} base\n * @return {string}\n */\nconst resolve = (to, base) => {\n    // /foo/bar, /baz/qux => /foo/bar\n    if (to.startsWith(\"/\")) return to;\n\n    const [toPathname, toQuery] = to.split(\"?\");\n    const [basePathname] = base.split(\"?\");\n    const toSegments = segmentize(toPathname);\n    const baseSegments = segmentize(basePathname);\n\n    // ?a=b, /users?b=c => /users?a=b\n    if (toSegments[0] === \"\") return addQuery(basePathname, toQuery);\n\n    // profile, /users/789 => /users/789/profile\n\n    if (!toSegments[0].startsWith(\".\")) {\n        const pathname = baseSegments.concat(toSegments).join(\"/\");\n        return addQuery((basePathname === \"/\" ? \"\" : \"/\") + pathname, toQuery);\n    }\n\n    // ./       , /users/123 => /users/123\n    // ../      , /users/123 => /users\n    // ../..    , /users/123 => /\n    // ../../one, /a/b/c/d   => /a/b/one\n    // .././one , /a/b/c/d   => /a/b/c/one\n    const allSegments = baseSegments.concat(toSegments);\n    const segments = [];\n\n    allSegments.forEach((segment) => {\n        if (segment === \"..\") segments.pop();\n        else if (segment !== \".\") segments.push(segment);\n    });\n\n    return addQuery(\"/\" + segments.join(\"/\"), toQuery);\n};\n/**\n * Combines the `basepath` and the `path` into one path.\n * @param {string} basepath\n * @param {string} path\n */\nconst combinePaths = (basepath, path) =>\n    `${stripSlashes(\n        path === \"/\"\n            ? basepath\n            : `${stripSlashes(basepath)}/${stripSlashes(path)}`\n    )}/`;\n/**\n * Decides whether a given `event` should result in a navigation or not.\n * @param {object} event\n */\nconst shouldNavigate = (event) =>\n    !event.defaultPrevented &&\n    event.button === 0 &&\n    !(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n\n// svelte seems to kill anchor.host value in ie11, so fall back to checking href\nconst hostMatches = (anchor) => {\n    const host = location.host;\n    return (\n        anchor.host === host ||\n        anchor.href.indexOf(`https://${host}`) === 0 ||\n        anchor.href.indexOf(`http://${host}`) === 0\n    );\n};\n\nconst canUseDOM = () =>\n    typeof window !== \"undefined\" &&\n    \"document\" in window &&\n    \"location\" in window;\n\nexport {\n    stripSlashes,\n    pick,\n    resolve,\n    combinePaths,\n    shouldNavigate,\n    hostMatches,\n    canUseDOM,\n};\n","<script>\n    import { getContext, onDestroy } from \"svelte\";\n    import { ROUTER } from \"./contexts.js\";\n    import { canUseDOM } from \"./utils.js\";\n\n    export let path = \"\";\n    export let component = null;\n\n    let routeParams = {};\n    let routeProps = {};\n\n    const { registerRoute, unregisterRoute, activeRoute } = getContext(ROUTER);\n\n    const route = {\n        path,\n        // If no path prop is given, this Route will act as the default Route\n        // that is rendered if no other Route in the Router is a match.\n        default: path === \"\",\n    };\n\n    $: if ($activeRoute && $activeRoute.route === route) {\n        routeParams = $activeRoute.params;\n\n        const { component: c, path, ...rest } = $$props;\n        routeProps = rest;\n\n        if (c) {\n            if (c.toString().startsWith(\"class \")) component = c;\n            else component = c();\n        }\n\n        canUseDOM() && !$activeRoute.preserveScroll && window?.scrollTo(0, 0);\n    }\n\n    registerRoute(route);\n\n    onDestroy(() => {\n        unregisterRoute(route);\n    });\n</script>\n\n{#if $activeRoute && $activeRoute.route === route}\n    {#if component}\n        {#await component then resolvedComponent}\n            <svelte:component\n                this={resolvedComponent?.default || resolvedComponent}\n                {...routeParams}\n                {...routeProps}\n            />\n        {/await}\n    {:else}\n        <slot params={routeParams} />\n    {/if}\n{/if}\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","/**\n * Adapted from https://github.com/reach/router/blob/b60e6dd781d5d3a4bdaaf4de665649c0f6a7e78d/src/lib/history.js\n * https://github.com/reach/router/blob/master/LICENSE\n */\nimport { canUseDOM } from \"./utils\";\n\nconst getLocation = (source) => {\n    return {\n        ...source.location,\n        state: source.history.state,\n        key: (source.history.state && source.history.state.key) || \"initial\",\n    };\n};\nconst createHistory = (source) => {\n    const listeners = [];\n    let location = getLocation(source);\n\n    return {\n        get location() {\n            return location;\n        },\n\n        listen(listener) {\n            listeners.push(listener);\n\n            const popstateListener = () => {\n                location = getLocation(source);\n                listener({ location, action: \"POP\" });\n            };\n\n            source.addEventListener(\"popstate\", popstateListener);\n\n            return () => {\n                source.removeEventListener(\"popstate\", popstateListener);\n                const index = listeners.indexOf(listener);\n                listeners.splice(index, 1);\n            };\n        },\n\n        navigate(to, { state, replace = false, preserveScroll = false, blurActiveElement = true } = {}) {\n            state = { ...state, key: Date.now() + \"\" };\n            // try...catch iOS Safari limits to 100 pushState calls\n            try {\n                if (replace) source.history.replaceState(state, \"\", to);\n                else source.history.pushState(state, \"\", to);\n            } catch (e) {\n                source.location[replace ? \"replace\" : \"assign\"](to);\n            }\n            location = getLocation(source);\n            listeners.forEach((listener) =>\n                listener({ location, action: \"PUSH\", preserveScroll })\n            );\n            if(blurActiveElement) document.activeElement.blur();\n        },\n    };\n};\n// Stores history entries in memory for testing or other platforms like Native\nconst createMemorySource = (initialPathname = \"/\") => {\n    let index = 0;\n    const stack = [{ pathname: initialPathname, search: \"\" }];\n    const states = [];\n\n    return {\n        get location() {\n            return stack[index];\n        },\n        addEventListener(name, fn) {},\n        removeEventListener(name, fn) {},\n        history: {\n            get entries() {\n                return stack;\n            },\n            get index() {\n                return index;\n            },\n            get state() {\n                return states[index];\n            },\n            pushState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                index++;\n                stack.push({ pathname, search });\n                states.push(state);\n            },\n            replaceState(state, _, uri) {\n                const [pathname, search = \"\"] = uri.split(\"?\");\n                stack[index] = { pathname, search };\n                states[index] = state;\n            },\n        },\n    };\n};\n// Global history uses window.history as the source if available,\n// otherwise a memory history\nconst globalHistory = createHistory(\n    canUseDOM() ? window : createMemorySource()\n);\nconst { navigate } = globalHistory;\n\nexport { globalHistory, navigate, createHistory, createMemorySource };\n","<script>\n    import { getContext, onMount, setContext } from \"svelte\";\n    import { derived, writable } from \"svelte/store\";\n    import { HISTORY, LOCATION, ROUTER } from \"./contexts.js\";\n    import { globalHistory } from \"./history.js\";\n    import { combinePaths, pick } from \"./utils.js\";\n\n    export let basepath = \"/\";\n    export let url = null;\n    export let viewtransition = null;\n    export let history = globalHistory;\n\n    const viewtransitionFn = (node, _, direction) => {\n        const vt = viewtransition(direction);\n        if (typeof vt?.fn === \"function\") return vt.fn(node, vt);\n        else return vt;\n    };\n\n    setContext(HISTORY, history);\n\n    const locationContext = getContext(LOCATION);\n    const routerContext = getContext(ROUTER);\n\n    const routes = writable([]);\n    const activeRoute = writable(null);\n    let hasActiveRoute = false; // Used in SSR to synchronously set that a Route is active.\n\n    // If locationContext is not set, this is the topmost Router in the tree.\n    // If the `url` prop is given we force the location to it.\n    const location =\n        locationContext || writable(url ? { pathname: url } : history.location);\n\n    // If routerContext is set, the routerBase of the parent Router\n    // will be the base for this Router's descendants.\n    // If routerContext is not set, the path and resolved uri will both\n    // have the value of the basepath prop.\n    const base = routerContext\n        ? routerContext.routerBase\n        : writable({\n              path: basepath,\n              uri: basepath,\n          });\n\n    const routerBase = derived([base, activeRoute], ([base, activeRoute]) => {\n        // If there is no activeRoute, the routerBase will be identical to the base.\n        if (!activeRoute) return base;\n\n        const { path: basepath } = base;\n        const { route, uri } = activeRoute;\n        // Remove the potential /* or /*splatname from\n        // the end of the child Routes relative paths.\n        const path = route.default ? basepath : route.path.replace(/\\*.*$/, \"\");\n        return { path, uri };\n    });\n\n    const registerRoute = (route) => {\n        const { path: basepath } = $base;\n        let { path } = route;\n\n        // We store the original path in the _path property so we can reuse\n        // it when the basepath changes. The only thing that matters is that\n        // the route reference is intact, so mutation is fine.\n        route._path = path;\n        route.path = combinePaths(basepath, path);\n\n        if (typeof window === \"undefined\") {\n            // In SSR we should set the activeRoute immediately if it is a match.\n            // If there are more Routes being registered after a match is found,\n            // we just skip them.\n            if (hasActiveRoute) return;\n\n            const matchingRoute = pick([route], $location.pathname);\n\n            if (matchingRoute) {\n                activeRoute.set(matchingRoute);\n                hasActiveRoute = true;\n            }\n        } else {\n            routes.update((rs) => [...rs, route]);\n        }\n    };\n\n    const unregisterRoute = (route) => {\n        routes.update((rs) => rs.filter((r) => r !== route));\n    };\n\n    let preserveScroll = false;\n\n    // This reactive statement will update all the Routes' path when\n    // the basepath changes.\n    $: {\n        const { path: basepath } = $base;\n        routes.update((rs) =>\n            rs.map((r) =>\n                Object.assign(r, { path: combinePaths(basepath, r._path) })\n            )\n        );\n    }\n    // This reactive statement will be run when the Router is created\n    // when there are no Routes and then again the following tick, so it\n    // will not find an active Route in SSR and in the browser it will only\n    // pick an active Route after all Routes have been registered.\n    $: {\n        const bestMatch = pick($routes, $location.pathname);\n        activeRoute.set(\n            bestMatch ? { ...bestMatch, preserveScroll } : bestMatch\n        );\n    }\n\n    if (!locationContext) {\n        // The topmost Router in the tree is responsible for updating\n        // the location store and supplying it through context.\n        onMount(() => {\n            const unlisten = history.listen((event) => {\n                preserveScroll = event.preserveScroll || false;\n                location.set(event.location);\n            });\n\n            return unlisten;\n        });\n\n        setContext(LOCATION, location);\n    }\n\n    setContext(ROUTER, {\n        activeRoute,\n        base,\n        routerBase,\n        registerRoute,\n        unregisterRoute,\n    });\n</script>\n\n{#if viewtransition}\n    {#key $location.pathname}\n        <div in:viewtransitionFn out:viewtransitionFn>\n            <slot\n                route={$activeRoute && $activeRoute.uri}\n                location={$location}\n            />\n        </div>\n    {/key}\n{:else}\n    <slot route={$activeRoute && $activeRoute.uri} location={$location} />\n{/if}\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { navigate } from 'svelte-routing';\n\n    let isAuthenticated = false;\n\n    onMount(() => {\n        const apiKey = localStorage.getItem('apiKey');\n        isAuthenticated = !!apiKey;\n\n        // Adiciona um listener para rolagem da página\n        window.addEventListener('scroll', handleScroll);\n    });\n\n    function handleScroll() {\n        const navbar = document.querySelector('.navbar') as HTMLElement;\n        if (window.scrollY > 0) {\n            navbar.classList.add('bg-gray-900', 'bg-opacity-90');\n        } else {\n            navbar.classList.remove('bg-gray-900', 'bg-opacity-90');\n        }\n    }\n\n    function logout() {\n        localStorage.removeItem('apiKey');\n        isAuthenticated = false;\n        navigate('/login');\n    }\n</script>\n\n<nav class=\"navbar fixed top-0 left-0 w-full z-50 transition-all duration-300\">\n    <div class=\"container mx-auto flex justify-between items-center px-4 py-2\">\n        <div class=\"title text-gray-300 text-2xl\">API Routes</div>\n        <div class=\"nav-links flex items-center\">\n            <a href=\"/\" class=\"nav-link text-white hover:text-gray-300 mr-6 py-2 px-4 transition duration-200\">\n                <i class=\"fas fa-home mr-1\"></i> Home\n            </a>\n            {#if isAuthenticated}\n                <a href=\"/contatos\" class=\"nav-link text-white hover:text-gray-300 mr-6 py-2 px-4 transition duration-200\">\n                    <i class=\"fas fa-address-book mr-1\"></i> Contato\n                </a>\n                <button on:click={logout} class=\"nav-button bg-gray-300 text-gray-900 py-2 px-4 rounded transition duration-200 hover:bg-gray-400\">\n                    <i class=\"fas fa-sign-out-alt mr-1\"></i> Logout\n                </button>\n            {:else}\n                <a href=\"/login\" class=\"nav-link text-white hover:text-gray-300 py-2 px-4 transition duration-200\">\n                    <i class=\"fas fa-user mr-1\"></i> Login\n                </a>\n            {/if}\n        </div>\n    </div>\n</nav>\n\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { navigate } from 'svelte-routing';\n\n    let isAuthenticated = false;\n    let apiKey: string | null = null; // Defina o tipo da apiKey como string ou null\n\n    onMount(() => {\n        apiKey = localStorage.getItem('apiKey'); // Recupera a chave da API\n        isAuthenticated = !!apiKey; // Verifica se o usuário está autenticado\n\n        // Redireciona para login se não autenticado\n        if (!isAuthenticated) {\n            // navigate('/login'); // Descomente se você deseja redirecionar para login\n        }\n    });\n</script>\n\n<div class=\"container mx-auto p-4\">\n    {#if isAuthenticated}\n        <!-- Se o usuário estiver autenticado, exibe a mensagem de boas-vindas. -->\n        <h1 class=\"text-3xl font-bold\">Bem-vindo à Página Inicial</h1>\n        <p>Aqui estão as informações da API que você pode acessar.</p>\n\n        <!-- Painel com informações sobre o framework e a API -->\n        <div class=\"bg-gray-100 border border-gray-300 rounded p-4 mt-4\">\n            <h2 class=\"text-xl font-semibold mb-2\">Informações do Projeto</h2>\n            <p><strong>Framework Utilizado:</strong> Svelte</p>\n            <p><strong>ID da API Atual:</strong> {apiKey}</p>\n            <p><strong>Descrição:</strong> Esta aplicação permite que você interaja com a API, visualize contatos e faça login para acessar funcionalidades adicionais.</p>\n            <div class=\"mt-4\">\n                <a href=\"/contatos\" class=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition duration-200 mr-2\">Ir para Contatos</a>\n            </div>\n        </div>\n        \n        <!-- Adicione mais conteúdo da página aqui -->\n    {:else}\n        <!-- Se o usuário não estiver autenticado, exibe a mensagem de acesso negado. -->\n        <h1 class=\"text-3xl font-bold\">Acesso Negado</h1>\n        <p>Por favor, faça login para acessar esta página.</p>\n        <a href=\"/login\" class=\"bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600 transition duration-200\">Login</a>\n    {/if}\n</div>\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\r\n */\r\nconst CONSTANTS = {\r\n    /**\r\n     * @define {boolean} Whether this is the client Node.js SDK.\r\n     */\r\n    NODE_CLIENT: false,\r\n    /**\r\n     * @define {boolean} Whether this is the Admin Node.js SDK.\r\n     */\r\n    NODE_ADMIN: false,\r\n    /**\r\n     * Firebase SDK Version\r\n     */\r\n    SDK_VERSION: '${JSCORE_VERSION}'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws an error if the provided assertion is falsy\r\n */\r\nconst assert = function (assertion, message) {\r\n    if (!assertion) {\r\n        throw assertionError(message);\r\n    }\r\n};\r\n/**\r\n * Returns an Error object suitable for throwing.\r\n */\r\nconst assertionError = function (message) {\r\n    return new Error('Firebase Database (' +\r\n        CONSTANTS.SDK_VERSION +\r\n        ') INTERNAL ASSERT FAILED: ' +\r\n        message);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst stringToByteArray$1 = function (str) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if ((c & 0xfc00) === 0xd800 &&\r\n            i + 1 < str.length &&\r\n            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\r\n            // Surrogate Pair\r\n            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Turns an array of numbers into the string given by the concatenation of the\r\n * characters to which the numbers correspond.\r\n * @param bytes Array of numbers representing characters.\r\n * @return Stringification of the array.\r\n */\r\nconst byteArrayToString = function (bytes) {\r\n    // TODO(user): Use native implementations if/when available\r\n    const out = [];\r\n    let pos = 0, c = 0;\r\n    while (pos < bytes.length) {\r\n        const c1 = bytes[pos++];\r\n        if (c1 < 128) {\r\n            out[c++] = String.fromCharCode(c1);\r\n        }\r\n        else if (c1 > 191 && c1 < 224) {\r\n            const c2 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\r\n        }\r\n        else if (c1 > 239 && c1 < 365) {\r\n            // Surrogate Pair\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            const c4 = bytes[pos++];\r\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\r\n                0x10000;\r\n            out[c++] = String.fromCharCode(0xd800 + (u >> 10));\r\n            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\r\n        }\r\n        else {\r\n            const c2 = bytes[pos++];\r\n            const c3 = bytes[pos++];\r\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\r\n        }\r\n    }\r\n    return out.join('');\r\n};\r\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\r\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\r\n// Static lookup maps, lazily populated by init_()\r\nconst base64 = {\r\n    /**\r\n     * Maps bytes to characters.\r\n     */\r\n    byteToCharMap_: null,\r\n    /**\r\n     * Maps characters to bytes.\r\n     */\r\n    charToByteMap_: null,\r\n    /**\r\n     * Maps bytes to websafe characters.\r\n     * @private\r\n     */\r\n    byteToCharMapWebSafe_: null,\r\n    /**\r\n     * Maps websafe characters to bytes.\r\n     * @private\r\n     */\r\n    charToByteMapWebSafe_: null,\r\n    /**\r\n     * Our default alphabet, shared between\r\n     * ENCODED_VALS and ENCODED_VALS_WEBSAFE\r\n     */\r\n    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\r\n    /**\r\n     * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\r\n     */\r\n    get ENCODED_VALS() {\r\n        return this.ENCODED_VALS_BASE + '+/=';\r\n    },\r\n    /**\r\n     * Our websafe alphabet.\r\n     */\r\n    get ENCODED_VALS_WEBSAFE() {\r\n        return this.ENCODED_VALS_BASE + '-_.';\r\n    },\r\n    /**\r\n     * Whether this browser supports the atob and btoa functions. This extension\r\n     * started at Mozilla but is now implemented by many browsers. We use the\r\n     * ASSUME_* variables to avoid pulling in the full useragent detection library\r\n     * but still allowing the standard per-browser compilations.\r\n     *\r\n     */\r\n    HAS_NATIVE_SUPPORT: typeof atob === 'function',\r\n    /**\r\n     * Base64-encode an array of bytes.\r\n     *\r\n     * @param input An array of bytes (numbers with\r\n     *     value in [0, 255]) to encode.\r\n     * @param webSafe Boolean indicating we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeByteArray(input, webSafe) {\r\n        if (!Array.isArray(input)) {\r\n            throw Error('encodeByteArray takes an array as a parameter');\r\n        }\r\n        this.init_();\r\n        const byteToCharMap = webSafe\r\n            ? this.byteToCharMapWebSafe_\r\n            : this.byteToCharMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length; i += 3) {\r\n            const byte1 = input[i];\r\n            const haveByte2 = i + 1 < input.length;\r\n            const byte2 = haveByte2 ? input[i + 1] : 0;\r\n            const haveByte3 = i + 2 < input.length;\r\n            const byte3 = haveByte3 ? input[i + 2] : 0;\r\n            const outByte1 = byte1 >> 2;\r\n            const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\r\n            let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\r\n            let outByte4 = byte3 & 0x3f;\r\n            if (!haveByte3) {\r\n                outByte4 = 64;\r\n                if (!haveByte2) {\r\n                    outByte3 = 64;\r\n                }\r\n            }\r\n            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);\r\n        }\r\n        return output.join('');\r\n    },\r\n    /**\r\n     * Base64-encode a string.\r\n     *\r\n     * @param input A string to encode.\r\n     * @param webSafe If true, we should use the\r\n     *     alternative alphabet.\r\n     * @return The base64 encoded string.\r\n     */\r\n    encodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return btoa(input);\r\n        }\r\n        return this.encodeByteArray(stringToByteArray$1(input), webSafe);\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * @param input to decode.\r\n     * @param webSafe True if we should use the\r\n     *     alternative alphabet.\r\n     * @return string representing the decoded value.\r\n     */\r\n    decodeString(input, webSafe) {\r\n        // Shortcut for Mozilla browsers that implement\r\n        // a native base64 encoder in the form of \"btoa/atob\"\r\n        if (this.HAS_NATIVE_SUPPORT && !webSafe) {\r\n            return atob(input);\r\n        }\r\n        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\r\n    },\r\n    /**\r\n     * Base64-decode a string.\r\n     *\r\n     * In base-64 decoding, groups of four characters are converted into three\r\n     * bytes.  If the encoder did not apply padding, the input length may not\r\n     * be a multiple of 4.\r\n     *\r\n     * In this case, the last group will have fewer than 4 characters, and\r\n     * padding will be inferred.  If the group has one or two characters, it decodes\r\n     * to one byte.  If the group has three characters, it decodes to two bytes.\r\n     *\r\n     * @param input Input to decode.\r\n     * @param webSafe True if we should use the web-safe alphabet.\r\n     * @return bytes representing the decoded value.\r\n     */\r\n    decodeStringToByteArray(input, webSafe) {\r\n        this.init_();\r\n        const charToByteMap = webSafe\r\n            ? this.charToByteMapWebSafe_\r\n            : this.charToByteMap_;\r\n        const output = [];\r\n        for (let i = 0; i < input.length;) {\r\n            const byte1 = charToByteMap[input.charAt(i++)];\r\n            const haveByte2 = i < input.length;\r\n            const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\r\n            ++i;\r\n            const haveByte3 = i < input.length;\r\n            const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            const haveByte4 = i < input.length;\r\n            const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\r\n            ++i;\r\n            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\r\n                throw new DecodeBase64StringError();\r\n            }\r\n            const outByte1 = (byte1 << 2) | (byte2 >> 4);\r\n            output.push(outByte1);\r\n            if (byte3 !== 64) {\r\n                const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\r\n                output.push(outByte2);\r\n                if (byte4 !== 64) {\r\n                    const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\r\n                    output.push(outByte3);\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    },\r\n    /**\r\n     * Lazy static initialization function. Called before\r\n     * accessing any of the static map variables.\r\n     * @private\r\n     */\r\n    init_() {\r\n        if (!this.byteToCharMap_) {\r\n            this.byteToCharMap_ = {};\r\n            this.charToByteMap_ = {};\r\n            this.byteToCharMapWebSafe_ = {};\r\n            this.charToByteMapWebSafe_ = {};\r\n            // We want quick mappings back and forth, so we precompute two maps.\r\n            for (let i = 0; i < this.ENCODED_VALS.length; i++) {\r\n                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\r\n                this.charToByteMap_[this.byteToCharMap_[i]] = i;\r\n                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\r\n                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\r\n                // Be forgiving when decoding and correctly decode both encodings.\r\n                if (i >= this.ENCODED_VALS_BASE.length) {\r\n                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\r\n                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n/**\r\n * An error encountered while decoding base64 string.\r\n */\r\nclass DecodeBase64StringError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.name = 'DecodeBase64StringError';\r\n    }\r\n}\r\n/**\r\n * URL-safe base64 encoding\r\n */\r\nconst base64Encode = function (str) {\r\n    const utf8Bytes = stringToByteArray$1(str);\r\n    return base64.encodeByteArray(utf8Bytes, true);\r\n};\r\n/**\r\n * URL-safe base64 encoding (without \".\" padding in the end).\r\n * e.g. Used in JSON Web Token (JWT) parts.\r\n */\r\nconst base64urlEncodeWithoutPadding = function (str) {\r\n    // Use base64url encoding and remove padding in the end (dot characters).\r\n    return base64Encode(str).replace(/\\./g, '');\r\n};\r\n/**\r\n * URL-safe base64 decoding\r\n *\r\n * NOTE: DO NOT use the global atob() function - it does NOT support the\r\n * base64Url variant encoding.\r\n *\r\n * @param str To be decoded\r\n * @return Decoded result, if possible\r\n */\r\nconst base64Decode = function (str) {\r\n    try {\r\n        return base64.decodeString(str, true);\r\n    }\r\n    catch (e) {\r\n        console.error('base64Decode failed: ', e);\r\n    }\r\n    return null;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Do a deep-copy of basic JavaScript Objects or Arrays.\r\n */\r\nfunction deepCopy(value) {\r\n    return deepExtend(undefined, value);\r\n}\r\n/**\r\n * Copy properties from source to target (recursively allows extension\r\n * of Objects and Arrays).  Scalar values in the target are over-written.\r\n * If target is undefined, an object of the appropriate type will be created\r\n * (and returned).\r\n *\r\n * We recursively copy all child properties of plain Objects in the source- so\r\n * that namespace- like dictionaries are merged.\r\n *\r\n * Note that the target can be a function, in which case the properties in\r\n * the source Object are copied onto it as static properties of the Function.\r\n *\r\n * Note: we don't merge __proto__ to prevent prototype pollution\r\n */\r\nfunction deepExtend(target, source) {\r\n    if (!(source instanceof Object)) {\r\n        return source;\r\n    }\r\n    switch (source.constructor) {\r\n        case Date:\r\n            // Treat Dates like scalars; if the target date object had any child\r\n            // properties - they will be lost!\r\n            const dateValue = source;\r\n            return new Date(dateValue.getTime());\r\n        case Object:\r\n            if (target === undefined) {\r\n                target = {};\r\n            }\r\n            break;\r\n        case Array:\r\n            // Always copy the array source and overwrite the target.\r\n            target = [];\r\n            break;\r\n        default:\r\n            // Not a plain Object - treat it as a scalar.\r\n            return source;\r\n    }\r\n    for (const prop in source) {\r\n        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\r\n        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\r\n            continue;\r\n        }\r\n        target[prop] = deepExtend(target[prop], source[prop]);\r\n    }\r\n    return target;\r\n}\r\nfunction isValidKey(key) {\r\n    return key !== '__proto__';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Polyfill for `globalThis` object.\r\n * @returns the `globalThis` object for the given environment.\r\n * @public\r\n */\r\nfunction getGlobal() {\r\n    if (typeof self !== 'undefined') {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined') {\r\n        return window;\r\n    }\r\n    if (typeof global !== 'undefined') {\r\n        return global;\r\n    }\r\n    throw new Error('Unable to locate global object.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst getDefaultsFromGlobal = () => getGlobal().__FIREBASE_DEFAULTS__;\r\n/**\r\n * Attempt to read defaults from a JSON string provided to\r\n * process(.)env(.)__FIREBASE_DEFAULTS__ or a JSON file whose path is in\r\n * process(.)env(.)__FIREBASE_DEFAULTS_PATH__\r\n * The dots are in parens because certain compilers (Vite?) cannot\r\n * handle seeing that variable in comments.\r\n * See https://github.com/firebase/firebase-js-sdk/issues/6838\r\n */\r\nconst getDefaultsFromEnvVariable = () => {\r\n    if (typeof process === 'undefined' || typeof process.env === 'undefined') {\r\n        return;\r\n    }\r\n    const defaultsJsonString = process.env.__FIREBASE_DEFAULTS__;\r\n    if (defaultsJsonString) {\r\n        return JSON.parse(defaultsJsonString);\r\n    }\r\n};\r\nconst getDefaultsFromCookie = () => {\r\n    if (typeof document === 'undefined') {\r\n        return;\r\n    }\r\n    let match;\r\n    try {\r\n        match = document.cookie.match(/__FIREBASE_DEFAULTS__=([^;]+)/);\r\n    }\r\n    catch (e) {\r\n        // Some environments such as Angular Universal SSR have a\r\n        // `document` object but error on accessing `document.cookie`.\r\n        return;\r\n    }\r\n    const decoded = match && base64Decode(match[1]);\r\n    return decoded && JSON.parse(decoded);\r\n};\r\n/**\r\n * Get the __FIREBASE_DEFAULTS__ object. It checks in order:\r\n * (1) if such an object exists as a property of `globalThis`\r\n * (2) if such an object was provided on a shell environment variable\r\n * (3) if such an object exists in a cookie\r\n * @public\r\n */\r\nconst getDefaults = () => {\r\n    try {\r\n        return (getDefaultsFromGlobal() ||\r\n            getDefaultsFromEnvVariable() ||\r\n            getDefaultsFromCookie());\r\n    }\r\n    catch (e) {\r\n        /**\r\n         * Catch-all for being unable to get __FIREBASE_DEFAULTS__ due\r\n         * to any environment case we have not accounted for. Log to\r\n         * info instead of swallowing so we can find these unknown cases\r\n         * and add paths for them if needed.\r\n         */\r\n        console.info(`Unable to get __FIREBASE_DEFAULTS__ due to: ${e}`);\r\n        return;\r\n    }\r\n};\r\n/**\r\n * Returns emulator host stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a URL host formatted like `127.0.0.1:9999` or `[::1]:4000` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHost = (productName) => { var _a, _b; return (_b = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.emulatorHosts) === null || _b === void 0 ? void 0 : _b[productName]; };\r\n/**\r\n * Returns emulator hostname and port stored in the __FIREBASE_DEFAULTS__ object\r\n * for the given product.\r\n * @returns a pair of hostname and port like `[\"::1\", 4000]` if available\r\n * @public\r\n */\r\nconst getDefaultEmulatorHostnameAndPort = (productName) => {\r\n    const host = getDefaultEmulatorHost(productName);\r\n    if (!host) {\r\n        return undefined;\r\n    }\r\n    const separatorIndex = host.lastIndexOf(':'); // Finding the last since IPv6 addr also has colons.\r\n    if (separatorIndex <= 0 || separatorIndex + 1 === host.length) {\r\n        throw new Error(`Invalid host ${host} with no separate hostname and port!`);\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const port = parseInt(host.substring(separatorIndex + 1), 10);\r\n    if (host[0] === '[') {\r\n        // Bracket-quoted `[ipv6addr]:port` => return \"ipv6addr\" (without brackets).\r\n        return [host.substring(1, separatorIndex - 1), port];\r\n    }\r\n    else {\r\n        return [host.substring(0, separatorIndex), port];\r\n    }\r\n};\r\n/**\r\n * Returns Firebase app config stored in the __FIREBASE_DEFAULTS__ object.\r\n * @public\r\n */\r\nconst getDefaultAppConfig = () => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.config; };\r\n/**\r\n * Returns an experimental setting on the __FIREBASE_DEFAULTS__ object (properties\r\n * prefixed by \"_\")\r\n * @public\r\n */\r\nconst getExperimentalSetting = (name) => { var _a; return (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a[`_${name}`]; };\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Deferred {\r\n    constructor() {\r\n        this.reject = () => { };\r\n        this.resolve = () => { };\r\n        this.promise = new Promise((resolve, reject) => {\r\n            this.resolve = resolve;\r\n            this.reject = reject;\r\n        });\r\n    }\r\n    /**\r\n     * Our API internals are not promisified and cannot because our callback APIs have subtle expectations around\r\n     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\r\n     * and returns a node-style callback which will resolve or reject the Deferred's promise.\r\n     */\r\n    wrapCallback(callback) {\r\n        return (error, value) => {\r\n            if (error) {\r\n                this.reject(error);\r\n            }\r\n            else {\r\n                this.resolve(value);\r\n            }\r\n            if (typeof callback === 'function') {\r\n                // Attaching noop handler just in case developer wasn't expecting\r\n                // promises\r\n                this.promise.catch(() => { });\r\n                // Some of our callbacks don't expect a value and our own tests\r\n                // assert that the parameter length is 1\r\n                if (callback.length === 1) {\r\n                    callback(error);\r\n                }\r\n                else {\r\n                    callback(error, value);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createMockUserToken(token, projectId) {\r\n    if (token.uid) {\r\n        throw new Error('The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.');\r\n    }\r\n    // Unsecured JWTs use \"none\" as the algorithm.\r\n    const header = {\r\n        alg: 'none',\r\n        type: 'JWT'\r\n    };\r\n    const project = projectId || 'demo-project';\r\n    const iat = token.iat || 0;\r\n    const sub = token.sub || token.user_id;\r\n    if (!sub) {\r\n        throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\r\n    }\r\n    const payload = Object.assign({ \r\n        // Set all required fields to decent defaults\r\n        iss: `https://securetoken.google.com/${project}`, aud: project, iat, exp: iat + 3600, auth_time: iat, sub, user_id: sub, firebase: {\r\n            sign_in_provider: 'custom',\r\n            identities: {}\r\n        } }, token);\r\n    // Unsecured JWTs use the empty string as a signature.\r\n    const signature = '';\r\n    return [\r\n        base64urlEncodeWithoutPadding(JSON.stringify(header)),\r\n        base64urlEncodeWithoutPadding(JSON.stringify(payload)),\r\n        signature\r\n    ].join('.');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns navigator.userAgent string or '' if it's not defined.\r\n * @return user agent string\r\n */\r\nfunction getUA() {\r\n    if (typeof navigator !== 'undefined' &&\r\n        typeof navigator['userAgent'] === 'string') {\r\n        return navigator['userAgent'];\r\n    }\r\n    else {\r\n        return '';\r\n    }\r\n}\r\n/**\r\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\r\n *\r\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\r\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\r\n * wait for a callback.\r\n */\r\nfunction isMobileCordova() {\r\n    return (typeof window !== 'undefined' &&\r\n        // @ts-ignore Setting up an broadly applicable index signature for Window\r\n        // just to deal with this case would probably be a bad idea.\r\n        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\r\n        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));\r\n}\r\n/**\r\n * Detect Node.js.\r\n *\r\n * @return true if Node.js environment is detected or specified.\r\n */\r\n// Node detection logic from: https://github.com/iliakan/detect-node/\r\nfunction isNode() {\r\n    var _a;\r\n    const forceEnvironment = (_a = getDefaults()) === null || _a === void 0 ? void 0 : _a.forceEnvironment;\r\n    if (forceEnvironment === 'node') {\r\n        return true;\r\n    }\r\n    else if (forceEnvironment === 'browser') {\r\n        return false;\r\n    }\r\n    try {\r\n        return (Object.prototype.toString.call(global.process) === '[object process]');\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Detect Browser Environment.\r\n * Note: This will return true for certain test frameworks that are incompletely\r\n * mimicking a browser, and should not lead to assuming all browser APIs are\r\n * available.\r\n */\r\nfunction isBrowser() {\r\n    return typeof window !== 'undefined' || isWebWorker();\r\n}\r\n/**\r\n * Detect Web Worker context.\r\n */\r\nfunction isWebWorker() {\r\n    return (typeof WorkerGlobalScope !== 'undefined' &&\r\n        typeof self !== 'undefined' &&\r\n        self instanceof WorkerGlobalScope);\r\n}\r\n/**\r\n * Detect Cloudflare Worker context.\r\n */\r\nfunction isCloudflareWorker() {\r\n    return (typeof navigator !== 'undefined' &&\r\n        navigator.userAgent === 'Cloudflare-Workers');\r\n}\r\nfunction isBrowserExtension() {\r\n    const runtime = typeof chrome === 'object'\r\n        ? chrome.runtime\r\n        : typeof browser === 'object'\r\n            ? browser.runtime\r\n            : undefined;\r\n    return typeof runtime === 'object' && runtime.id !== undefined;\r\n}\r\n/**\r\n * Detect React Native.\r\n *\r\n * @return true if ReactNative environment is detected.\r\n */\r\nfunction isReactNative() {\r\n    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');\r\n}\r\n/** Detects Electron apps. */\r\nfunction isElectron() {\r\n    return getUA().indexOf('Electron/') >= 0;\r\n}\r\n/** Detects Internet Explorer. */\r\nfunction isIE() {\r\n    const ua = getUA();\r\n    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\r\n}\r\n/** Detects Universal Windows Platform apps. */\r\nfunction isUWP() {\r\n    return getUA().indexOf('MSAppHost/') >= 0;\r\n}\r\n/**\r\n * Detect whether the current SDK build is the Node version.\r\n *\r\n * @return true if it's the Node SDK build.\r\n */\r\nfunction isNodeSdk() {\r\n    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\r\n}\r\n/** Returns true if we are running in Safari. */\r\nfunction isSafari() {\r\n    return (!isNode() &&\r\n        !!navigator.userAgent &&\r\n        navigator.userAgent.includes('Safari') &&\r\n        !navigator.userAgent.includes('Chrome'));\r\n}\r\n/**\r\n * This method checks if indexedDB is supported by current browser/service worker context\r\n * @return true if indexedDB is supported by current browser/service worker context\r\n */\r\nfunction isIndexedDBAvailable() {\r\n    try {\r\n        return typeof indexedDB === 'object';\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\r\n * if errors occur during the database open operation.\r\n *\r\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\r\n * private browsing)\r\n */\r\nfunction validateIndexedDBOpenable() {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let preExist = true;\r\n            const DB_CHECK_NAME = 'validate-browser-context-for-indexeddb-analytics-module';\r\n            const request = self.indexedDB.open(DB_CHECK_NAME);\r\n            request.onsuccess = () => {\r\n                request.result.close();\r\n                // delete database only when it doesn't pre-exist\r\n                if (!preExist) {\r\n                    self.indexedDB.deleteDatabase(DB_CHECK_NAME);\r\n                }\r\n                resolve(true);\r\n            };\r\n            request.onupgradeneeded = () => {\r\n                preExist = false;\r\n            };\r\n            request.onerror = () => {\r\n                var _a;\r\n                reject(((_a = request.error) === null || _a === void 0 ? void 0 : _a.message) || '');\r\n            };\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\n/**\r\n *\r\n * This method checks whether cookie is enabled within current browser\r\n * @return true if cookie is enabled within current browser\r\n */\r\nfunction areCookiesEnabled() {\r\n    if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Standardized Firebase Error.\r\n *\r\n * Usage:\r\n *\r\n *   // TypeScript string literals for type-safe codes\r\n *   type Err =\r\n *     'unknown' |\r\n *     'object-not-found'\r\n *     ;\r\n *\r\n *   // Closure enum for type-safe error codes\r\n *   // at-enum {string}\r\n *   var Err = {\r\n *     UNKNOWN: 'unknown',\r\n *     OBJECT_NOT_FOUND: 'object-not-found',\r\n *   }\r\n *\r\n *   let errors: Map<Err, string> = {\r\n *     'generic-error': \"Unknown error\",\r\n *     'file-not-found': \"Could not find file: {$file}\",\r\n *   };\r\n *\r\n *   // Type-safe function - must pass a valid error code as param.\r\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\r\n *\r\n *   ...\r\n *   throw error.create(Err.GENERIC);\r\n *   ...\r\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\r\n *   ...\r\n *   // Service: Could not file file: foo.txt (service/file-not-found).\r\n *\r\n *   catch (e) {\r\n *     assert(e.message === \"Could not find file: foo.txt.\");\r\n *     if ((e as FirebaseError)?.code === 'service/file-not-found') {\r\n *       console.log(\"Could not read file: \" + e['file']);\r\n *     }\r\n *   }\r\n */\r\nconst ERROR_NAME = 'FirebaseError';\r\n// Based on code from:\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\r\nclass FirebaseError extends Error {\r\n    constructor(\r\n    /** The error code for this error. */\r\n    code, message, \r\n    /** Custom data for this error. */\r\n    customData) {\r\n        super(message);\r\n        this.code = code;\r\n        this.customData = customData;\r\n        /** The custom name for all FirebaseErrors. */\r\n        this.name = ERROR_NAME;\r\n        // Fix For ES5\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(this, FirebaseError.prototype);\r\n        // Maintains proper stack trace for where our error was thrown.\r\n        // Only available on V8.\r\n        if (Error.captureStackTrace) {\r\n            Error.captureStackTrace(this, ErrorFactory.prototype.create);\r\n        }\r\n    }\r\n}\r\nclass ErrorFactory {\r\n    constructor(service, serviceName, errors) {\r\n        this.service = service;\r\n        this.serviceName = serviceName;\r\n        this.errors = errors;\r\n    }\r\n    create(code, ...data) {\r\n        const customData = data[0] || {};\r\n        const fullCode = `${this.service}/${code}`;\r\n        const template = this.errors[code];\r\n        const message = template ? replaceTemplate(template, customData) : 'Error';\r\n        // Service Name: Error message (service/code).\r\n        const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\r\n        const error = new FirebaseError(fullCode, fullMessage, customData);\r\n        return error;\r\n    }\r\n}\r\nfunction replaceTemplate(template, data) {\r\n    return template.replace(PATTERN, (_, key) => {\r\n        const value = data[key];\r\n        return value != null ? String(value) : `<${key}?>`;\r\n    });\r\n}\r\nconst PATTERN = /\\{\\$([^}]+)}/g;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Evaluates a JSON string into a javascript object.\r\n *\r\n * @param {string} str A string containing JSON.\r\n * @return {*} The javascript object representing the specified JSON.\r\n */\r\nfunction jsonEval(str) {\r\n    return JSON.parse(str);\r\n}\r\n/**\r\n * Returns JSON representing a javascript object.\r\n * @param {*} data JavaScript object to be stringified.\r\n * @return {string} The JSON contents of the object.\r\n */\r\nfunction stringify(data) {\r\n    return JSON.stringify(data);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Decodes a Firebase auth. token into constituent parts.\r\n *\r\n * Notes:\r\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst decode = function (token) {\r\n    let header = {}, claims = {}, data = {}, signature = '';\r\n    try {\r\n        const parts = token.split('.');\r\n        header = jsonEval(base64Decode(parts[0]) || '');\r\n        claims = jsonEval(base64Decode(parts[1]) || '');\r\n        signature = parts[2];\r\n        data = claims['d'] || {};\r\n        delete claims['d'];\r\n    }\r\n    catch (e) { }\r\n    return {\r\n        header,\r\n        claims,\r\n        data,\r\n        signature\r\n    };\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\r\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidTimestamp = function (token) {\r\n    const claims = decode(token).claims;\r\n    const now = Math.floor(new Date().getTime() / 1000);\r\n    let validSince = 0, validUntil = 0;\r\n    if (typeof claims === 'object') {\r\n        if (claims.hasOwnProperty('nbf')) {\r\n            validSince = claims['nbf'];\r\n        }\r\n        else if (claims.hasOwnProperty('iat')) {\r\n            validSince = claims['iat'];\r\n        }\r\n        if (claims.hasOwnProperty('exp')) {\r\n            validUntil = claims['exp'];\r\n        }\r\n        else {\r\n            // token will expire after 24h by default\r\n            validUntil = validSince + 86400;\r\n        }\r\n    }\r\n    return (!!now &&\r\n        !!validSince &&\r\n        !!validUntil &&\r\n        now >= validSince &&\r\n        now <= validUntil);\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\r\n *\r\n * Notes:\r\n * - May return null if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst issuedAtTime = function (token) {\r\n    const claims = decode(token).claims;\r\n    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\r\n        return claims['iat'];\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isValidFormat = function (token) {\r\n    const decoded = decode(token), claims = decoded.claims;\r\n    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\r\n};\r\n/**\r\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\r\n *\r\n * Notes:\r\n * - May return a false negative if there's no native base64 decoding support.\r\n * - Doesn't check if the token is actually valid.\r\n */\r\nconst isAdmin = function (token) {\r\n    const claims = decode(token).claims;\r\n    return typeof claims === 'object' && claims['admin'] === true;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction contains(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nfunction safeGet(obj, key) {\r\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction isEmpty(obj) {\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction map(obj, fn, contextObj) {\r\n    const res = {};\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            res[key] = fn.call(contextObj, obj[key], key, obj);\r\n        }\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Deep equal two objects. Support Arrays and Objects.\r\n */\r\nfunction deepEqual(a, b) {\r\n    if (a === b) {\r\n        return true;\r\n    }\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    for (const k of aKeys) {\r\n        if (!bKeys.includes(k)) {\r\n            return false;\r\n        }\r\n        const aProp = a[k];\r\n        const bProp = b[k];\r\n        if (isObject(aProp) && isObject(bProp)) {\r\n            if (!deepEqual(aProp, bProp)) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (aProp !== bProp) {\r\n            return false;\r\n        }\r\n    }\r\n    for (const k of bKeys) {\r\n        if (!aKeys.includes(k)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isObject(thing) {\r\n    return thing !== null && typeof thing === 'object';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Rejects if the given promise doesn't resolve in timeInMS milliseconds.\r\n * @internal\r\n */\r\nfunction promiseWithTimeout(promise, timeInMS = 2000) {\r\n    const deferredPromise = new Deferred();\r\n    setTimeout(() => deferredPromise.reject('timeout!'), timeInMS);\r\n    promise.then(deferredPromise.resolve, deferredPromise.reject);\r\n    return deferredPromise.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\r\n * params object (e.g. {arg: 'val', arg2: 'val2'})\r\n * Note: You must prepend it with ? when adding it to a URL.\r\n */\r\nfunction querystring(querystringParams) {\r\n    const params = [];\r\n    for (const [key, value] of Object.entries(querystringParams)) {\r\n        if (Array.isArray(value)) {\r\n            value.forEach(arrayVal => {\r\n                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));\r\n            });\r\n        }\r\n        else {\r\n            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n        }\r\n    }\r\n    return params.length ? '&' + params.join('&') : '';\r\n}\r\n/**\r\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\r\n * (e.g. {arg: 'val', arg2: 'val2'})\r\n */\r\nfunction querystringDecode(querystring) {\r\n    const obj = {};\r\n    const tokens = querystring.replace(/^\\?/, '').split('&');\r\n    tokens.forEach(token => {\r\n        if (token) {\r\n            const [key, value] = token.split('=');\r\n            obj[decodeURIComponent(key)] = decodeURIComponent(value);\r\n        }\r\n    });\r\n    return obj;\r\n}\r\n/**\r\n * Extract the query string part of a URL, including the leading question mark (if present).\r\n */\r\nfunction extractQuerystring(url) {\r\n    const queryStart = url.indexOf('?');\r\n    if (!queryStart) {\r\n        return '';\r\n    }\r\n    const fragmentStart = url.indexOf('#', queryStart);\r\n    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview SHA-1 cryptographic hash.\r\n * Variable names follow the notation in FIPS PUB 180-3:\r\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\r\n *\r\n * Usage:\r\n *   var sha1 = new sha1();\r\n *   sha1.update(bytes);\r\n *   var hash = sha1.digest();\r\n *\r\n * Performance:\r\n *   Chrome 23:   ~400 Mbit/s\r\n *   Firefox 16:  ~250 Mbit/s\r\n *\r\n */\r\n/**\r\n * SHA-1 cryptographic hash constructor.\r\n *\r\n * The properties declared here are discussed in the above algorithm document.\r\n * @constructor\r\n * @final\r\n * @struct\r\n */\r\nclass Sha1 {\r\n    constructor() {\r\n        /**\r\n         * Holds the previous values of accumulated variables a-e in the compress_\r\n         * function.\r\n         * @private\r\n         */\r\n        this.chain_ = [];\r\n        /**\r\n         * A buffer holding the partially computed hash result.\r\n         * @private\r\n         */\r\n        this.buf_ = [];\r\n        /**\r\n         * An array of 80 bytes, each a part of the message to be hashed.  Referred to\r\n         * as the message schedule in the docs.\r\n         * @private\r\n         */\r\n        this.W_ = [];\r\n        /**\r\n         * Contains data needed to pad messages less than 64 bytes.\r\n         * @private\r\n         */\r\n        this.pad_ = [];\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.inbuf_ = 0;\r\n        /**\r\n         * @private {number}\r\n         */\r\n        this.total_ = 0;\r\n        this.blockSize = 512 / 8;\r\n        this.pad_[0] = 128;\r\n        for (let i = 1; i < this.blockSize; ++i) {\r\n            this.pad_[i] = 0;\r\n        }\r\n        this.reset();\r\n    }\r\n    reset() {\r\n        this.chain_[0] = 0x67452301;\r\n        this.chain_[1] = 0xefcdab89;\r\n        this.chain_[2] = 0x98badcfe;\r\n        this.chain_[3] = 0x10325476;\r\n        this.chain_[4] = 0xc3d2e1f0;\r\n        this.inbuf_ = 0;\r\n        this.total_ = 0;\r\n    }\r\n    /**\r\n     * Internal compress helper function.\r\n     * @param buf Block to compress.\r\n     * @param offset Offset of the block in the buffer.\r\n     * @private\r\n     */\r\n    compress_(buf, offset) {\r\n        if (!offset) {\r\n            offset = 0;\r\n        }\r\n        const W = this.W_;\r\n        // get 16 big endian words\r\n        if (typeof buf === 'string') {\r\n            for (let i = 0; i < 16; i++) {\r\n                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\r\n                // have a bug that turns the post-increment ++ operator into pre-increment\r\n                // during JIT compilation.  We have code that depends heavily on SHA-1 for\r\n                // correctness and which is affected by this bug, so I've removed all uses\r\n                // of post-increment ++ in which the result value is used.  We can revert\r\n                // this change once the Safari bug\r\n                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\r\n                // most clients have been updated.\r\n                W[i] =\r\n                    (buf.charCodeAt(offset) << 24) |\r\n                        (buf.charCodeAt(offset + 1) << 16) |\r\n                        (buf.charCodeAt(offset + 2) << 8) |\r\n                        buf.charCodeAt(offset + 3);\r\n                offset += 4;\r\n            }\r\n        }\r\n        else {\r\n            for (let i = 0; i < 16; i++) {\r\n                W[i] =\r\n                    (buf[offset] << 24) |\r\n                        (buf[offset + 1] << 16) |\r\n                        (buf[offset + 2] << 8) |\r\n                        buf[offset + 3];\r\n                offset += 4;\r\n            }\r\n        }\r\n        // expand to 80 words\r\n        for (let i = 16; i < 80; i++) {\r\n            const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\r\n        }\r\n        let a = this.chain_[0];\r\n        let b = this.chain_[1];\r\n        let c = this.chain_[2];\r\n        let d = this.chain_[3];\r\n        let e = this.chain_[4];\r\n        let f, k;\r\n        // TODO(user): Try to unroll this loop to speed up the computation.\r\n        for (let i = 0; i < 80; i++) {\r\n            if (i < 40) {\r\n                if (i < 20) {\r\n                    f = d ^ (b & (c ^ d));\r\n                    k = 0x5a827999;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0x6ed9eba1;\r\n                }\r\n            }\r\n            else {\r\n                if (i < 60) {\r\n                    f = (b & c) | (d & (b | c));\r\n                    k = 0x8f1bbcdc;\r\n                }\r\n                else {\r\n                    f = b ^ c ^ d;\r\n                    k = 0xca62c1d6;\r\n                }\r\n            }\r\n            const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\r\n            e = d;\r\n            d = c;\r\n            c = ((b << 30) | (b >>> 2)) & 0xffffffff;\r\n            b = a;\r\n            a = t;\r\n        }\r\n        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\r\n        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\r\n        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\r\n        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\r\n        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\r\n    }\r\n    update(bytes, length) {\r\n        // TODO(johnlenz): tighten the function signature and remove this check\r\n        if (bytes == null) {\r\n            return;\r\n        }\r\n        if (length === undefined) {\r\n            length = bytes.length;\r\n        }\r\n        const lengthMinusBlock = length - this.blockSize;\r\n        let n = 0;\r\n        // Using local instead of member variables gives ~5% speedup on Firefox 16.\r\n        const buf = this.buf_;\r\n        let inbuf = this.inbuf_;\r\n        // The outer while loop should execute at most twice.\r\n        while (n < length) {\r\n            // When we have no data in the block to top up, we can directly process the\r\n            // input buffer (assuming it contains sufficient data). This gives ~25%\r\n            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\r\n            // the data is provided in large chunks (or in multiples of 64 bytes).\r\n            if (inbuf === 0) {\r\n                while (n <= lengthMinusBlock) {\r\n                    this.compress_(bytes, n);\r\n                    n += this.blockSize;\r\n                }\r\n            }\r\n            if (typeof bytes === 'string') {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes.charCodeAt(n);\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                while (n < length) {\r\n                    buf[inbuf] = bytes[n];\r\n                    ++inbuf;\r\n                    ++n;\r\n                    if (inbuf === this.blockSize) {\r\n                        this.compress_(buf);\r\n                        inbuf = 0;\r\n                        // Jump to the outer loop so we use the full-block optimization.\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.inbuf_ = inbuf;\r\n        this.total_ += length;\r\n    }\r\n    /** @override */\r\n    digest() {\r\n        const digest = [];\r\n        let totalBits = this.total_ * 8;\r\n        // Add pad 0x80 0x00*.\r\n        if (this.inbuf_ < 56) {\r\n            this.update(this.pad_, 56 - this.inbuf_);\r\n        }\r\n        else {\r\n            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\r\n        }\r\n        // Add # bits.\r\n        for (let i = this.blockSize - 1; i >= 56; i--) {\r\n            this.buf_[i] = totalBits & 255;\r\n            totalBits /= 256; // Don't use bit-shifting here!\r\n        }\r\n        this.compress_(this.buf_);\r\n        let n = 0;\r\n        for (let i = 0; i < 5; i++) {\r\n            for (let j = 24; j >= 0; j -= 8) {\r\n                digest[n] = (this.chain_[i] >> j) & 255;\r\n                ++n;\r\n            }\r\n        }\r\n        return digest;\r\n    }\r\n}\n\n/**\r\n * Helper to make a Subscribe function (just like Promise helps make a\r\n * Thenable).\r\n *\r\n * @param executor Function which can make calls to a single Observer\r\n *     as a proxy.\r\n * @param onNoObservers Callback when count of Observers goes to zero.\r\n */\r\nfunction createSubscribe(executor, onNoObservers) {\r\n    const proxy = new ObserverProxy(executor, onNoObservers);\r\n    return proxy.subscribe.bind(proxy);\r\n}\r\n/**\r\n * Implement fan-out for any number of Observers attached via a subscribe\r\n * function.\r\n */\r\nclass ObserverProxy {\r\n    /**\r\n     * @param executor Function which can make calls to a single Observer\r\n     *     as a proxy.\r\n     * @param onNoObservers Callback when count of Observers goes to zero.\r\n     */\r\n    constructor(executor, onNoObservers) {\r\n        this.observers = [];\r\n        this.unsubscribes = [];\r\n        this.observerCount = 0;\r\n        // Micro-task scheduling by calling task.then().\r\n        this.task = Promise.resolve();\r\n        this.finalized = false;\r\n        this.onNoObservers = onNoObservers;\r\n        // Call the executor asynchronously so subscribers that are called\r\n        // synchronously after the creation of the subscribe function\r\n        // can still receive the very first value generated in the executor.\r\n        this.task\r\n            .then(() => {\r\n            executor(this);\r\n        })\r\n            .catch(e => {\r\n            this.error(e);\r\n        });\r\n    }\r\n    next(value) {\r\n        this.forEachObserver((observer) => {\r\n            observer.next(value);\r\n        });\r\n    }\r\n    error(error) {\r\n        this.forEachObserver((observer) => {\r\n            observer.error(error);\r\n        });\r\n        this.close(error);\r\n    }\r\n    complete() {\r\n        this.forEachObserver((observer) => {\r\n            observer.complete();\r\n        });\r\n        this.close();\r\n    }\r\n    /**\r\n     * Subscribe function that can be used to add an Observer to the fan-out list.\r\n     *\r\n     * - We require that no event is sent to a subscriber synchronously to their\r\n     *   call to subscribe().\r\n     */\r\n    subscribe(nextOrObserver, error, complete) {\r\n        let observer;\r\n        if (nextOrObserver === undefined &&\r\n            error === undefined &&\r\n            complete === undefined) {\r\n            throw new Error('Missing Observer.');\r\n        }\r\n        // Assemble an Observer object when passed as callback functions.\r\n        if (implementsAnyMethods(nextOrObserver, [\r\n            'next',\r\n            'error',\r\n            'complete'\r\n        ])) {\r\n            observer = nextOrObserver;\r\n        }\r\n        else {\r\n            observer = {\r\n                next: nextOrObserver,\r\n                error,\r\n                complete\r\n            };\r\n        }\r\n        if (observer.next === undefined) {\r\n            observer.next = noop;\r\n        }\r\n        if (observer.error === undefined) {\r\n            observer.error = noop;\r\n        }\r\n        if (observer.complete === undefined) {\r\n            observer.complete = noop;\r\n        }\r\n        const unsub = this.unsubscribeOne.bind(this, this.observers.length);\r\n        // Attempt to subscribe to a terminated Observable - we\r\n        // just respond to the Observer with the final error or complete\r\n        // event.\r\n        if (this.finalized) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this.task.then(() => {\r\n                try {\r\n                    if (this.finalError) {\r\n                        observer.error(this.finalError);\r\n                    }\r\n                    else {\r\n                        observer.complete();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // nothing\r\n                }\r\n                return;\r\n            });\r\n        }\r\n        this.observers.push(observer);\r\n        return unsub;\r\n    }\r\n    // Unsubscribe is synchronous - we guarantee that no events are sent to\r\n    // any unsubscribed Observer.\r\n    unsubscribeOne(i) {\r\n        if (this.observers === undefined || this.observers[i] === undefined) {\r\n            return;\r\n        }\r\n        delete this.observers[i];\r\n        this.observerCount -= 1;\r\n        if (this.observerCount === 0 && this.onNoObservers !== undefined) {\r\n            this.onNoObservers(this);\r\n        }\r\n    }\r\n    forEachObserver(fn) {\r\n        if (this.finalized) {\r\n            // Already closed by previous event....just eat the additional values.\r\n            return;\r\n        }\r\n        // Since sendOne calls asynchronously - there is no chance that\r\n        // this.observers will become undefined.\r\n        for (let i = 0; i < this.observers.length; i++) {\r\n            this.sendOne(i, fn);\r\n        }\r\n    }\r\n    // Call the Observer via one of it's callback function. We are careful to\r\n    // confirm that the observe has not been unsubscribed since this asynchronous\r\n    // function had been queued.\r\n    sendOne(i, fn) {\r\n        // Execute the callback asynchronously\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            if (this.observers !== undefined && this.observers[i] !== undefined) {\r\n                try {\r\n                    fn(this.observers[i]);\r\n                }\r\n                catch (e) {\r\n                    // Ignore exceptions raised in Observers or missing methods of an\r\n                    // Observer.\r\n                    // Log error to console. b/31404806\r\n                    if (typeof console !== 'undefined' && console.error) {\r\n                        console.error(e);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n    close(err) {\r\n        if (this.finalized) {\r\n            return;\r\n        }\r\n        this.finalized = true;\r\n        if (err !== undefined) {\r\n            this.finalError = err;\r\n        }\r\n        // Proxy is no longer needed - garbage collect references\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.task.then(() => {\r\n            this.observers = undefined;\r\n            this.onNoObservers = undefined;\r\n        });\r\n    }\r\n}\r\n/** Turn synchronous function into one called asynchronously. */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(fn, onError) {\r\n    return (...args) => {\r\n        Promise.resolve(true)\r\n            .then(() => {\r\n            fn(...args);\r\n        })\r\n            .catch((error) => {\r\n            if (onError) {\r\n                onError(error);\r\n            }\r\n        });\r\n    };\r\n}\r\n/**\r\n * Return true if the object passed in implements any of the named methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    for (const method of methods) {\r\n        if (method in obj && typeof obj[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction noop() {\r\n    // do nothing\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Check to make sure the appropriate number of arguments are provided for a public function.\r\n * Throws an error if it fails.\r\n *\r\n * @param fnName The function name\r\n * @param minCount The minimum number of arguments to allow for the function call\r\n * @param maxCount The maximum number of argument to allow for the function call\r\n * @param argCount The actual number of arguments provided.\r\n */\r\nconst validateArgCount = function (fnName, minCount, maxCount, argCount) {\r\n    let argError;\r\n    if (argCount < minCount) {\r\n        argError = 'at least ' + minCount;\r\n    }\r\n    else if (argCount > maxCount) {\r\n        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\r\n    }\r\n    if (argError) {\r\n        const error = fnName +\r\n            ' failed: Was called with ' +\r\n            argCount +\r\n            (argCount === 1 ? ' argument.' : ' arguments.') +\r\n            ' Expects ' +\r\n            argError +\r\n            '.';\r\n        throw new Error(error);\r\n    }\r\n};\r\n/**\r\n * Generates a string to prefix an error message about failed argument validation\r\n *\r\n * @param fnName The function name\r\n * @param argName The name of the argument\r\n * @return The prefix to add to the error thrown for validation.\r\n */\r\nfunction errorPrefix(fnName, argName) {\r\n    return `${fnName} failed: ${argName} argument `;\r\n}\r\n/**\r\n * @param fnName\r\n * @param argumentNumber\r\n * @param namespace\r\n * @param optional\r\n */\r\nfunction validateNamespace(fnName, namespace, optional) {\r\n    if (optional && !namespace) {\r\n        return;\r\n    }\r\n    if (typeof namespace !== 'string') {\r\n        //TODO: I should do more validation here. We only allow certain chars in namespaces.\r\n        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');\r\n    }\r\n}\r\nfunction validateCallback(fnName, argumentName, \r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\ncallback, optional) {\r\n    if (optional && !callback) {\r\n        return;\r\n    }\r\n    if (typeof callback !== 'function') {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');\r\n    }\r\n}\r\nfunction validateContextObject(fnName, argumentName, context, optional) {\r\n    if (optional && !context) {\r\n        return;\r\n    }\r\n    if (typeof context !== 'object' || context === null) {\r\n        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\r\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\r\n// so it's been modified.\r\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\r\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\r\n// use 2 characters in JavaScript.  All 4-byte UTF-8 characters begin with a first\r\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\r\n// pair).\r\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\r\n/**\r\n * @param {string} str\r\n * @return {Array}\r\n */\r\nconst stringToByteArray = function (str) {\r\n    const out = [];\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        let c = str.charCodeAt(i);\r\n        // Is this the lead surrogate in a surrogate pair?\r\n        if (c >= 0xd800 && c <= 0xdbff) {\r\n            const high = c - 0xd800; // the high 10 bits.\r\n            i++;\r\n            assert(i < str.length, 'Surrogate pair missing trail surrogate.');\r\n            const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\r\n            c = 0x10000 + (high << 10) + low;\r\n        }\r\n        if (c < 128) {\r\n            out[p++] = c;\r\n        }\r\n        else if (c < 2048) {\r\n            out[p++] = (c >> 6) | 192;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else if (c < 65536) {\r\n            out[p++] = (c >> 12) | 224;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n        else {\r\n            out[p++] = (c >> 18) | 240;\r\n            out[p++] = ((c >> 12) & 63) | 128;\r\n            out[p++] = ((c >> 6) & 63) | 128;\r\n            out[p++] = (c & 63) | 128;\r\n        }\r\n    }\r\n    return out;\r\n};\r\n/**\r\n * Calculate length without actually converting; useful for doing cheaper validation.\r\n * @param {string} str\r\n * @return {number}\r\n */\r\nconst stringLength = function (str) {\r\n    let p = 0;\r\n    for (let i = 0; i < str.length; i++) {\r\n        const c = str.charCodeAt(i);\r\n        if (c < 128) {\r\n            p++;\r\n        }\r\n        else if (c < 2048) {\r\n            p += 2;\r\n        }\r\n        else if (c >= 0xd800 && c <= 0xdbff) {\r\n            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\r\n            p += 4;\r\n            i++; // skip trail surrogate.\r\n        }\r\n        else {\r\n            p += 3;\r\n        }\r\n    }\r\n    return p;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2022 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n * Generates a new uuid.\r\n * @public\r\n */\r\nconst uuidv4 = function () {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n        const r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The amount of milliseconds to exponentially increase.\r\n */\r\nconst DEFAULT_INTERVAL_MILLIS = 1000;\r\n/**\r\n * The factor to backoff by.\r\n * Should be a number greater than 1.\r\n */\r\nconst DEFAULT_BACKOFF_FACTOR = 2;\r\n/**\r\n * The maximum milliseconds to increase to.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\r\n/**\r\n * The percentage of backoff time to randomize by.\r\n * See\r\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\r\n * for context.\r\n *\r\n * <p>Visible for testing\r\n */\r\nconst RANDOM_FACTOR = 0.5;\r\n/**\r\n * Based on the backoff method from\r\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\r\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\r\n */\r\nfunction calculateBackoffMillis(backoffCount, intervalMillis = DEFAULT_INTERVAL_MILLIS, backoffFactor = DEFAULT_BACKOFF_FACTOR) {\r\n    // Calculates an exponentially increasing value.\r\n    // Deviation: calculates value from count and a constant interval, so we only need to save value\r\n    // and count to restore state.\r\n    const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\r\n    // A random \"fuzz\" to avoid waves of retries.\r\n    // Deviation: randomFactor is required.\r\n    const randomWait = Math.round(\r\n    // A fraction of the backoff value to add/subtract.\r\n    // Deviation: changes multiplication order to improve readability.\r\n    RANDOM_FACTOR *\r\n        currBaseValue *\r\n        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\r\n        // if we add or subtract.\r\n        (Math.random() - 0.5) *\r\n        2);\r\n    // Limits backoff to max to avoid effectively permanent backoff.\r\n    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provide English ordinal letters after a number\r\n */\r\nfunction ordinal(i) {\r\n    if (!Number.isFinite(i)) {\r\n        return `${i}`;\r\n    }\r\n    return i + indicator(i);\r\n}\r\nfunction indicator(i) {\r\n    i = Math.abs(i);\r\n    const cent = i % 100;\r\n    if (cent >= 10 && cent <= 20) {\r\n        return 'th';\r\n    }\r\n    const dec = i % 10;\r\n    if (dec === 1) {\r\n        return 'st';\r\n    }\r\n    if (dec === 2) {\r\n        return 'nd';\r\n    }\r\n    if (dec === 3) {\r\n        return 'rd';\r\n    }\r\n    return 'th';\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getModularInstance(service) {\r\n    if (service && service._delegate) {\r\n        return service._delegate;\r\n    }\r\n    else {\r\n        return service;\r\n    }\r\n}\n\nexport { CONSTANTS, DecodeBase64StringError, Deferred, ErrorFactory, FirebaseError, MAX_VALUE_MILLIS, RANDOM_FACTOR, Sha1, areCookiesEnabled, assert, assertionError, async, base64, base64Decode, base64Encode, base64urlEncodeWithoutPadding, calculateBackoffMillis, contains, createMockUserToken, createSubscribe, decode, deepCopy, deepEqual, deepExtend, errorPrefix, extractQuerystring, getDefaultAppConfig, getDefaultEmulatorHost, getDefaultEmulatorHostnameAndPort, getDefaults, getExperimentalSetting, getGlobal, getModularInstance, getUA, isAdmin, isBrowser, isBrowserExtension, isCloudflareWorker, isElectron, isEmpty, isIE, isIndexedDBAvailable, isMobileCordova, isNode, isNodeSdk, isReactNative, isSafari, isUWP, isValidFormat, isValidTimestamp, isWebWorker, issuedAtTime, jsonEval, map, ordinal, promiseWithTimeout, querystring, querystringDecode, safeGet, stringLength, stringToByteArray, stringify, uuidv4, validateArgCount, validateCallback, validateContextObject, validateIndexedDBOpenable, validateNamespace };\n//# sourceMappingURL=index.esm2017.js.map\n","import { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass Component {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    constructor(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    setInstantiationMode(mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    }\r\n    setMultipleInstances(multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    }\r\n    setServiceProps(props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    }\r\n    setInstanceCreatedCallback(callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nclass Provider {\r\n    constructor(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide multiple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    get(identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            const deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    const instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    }\r\n    getImmediate(options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        const optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/cannot be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(`Service ${this.name} is not available`);\r\n            }\r\n        }\r\n    }\r\n    getComponent() {\r\n        return this.component;\r\n    }\r\n    setComponent(component) {\r\n        if (component.name !== this.name) {\r\n            throw Error(`Mismatching Component ${component.name} for Provider ${this.name}.`);\r\n        }\r\n        if (this.component) {\r\n            throw Error(`Component for ${this.name} has already been provided`);\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        // Create service instances for the pending promises and resolve them\r\n        // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n        // and all promises with resolve with it regardless of the identifier.\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            try {\r\n                // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                const instance = this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n            catch (e) {\r\n                // when the instance factory throws an exception, it should not cause\r\n                // a fatal error. We just leave the promise unresolved.\r\n            }\r\n        }\r\n    }\r\n    clearInstance(identifier = DEFAULT_ENTRY_NAME) {\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    }\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    async delete() {\r\n        const services = Array.from(this.instances.values());\r\n        await Promise.all([\r\n            ...services\r\n                .filter(service => 'INTERNAL' in service) // legacy services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service.INTERNAL.delete()),\r\n            ...services\r\n                .filter(service => '_delete' in service) // modularized services\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                .map(service => service._delete())\r\n        ]);\r\n    }\r\n    isComponentSet() {\r\n        return this.component != null;\r\n    }\r\n    isInitialized(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instances.has(identifier);\r\n    }\r\n    getOptions(identifier = DEFAULT_ENTRY_NAME) {\r\n        return this.instancesOptions.get(identifier) || {};\r\n    }\r\n    initialize(opts = {}) {\r\n        const { options = {} } = opts;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(`${this.name}(${normalizedIdentifier}) has already been initialized`);\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(`Component ${this.name} has not been registered yet`);\r\n        }\r\n        const instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options\r\n        });\r\n        // resolve any pending promise waiting for the service instance\r\n        for (const [instanceIdentifier, instanceDeferred] of this.instancesDeferred.entries()) {\r\n            const normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n            if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                instanceDeferred.resolve(instance);\r\n            }\r\n        }\r\n        return instance;\r\n    }\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    onInit(callback, identifier) {\r\n        var _a;\r\n        const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        const existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        const existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return () => {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    }\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    invokeOnInitCallbacks(instance, identifier) {\r\n        const callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        for (const callback of callbacks) {\r\n            try {\r\n                callback(instance, identifier);\r\n            }\r\n            catch (_a) {\r\n                // ignore errors in the onInit callback\r\n            }\r\n        }\r\n    }\r\n    getOrInitializeService({ instanceIdentifier, options = {} }) {\r\n        let instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_a) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    }\r\n    normalizeInstanceIdentifier(identifier = DEFAULT_ENTRY_NAME) {\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    }\r\n    shouldAutoInitialize() {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n    }\r\n}\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nclass ComponentContainer {\r\n    constructor(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    addComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(`Component ${component.name} has already been registered with ${this.name}`);\r\n        }\r\n        provider.setComponent(component);\r\n    }\r\n    addOrOverwriteComponent(component) {\r\n        const provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    }\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    getProvider(name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        const provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    }\r\n    getProviders() {\r\n        return Array.from(this.providers.values());\r\n    }\r\n}\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm2017.js.map\n","/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nconst instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nconst levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nconst defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nconst ConsoleMethod = {\r\n    [LogLevel.DEBUG]: 'log',\r\n    [LogLevel.VERBOSE]: 'log',\r\n    [LogLevel.INFO]: 'info',\r\n    [LogLevel.WARN]: 'warn',\r\n    [LogLevel.ERROR]: 'error'\r\n};\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nconst defaultLogHandler = (instance, logType, ...args) => {\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    const now = new Date().toISOString();\r\n    const method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method](`[${now}]  ${instance.name}:`, ...args);\r\n    }\r\n    else {\r\n        throw new Error(`Attempted to log a message with an invalid logType (value: ${logType})`);\r\n    }\r\n};\r\nclass Logger {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    constructor(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    get logLevel() {\r\n        return this._logLevel;\r\n    }\r\n    set logLevel(val) {\r\n        if (!(val in LogLevel)) {\r\n            throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\r\n        }\r\n        this._logLevel = val;\r\n    }\r\n    // Workaround for setter/getter having to be the same type.\r\n    setLogLevel(val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    }\r\n    get logHandler() {\r\n        return this._logHandler;\r\n    }\r\n    set logHandler(val) {\r\n        if (typeof val !== 'function') {\r\n            throw new TypeError('Value assigned to `logHandler` must be a function');\r\n        }\r\n        this._logHandler = val;\r\n    }\r\n    get userLogHandler() {\r\n        return this._userLogHandler;\r\n    }\r\n    set userLogHandler(val) {\r\n        this._userLogHandler = val;\r\n    }\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    debug(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\r\n        this._logHandler(this, LogLevel.DEBUG, ...args);\r\n    }\r\n    log(...args) {\r\n        this._userLogHandler &&\r\n            this._userLogHandler(this, LogLevel.VERBOSE, ...args);\r\n        this._logHandler(this, LogLevel.VERBOSE, ...args);\r\n    }\r\n    info(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\r\n        this._logHandler(this, LogLevel.INFO, ...args);\r\n    }\r\n    warn(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\r\n        this._logHandler(this, LogLevel.WARN, ...args);\r\n    }\r\n    error(...args) {\r\n        this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\r\n        this._logHandler(this, LogLevel.ERROR, ...args);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    instances.forEach(inst => {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    for (const instance of instances) {\r\n        let customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = (instance, level, ...args) => {\r\n                const message = args\r\n                    .map(arg => {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(arg => arg)\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message,\r\n                        args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm2017.js.map\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, isBrowser, isWebWorker, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$q = \"@firebase/app\";\nconst version$1 = \"0.10.13\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$p = \"@firebase/app-compat\";\n\nconst name$o = \"@firebase/analytics-compat\";\n\nconst name$n = \"@firebase/analytics\";\n\nconst name$m = \"@firebase/app-check-compat\";\n\nconst name$l = \"@firebase/app-check\";\n\nconst name$k = \"@firebase/auth\";\n\nconst name$j = \"@firebase/auth-compat\";\n\nconst name$i = \"@firebase/database\";\n\nconst name$h = \"@firebase/data-connect\";\n\nconst name$g = \"@firebase/database-compat\";\n\nconst name$f = \"@firebase/functions\";\n\nconst name$e = \"@firebase/functions-compat\";\n\nconst name$d = \"@firebase/installations\";\n\nconst name$c = \"@firebase/installations-compat\";\n\nconst name$b = \"@firebase/messaging\";\n\nconst name$a = \"@firebase/messaging-compat\";\n\nconst name$9 = \"@firebase/performance\";\n\nconst name$8 = \"@firebase/performance-compat\";\n\nconst name$7 = \"@firebase/remote-config\";\n\nconst name$6 = \"@firebase/remote-config-compat\";\n\nconst name$5 = \"@firebase/storage\";\n\nconst name$4 = \"@firebase/storage-compat\";\n\nconst name$3 = \"@firebase/firestore\";\n\nconst name$2 = \"@firebase/vertexai-preview\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.14.1\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$q]: 'fire-core',\r\n    [name$p]: 'fire-core-compat',\r\n    [name$n]: 'fire-analytics',\r\n    [name$o]: 'fire-analytics-compat',\r\n    [name$l]: 'fire-app-check',\r\n    [name$m]: 'fire-app-check-compat',\r\n    [name$k]: 'fire-auth',\r\n    [name$j]: 'fire-auth-compat',\r\n    [name$i]: 'fire-rtdb',\r\n    [name$h]: 'fire-data-connect',\r\n    [name$g]: 'fire-rtdb-compat',\r\n    [name$f]: 'fire-fn',\r\n    [name$e]: 'fire-fn-compat',\r\n    [name$d]: 'fire-iid',\r\n    [name$c]: 'fire-iid-compat',\r\n    [name$b]: 'fire-fcm',\r\n    [name$a]: 'fire-fcm-compat',\r\n    [name$9]: 'fire-perf',\r\n    [name$8]: 'fire-perf-compat',\r\n    [name$7]: 'fire-rc',\r\n    [name$6]: 'fire-rc-compat',\r\n    [name$5]: 'fire-gcs',\r\n    [name$4]: 'fire-gcs-compat',\r\n    [name$3]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    [name$2]: 'fire-vertex',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * @internal\r\n */\r\nconst _serverApps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    for (const serverApp of _serverApps.values()) {\r\n        _addComponent(serverApp, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseApp(obj) {\r\n    return obj.options !== undefined;\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseServerApp(obj) {\r\n    return obj.settings !== undefined;\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\r\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseServerAppImpl extends FirebaseAppImpl {\r\n    constructor(options, serverConfig, name, container) {\r\n        // Build configuration parameters for the FirebaseAppImpl base class.\r\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined\r\n            ? serverConfig.automaticDataCollectionEnabled\r\n            : false;\r\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\r\n        const config = {\r\n            name,\r\n            automaticDataCollectionEnabled\r\n        };\r\n        if (options.apiKey !== undefined) {\r\n            // Construct the parent FirebaseAppImp object.\r\n            super(options, config, container);\r\n        }\r\n        else {\r\n            const appImpl = options;\r\n            super(appImpl.options, config, container);\r\n        }\r\n        // Now construct the data for the FirebaseServerAppImpl.\r\n        this._serverConfig = Object.assign({ automaticDataCollectionEnabled }, serverConfig);\r\n        this._finalizationRegistry = null;\r\n        if (typeof FinalizationRegistry !== 'undefined') {\r\n            this._finalizationRegistry = new FinalizationRegistry(() => {\r\n                this.automaticCleanup();\r\n            });\r\n        }\r\n        this._refCount = 0;\r\n        this.incRefCount(this._serverConfig.releaseOnDeref);\r\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegistry\r\n        // will never trigger.\r\n        this._serverConfig.releaseOnDeref = undefined;\r\n        serverConfig.releaseOnDeref = undefined;\r\n        registerVersion(name$q, version$1, 'serverapp');\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    get refCount() {\r\n        return this._refCount;\r\n    }\r\n    // Increment the reference count of this server app. If an object is provided, register it\r\n    // with the finalization registry.\r\n    incRefCount(obj) {\r\n        if (this.isDeleted) {\r\n            return;\r\n        }\r\n        this._refCount++;\r\n        if (obj !== undefined && this._finalizationRegistry !== null) {\r\n            this._finalizationRegistry.register(obj, this);\r\n        }\r\n    }\r\n    // Decrement the reference count.\r\n    decRefCount() {\r\n        if (this.isDeleted) {\r\n            return 0;\r\n        }\r\n        return --this._refCount;\r\n    }\r\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\r\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\r\n    // handles this is in deleteApp(...).\r\n    automaticCleanup() {\r\n        void deleteApp(this);\r\n    }\r\n    get settings() {\r\n        this.checkDestroyed();\r\n        return this._serverConfig;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\nfunction initializeServerApp(_options, _serverAppConfig) {\r\n    if (isBrowser() && !isWebWorker()) {\r\n        // FirebaseServerApp isn't designed to be run in browsers.\r\n        throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\r\n    }\r\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\r\n        _serverAppConfig.automaticDataCollectionEnabled = false;\r\n    }\r\n    let appOptions;\r\n    if (_isFirebaseApp(_options)) {\r\n        appOptions = _options.options;\r\n    }\r\n    else {\r\n        appOptions = _options;\r\n    }\r\n    // Build an app name based on a hash of the configuration options.\r\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\r\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\r\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\r\n    if (nameObj.releaseOnDeref !== undefined) {\r\n        delete nameObj.releaseOnDeref;\r\n    }\r\n    const hashCode = (s) => {\r\n        return [...s].reduce((hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0, 0);\r\n    };\r\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\r\n        if (typeof FinalizationRegistry === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\r\n        }\r\n    }\r\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\r\n    const existingApp = _serverApps.get(nameString);\r\n    if (existingApp) {\r\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\r\n        return existingApp;\r\n    }\r\n    const container = new ComponentContainer(nameString);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\r\n    _serverApps.set(nameString, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    let cleanupProviders = false;\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        cleanupProviders = true;\r\n        _apps.delete(name);\r\n    }\r\n    else if (_serverApps.has(name)) {\r\n        const firebaseServerApp = app;\r\n        if (firebaseServerApp.decRefCount() <= 0) {\r\n            _serverApps.delete(name);\r\n            cleanupProviders = true;\r\n        }\r\n    }\r\n    if (cleanupProviders) {\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        try {\r\n                            db.createObjectStore(STORE_NAME);\r\n                        }\r\n                        catch (e) {\r\n                            // Safari/iOS browsers throw occasional exceptions on\r\n                            // db.createObjectStore() that may be a bug. Avoid blocking\r\n                            // the rest of the app functionality.\r\n                            console.warn(e);\r\n                        }\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME);\r\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\r\n        // We already have the value but tx.done can throw,\r\n        // so we need to await it here to catch errors\r\n        await tx.done;\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        var _a, _b;\r\n        try {\r\n            const platformLogger = this.container\r\n                .getProvider('platform-logger')\r\n                .getImmediate();\r\n            // This is the \"Firebase user agent\" string from the platform logger\r\n            // service, not the browser user agent.\r\n            const agent = platformLogger.getPlatformInfoString();\r\n            const date = getUTCDateString();\r\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\r\n                this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n                // If we failed to construct a heartbeats cache, then return immediately.\r\n                if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\r\n                    return;\r\n                }\r\n            }\r\n            // Do not store a heartbeat if one is already stored for this day\r\n            // or if a header has already been sent today.\r\n            if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n                this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n                return;\r\n            }\r\n            else {\r\n                // There is no entry for this date. Create one.\r\n                this._heartbeatsCache.heartbeats.push({ date, agent });\r\n            }\r\n            // Remove entries older than 30 days.\r\n            this._heartbeatsCache.heartbeats =\r\n                this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n                    const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n                    const now = Date.now();\r\n                    return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n                });\r\n            return this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        catch (e) {\r\n            logger.warn(e);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        var _a;\r\n        try {\r\n            if (this._heartbeatsCache === null) {\r\n                await this._heartbeatsCachePromise;\r\n            }\r\n            // If it's still null or the array is empty, there is no data to send.\r\n            if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\r\n                this._heartbeatsCache.heartbeats.length === 0) {\r\n                return '';\r\n            }\r\n            const date = getUTCDateString();\r\n            // Extract as many heartbeats from the cache as will fit under the size limit.\r\n            const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n            const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n            // Store last sent date to prevent another being logged/sent for the same day.\r\n            this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n            if (unsentEntries.length > 0) {\r\n                // Store any unsent entries if they exist.\r\n                this._heartbeatsCache.heartbeats = unsentEntries;\r\n                // This seems more likely than emptying the array (below) to lead to some odd state\r\n                // since the cache isn't empty and this will be called again on the next request,\r\n                // and is probably safest if we await it.\r\n                await this._storage.overwrite(this._heartbeatsCache);\r\n            }\r\n            else {\r\n                this._heartbeatsCache.heartbeats = [];\r\n                // Do not wait for this, to reduce latency.\r\n                void this._storage.overwrite(this._heartbeatsCache);\r\n            }\r\n            return headerString;\r\n        }\r\n        catch (e) {\r\n            logger.warn(e);\r\n            return '';\r\n        }\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\r\n                return idbHeartbeatObject;\r\n            }\r\n            else {\r\n                return { heartbeats: [] };\r\n            }\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$q, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$q, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","import { registerVersion } from '@firebase/app';\nexport * from '@firebase/app';\n\nvar name = \"firebase\";\nvar version = \"10.14.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterVersion(name, version, 'app');\n//# sourceMappingURL=index.esm.js.map\n","import { _getProvider, getApp, SDK_VERSION as SDK_VERSION$1, _registerComponent, registerVersion } from '@firebase/app';\nimport { Component, ComponentContainer, Provider } from '@firebase/component';\nimport { stringify, jsonEval, contains, assert, isNodeSdk, stringToByteArray, Sha1, base64, deepCopy, base64Encode, isMobileCordova, stringLength, Deferred, safeGet, isAdmin, isValidFormat, isEmpty, isReactNative, assertionError, map, querystring, errorPrefix, getModularInstance, getDefaultEmulatorHostnameAndPort, createMockUserToken } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\n\nconst name = \"@firebase/database\";\nconst version = \"1.0.8\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nlet SDK_VERSION = '';\r\n/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */\r\nclass DOMStorageWrapper {\r\n    /**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    constructor(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */\r\n    set(key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    }\r\n    /**\r\n     * @returns The value that was stored under this key, or null\r\n     */\r\n    get(key) {\r\n        const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    }\r\n    remove(key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    }\r\n    prefixedName_(name) {\r\n        return this.prefix_ + name;\r\n    }\r\n    toString() {\r\n        return this.domStorage_.toString();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    set(key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    }\r\n    get(key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    }\r\n    remove(key) {\r\n        delete this.cache_[key];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */\r\nconst createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            const domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nconst PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nconst SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */\r\nconst LUIDGenerator = (function () {\r\n    let id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */\r\nconst sha1 = function (str) {\r\n    const utf8Bytes = stringToByteArray(str);\r\n    const sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    const sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\nconst buildLogMessage_ = function (...varArgs) {\r\n    let message = '';\r\n    for (let i = 0; i < varArgs.length; i++) {\r\n        const arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n */\r\nlet logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n */\r\nlet firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */\r\nconst enableLogging$1 = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\nconst log = function (...varArgs) {\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging$1(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        const message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\nconst logWrapper = function (prefix) {\r\n    return function (...varArgs) {\r\n        log(prefix, ...varArgs);\r\n    };\r\n};\r\nconst error = function (...varArgs) {\r\n    const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\r\n    logClient.error(message);\r\n};\r\nconst fatal = function (...varArgs) {\r\n    const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\nconst warn = function (...varArgs) {\r\n    const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nconst warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */\r\nconst isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\nconst executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        let called = false;\r\n        const wrappedFn = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called) {\r\n                called = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', () => {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */\r\nconst MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */\r\nconst MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */\r\nconst nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        const aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @returns {!number} comparison result.\r\n */\r\nconst stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\nconst requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\nconst ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    const keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (const k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    let key = '{';\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */\r\nconst splitStringBySize = function (str, segsize) {\r\n    const len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    const dataSegs = [];\r\n    for (let c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */\r\nconst doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    const ebits = 11, fbits = 52;\r\n    const bias = (1 << (ebits - 1)) - 1;\r\n    let s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    const bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    const str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    let hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */\r\nconst isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */\r\nconst isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a JavaScript Error\r\n */\r\nfunction errorForServerCode(code, query) {\r\n    let reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    const error = new Error(code + ' at ' + query._path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n}\r\n/**\r\n * Used to test for integer-looking strings\r\n */\r\nconst INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MIN = -2147483648;\r\n/**\r\n * For use in keys, the maximum possible 32-bit integer.\r\n */\r\nconst INTEGER_32_MAX = 2147483647;\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */\r\nconst tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        const intVal = Number(str);\r\n        if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */\r\nconst exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(() => {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            const stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */\r\nconst beingCrawled = function () {\r\n    const userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */\r\nconst setTimeoutNonBlocking = function (fn, time) {\r\n    const timeout = setTimeout(fn, time);\r\n    // Note: at the time of this comment, unrefTimer is under the unstable set of APIs. Run with --unstable to enable the API.\r\n    if (typeof timeout === 'number' &&\r\n        // @ts-ignore Is only defined in Deno environments.\r\n        typeof Deno !== 'undefined' &&\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno['unrefTimer']) {\r\n        // @ts-ignore Deno and unrefTimer are only defined in Deno environments.\r\n        Deno.unrefTimer(timeout);\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    }\r\n    else if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */\r\nclass AppCheckTokenProvider {\r\n    constructor(appName_, appCheckProvider) {\r\n        this.appName_ = appName_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.appCheck = appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.getImmediate({ optional: true });\r\n        if (!this.appCheck) {\r\n            appCheckProvider === null || appCheckProvider === void 0 ? void 0 : appCheckProvider.get().then(appCheck => (this.appCheck = appCheck));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.appCheck) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAppCheck. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // AppCheck and ensures that all requests are authenticated if a token\r\n                // becomes available before the timeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.appCheck) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.appCheck.getToken(forceRefresh);\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        var _a;\r\n        (_a = this.appCheckProvider) === null || _a === void 0 ? void 0 : _a.get().then(appCheck => appCheck.addTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        warn(`Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\r\n            'are invalid. This usually indicates your app was not initialized correctly.');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nclass FirebaseAuthTokenProvider {\r\n    constructor(appName_, firebaseOptions_, authProvider_) {\r\n        this.appName_ = appName_;\r\n        this.firebaseOptions_ = firebaseOptions_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.onInit(auth => (this.auth_ = auth));\r\n        }\r\n    }\r\n    getToken(forceRefresh) {\r\n        if (!this.auth_) {\r\n            return new Promise((resolve, reject) => {\r\n                // Support delayed initialization of FirebaseAuth. This allows our\r\n                // customers to initialize the RTDB SDK before initializing Firebase\r\n                // Auth and ensures that all requests are authenticated if a token\r\n                // becomes available before the timeout below expires.\r\n                setTimeout(() => {\r\n                    if (this.auth_) {\r\n                        this.getToken(forceRefresh).then(resolve, reject);\r\n                    }\r\n                    else {\r\n                        resolve(null);\r\n                    }\r\n                }, 0);\r\n            });\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(error => {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            this.authProvider_\r\n                .get()\r\n                .then(auth => auth.addAuthTokenListener(listener));\r\n        }\r\n    }\r\n    removeTokenChangeListener(listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(auth => auth.removeAuthTokenListener(listener));\r\n    }\r\n    notifyForInvalidToken() {\r\n        let errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.appName_ +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.firebaseOptions_) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    }\r\n}\r\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\r\nclass EmulatorTokenProvider {\r\n    constructor(accessToken) {\r\n        this.accessToken = accessToken;\r\n    }\r\n    getToken(forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: this.accessToken\r\n        });\r\n    }\r\n    addTokenChangeListener(listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(this.accessToken);\r\n    }\r\n    removeTokenChangeListener(listener) { }\r\n    notifyForInvalidToken() { }\r\n}\r\n/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\r\nEmulatorTokenProvider.OWNER = 'owner';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst PROTOCOL_VERSION = '5';\r\nconst VERSION_PARAM = 'v';\r\nconst TRANSPORT_SESSION_PARAM = 's';\r\nconst REFERER_PARAM = 'r';\r\nconst FORGE_REF = 'f';\r\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\r\n// firebase.corp.google.com\r\nconst FORGE_DOMAIN_RE = /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\r\nconst LAST_SESSION_PARAM = 'ls';\r\nconst APPLICATION_ID_PARAM = 'p';\r\nconst APP_CHECK_TOKEN_PARAM = 'ac';\r\nconst WEBSOCKET = 'websocket';\r\nconst LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n */\r\nclass RepoInfo {\r\n    /**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */\r\n    constructor(host, secure, namespace, webSocketOnly, nodeAdmin = false, persistenceKey = '', includeNamespaceInQueryParams = false, isUsingEmulator = false) {\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.isUsingEmulator = isUsingEmulator;\r\n        this._host = host.toLowerCase();\r\n        this._domain = this._host.substr(this._host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this._host;\r\n    }\r\n    isCacheableHost() {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    }\r\n    isCustomHost() {\r\n        return (this._domain !== 'firebaseio.com' &&\r\n            this._domain !== 'firebaseio-demo.com');\r\n    }\r\n    get host() {\r\n        return this._host;\r\n    }\r\n    set host(newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this._host, this.internalHost);\r\n            }\r\n        }\r\n    }\r\n    toString() {\r\n        let str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    }\r\n    toURLString() {\r\n        const protocol = this.secure ? 'https://' : 'http://';\r\n        const query = this.includeNamespaceInQueryParams\r\n            ? `?ns=${this.namespace}`\r\n            : '';\r\n        return `${protocol}${this.host}/${query}`;\r\n    }\r\n}\r\nfunction repoInfoNeedsQueryParam(repoInfo) {\r\n    return (repoInfo.host !== repoInfo.internalHost ||\r\n        repoInfo.isCustomHost() ||\r\n        repoInfo.includeNamespaceInQueryParams);\r\n}\r\n/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */\r\nfunction repoInfoConnectionURL(repoInfo, type, params) {\r\n    assert(typeof type === 'string', 'typeof type must == string');\r\n    assert(typeof params === 'object', 'typeof params must == object');\r\n    let connURL;\r\n    if (type === WEBSOCKET) {\r\n        connURL =\r\n            (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\r\n    }\r\n    else if (type === LONG_POLLING) {\r\n        connURL =\r\n            (repoInfo.secure ? 'https://' : 'http://') +\r\n                repoInfo.internalHost +\r\n                '/.lp?';\r\n    }\r\n    else {\r\n        throw new Error('Unknown connection type: ' + type);\r\n    }\r\n    if (repoInfoNeedsQueryParam(repoInfo)) {\r\n        params['ns'] = repoInfo.namespace;\r\n    }\r\n    const pairs = [];\r\n    each(params, (key, value) => {\r\n        pairs.push(key + '=' + value);\r\n    });\r\n    return connURL + pairs.join('&');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n */\r\nclass StatsCollection {\r\n    constructor() {\r\n        this.counters_ = {};\r\n    }\r\n    incrementCounter(name, amount = 1) {\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    }\r\n    get() {\r\n        return deepCopy(this.counters_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst collections = {};\r\nconst reporters = {};\r\nfunction statsManagerGetCollection(repoInfo) {\r\n    const hashString = repoInfo.toString();\r\n    if (!collections[hashString]) {\r\n        collections[hashString] = new StatsCollection();\r\n    }\r\n    return collections[hashString];\r\n}\r\nfunction statsManagerGetOrCreateReporter(repoInfo, creatorFunction) {\r\n    const hashString = repoInfo.toString();\r\n    if (!reporters[hashString]) {\r\n        reporters[hashString] = creatorFunction();\r\n    }\r\n    return reporters[hashString];\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */\r\nclass PacketReceiver {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    constructor(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    closeAfter(responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    }\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */\r\n    handleResponse(requestNum, data) {\r\n        this.pendingResponses[requestNum] = data;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            const toProcess = this.pendingResponses[this.currentResponseNum];\r\n            delete this.pendingResponses[this.currentResponseNum];\r\n            for (let i = 0; i < toProcess.length; ++i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(() => {\r\n                        this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            }\r\n            if (this.currentResponseNum === this.closeAfterResponse) {\r\n                if (this.onClose) {\r\n                    this.onClose();\r\n                    this.onClose = null;\r\n                }\r\n                break;\r\n            }\r\n            this.currentResponseNum++;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nconst FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nconst FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nconst FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nconst FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nconst FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nconst FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nconst FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nconst FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nconst FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nconst FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nconst FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nconst FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nconst MAX_URL_DATA_SIZE = 1870;\r\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */\r\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */\r\nconst LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n */\r\nclass BrowserPollConnection {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.urlFn = (params) => {\r\n            // Always add the token if we have one.\r\n            if (this.appCheckToken) {\r\n                params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(() => {\r\n            this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            this.onClosed_();\r\n            this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(() => {\r\n            if (this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            this.scriptTagHolder = new FirebaseIFrameScriptHolder((...args) => {\r\n                const [command, arg1, arg2, arg3, arg4] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                if (!this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (this.connectTimeoutTimer_) {\r\n                    clearTimeout(this.connectTimeoutTimer_);\r\n                    this.connectTimeoutTimer_ = null;\r\n                }\r\n                this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    this.id = arg1;\r\n                    this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        this.myPacketOrderer.closeAfter(arg1, () => {\r\n                            this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, (...args) => {\r\n                const [pN, data] = args;\r\n                this.incrementIncomingBytes_(args);\r\n                this.myPacketOrderer.handleResponse(pN, data);\r\n            }, () => {\r\n                this.onClosed_();\r\n            }, this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\r\n                    this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\r\n            }\r\n            if (this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\r\n            }\r\n            if (this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = this.applicationId;\r\n            }\r\n            if (this.appCheckToken) {\r\n                urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.hostname &&\r\n                FORGE_DOMAIN_RE.test(location.hostname)) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            const connectURL = this.urlFn(urlParams);\r\n            this.log_('Connecting via long-poll to ' + connectURL);\r\n            this.scriptTagHolder.addTag(connectURL, () => {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    start() {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    }\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    static forceAllow() {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    }\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    static forceDisallow() {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    }\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    static isAvailable() {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    }\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    markConnectionHealthy() { }\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     */\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    }\r\n    /**\r\n     * Triggered when this transport is closed\r\n     */\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */\r\n    send(data) {\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        const base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    }\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */\r\n    addDisconnectPingFrame(id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        const urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    }\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     */\r\n    incrementIncomingBytes_(args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        const bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    }\r\n}\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/\r\nclass FirebaseIFrameScriptHolder {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are received from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    constructor(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\r\n                onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            let script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                const currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            const iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */\r\n    static createIFrame_() {\r\n        const iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                const a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                const domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    }\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    close() {\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting textContent seems to be the safest way to do this.\r\n            this.myIFrame.doc.body.textContent = '';\r\n            setTimeout(() => {\r\n                if (this.myIFrame !== null) {\r\n                    document.body.removeChild(this.myIFrame);\r\n                    this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        const onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    }\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */\r\n    startLongPoll(id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    }\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    newRequest_() {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            const urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            let theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            let curDataString = '';\r\n            let i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                const nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    const theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    enqueueSegment(segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    }\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */\r\n    addLongPollTag_(url, serial) {\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        const doNewRequest = () => {\r\n            this.outstandingRequests.delete(serial);\r\n            this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        const keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        const readyStateCB = () => {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    }\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    addTag(url, loadCB) {\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(() => {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    const newScript = this.myIFrame.doc.createElement('script');\r\n                    newScript.type = 'text/javascript';\r\n                    newScript.async = true;\r\n                    newScript.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript.onload = newScript.onreadystatechange =\r\n                        function () {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            const rstate = newScript.readyState;\r\n                            if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                newScript.onload = newScript.onreadystatechange = null;\r\n                                if (newScript.parentNode) {\r\n                                    newScript.parentNode.removeChild(newScript);\r\n                                }\r\n                                loadCB();\r\n                            }\r\n                        };\r\n                    newScript.onerror = () => {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        this.sendNewPolls = false;\r\n                        this.close();\r\n                    };\r\n                    this.myIFrame.doc.body.appendChild(newScript);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nlet WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n */\r\nclass WebSocketConnection {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */\r\n    constructor(connId, repoInfo, applicationId, appCheckToken, authToken, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.appCheckToken = appCheckToken;\r\n        this.authToken = authToken;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = statsManagerGetCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */\r\n    static connectionURL_(repoInfo, transportSessionId, lastSessionId, appCheckToken, applicationId) {\r\n        const urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.hostname &&\r\n            FORGE_DOMAIN_RE.test(location.hostname)) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        if (appCheckToken) {\r\n            urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\r\n        }\r\n        if (applicationId) {\r\n            urlParams[APPLICATION_ID_PARAM] = applicationId;\r\n        }\r\n        return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\r\n    }\r\n    /**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */\r\n    open(onMessage, onDisconnect) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            let options;\r\n            if (isNodeSdk()) {\r\n                const device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                options = {\r\n                    headers: {\r\n                        'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // If using Node with admin creds, AppCheck-related checks are unnecessary.\r\n                // Note that we send the credentials here even if they aren't admin credentials, which is\r\n                // not a problem.\r\n                // Note that this header is just used to bypass appcheck, and the token should still be sent\r\n                // through the websocket connection once it is established.\r\n                if (this.authToken) {\r\n                    options.headers['Authorization'] = `Bearer ${this.authToken}`;\r\n                }\r\n                if (this.appCheckToken) {\r\n                    options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\r\n                }\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                const env = process['env'];\r\n                const proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n            }\r\n            this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = () => {\r\n            this.log_('Websocket connected.');\r\n            this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = () => {\r\n            this.log_('Websocket connection was disconnected.');\r\n            this.mySock = null;\r\n            this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = m => {\r\n            this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = e => {\r\n            this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n        };\r\n    }\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    start() { }\r\n    static forceDisallow() {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    }\r\n    static isAvailable() {\r\n        let isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    }\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */\r\n    static previouslyFailed() {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    }\r\n    markConnectionHealthy() {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    }\r\n    appendFrame_(data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            const fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            const jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    }\r\n    /**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */\r\n    handleNewFrameCount_(frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    }\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */\r\n    extractFrameCount_(data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            const frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    }\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */\r\n    handleIncomingFrame(mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        const data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            const remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */\r\n    send(data) {\r\n        this.resetKeepAlive();\r\n        const dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (let i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    }\r\n    shutdown_() {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    }\r\n    onClosed_() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    close() {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    }\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    resetKeepAlive() {\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(() => {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (this.mySock) {\r\n                this.sendString_('0');\r\n            }\r\n            this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    }\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */\r\n    sendString_(str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */\r\nWebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */\r\nWebSocketConnection.healthyTimeout = 30000;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */\r\nclass TransportManager {\r\n    /**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */\r\n    constructor(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    static get ALL_TRANSPORTS() {\r\n        return [BrowserPollConnection, WebSocketConnection];\r\n    }\r\n    /**\r\n     * Returns whether transport has been selected to ensure WebSocketConnection or BrowserPollConnection are not called after\r\n     * TransportManager has already set up transports_\r\n     */\r\n    static get IS_TRANSPORT_INITIALIZED() {\r\n        return this.globalTransportInitialized_;\r\n    }\r\n    initTransports_(repoInfo) {\r\n        const isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        let isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            const transports = (this.transports_ = []);\r\n            for (const transport of TransportManager.ALL_TRANSPORTS) {\r\n                if (transport && transport['isAvailable']()) {\r\n                    transports.push(transport);\r\n                }\r\n            }\r\n            TransportManager.globalTransportInitialized_ = true;\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the initial transport to use\r\n     */\r\n    initialTransport() {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    }\r\n    /**\r\n     * @returns The constructor for the next transport, or null\r\n     */\r\n    upgradeTransport() {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Keeps track of whether the TransportManager has already chosen a transport to use\r\nTransportManager.globalTransportInitialized_ = false;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nconst UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nconst MESSAGE_TYPE = 't';\r\nconst MESSAGE_DATA = 'd';\r\nconst CONTROL_SHUTDOWN = 's';\r\nconst CONTROL_RESET = 'r';\r\nconst CONTROL_ERROR = 'e';\r\nconst CONTROL_PONG = 'o';\r\nconst SWITCH_ACK = 'a';\r\nconst END_TRANSMISSION = 'n';\r\nconst PING = 'p';\r\nconst SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */\r\nclass Connection {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    constructor(id, repoInfo_, applicationId_, appCheckToken_, authToken_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.appCheckToken_ = appCheckToken_;\r\n        this.authToken_ = authToken_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* RealtimeState.CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     */\r\n    start_() {\r\n        const conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, null, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessageReceived = this.connReceiver_(this.conn_);\r\n        const onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(() => {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        const healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(() => {\r\n                this.healthyTimeout_ = null;\r\n                if (!this.isHealthy_) {\r\n                    if (this.conn_ &&\r\n                        this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        this.isHealthy_ = true;\r\n                        this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (this.conn_ &&\r\n                        this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        this.log_('Closing unhealthy connection after timeout.');\r\n                        this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    }\r\n    nextTransportId_() {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    }\r\n    disconnReceiver_(conn) {\r\n        return everConnected => {\r\n            if (conn === this.conn_) {\r\n                this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === this.secondaryConn_) {\r\n                this.log_('Secondary connection lost.');\r\n                this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                this.log_('closing an old connection');\r\n            }\r\n        };\r\n    }\r\n    connReceiver_(conn) {\r\n        return (message) => {\r\n            if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n                if (conn === this.rx_) {\r\n                    this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === this.secondaryConn_) {\r\n                    this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */\r\n    sendRequest(dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        const msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    }\r\n    tryCleanupConnection() {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    }\r\n    onSecondaryControl_(controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            const cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    }\r\n    onSecondaryMessageReceived_(parsedData) {\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    }\r\n    upgradeIfSecondaryHealthy_() {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    proceedWithUpgrade_() {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    }\r\n    onPrimaryMessageReceived_(parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        const layer = requireKey('t', parsedData);\r\n        const data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    }\r\n    onPrimaryResponse_() {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    }\r\n    onControl_(controlData) {\r\n        const cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            const payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                const handshakePayload = Object.assign({}, payload);\r\n                if (this.repoInfo_.isUsingEmulator) {\r\n                    // Upon connecting, the emulator will pass the hostname that it's aware of, but we prefer the user's set hostname via `connectDatabaseEmulator` over what the emulator passes.\r\n                    handshakePayload.h = this.repoInfo_.host;\r\n                }\r\n                this.onHandshake_(handshakePayload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (let i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * @param handshake - The handshake data returned from the server\r\n     */\r\n    onHandshake_(handshake) {\r\n        const timestamp = handshake.ts;\r\n        const version = handshake.v;\r\n        const host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.host = host;\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    }\r\n    tryStartUpgrade_() {\r\n        const conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    }\r\n    startUpgrade_(conn) {\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        const onMessage = this.connReceiver_(this.secondaryConn_);\r\n        const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(() => {\r\n            if (this.secondaryConn_) {\r\n                this.log_('Timed out trying to upgrade.');\r\n                this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    }\r\n    onReset_(host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.host = host;\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    }\r\n    onConnectionEstablished_(conn, timestamp) {\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* RealtimeState.CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(() => {\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    }\r\n    sendPingOnPrimaryIfNecessary_() {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    }\r\n    onSecondaryConnectionLost_() {\r\n        const conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    }\r\n    /**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */\r\n    onConnectionLost_(everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* RealtimeState.CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* RealtimeState.CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    }\r\n    onConnectionShutdown_(reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    }\r\n    sendData_(data) {\r\n        if (this.state_ !== 1 /* RealtimeState.CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    }\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    close() {\r\n        if (this.state_ !== 2 /* RealtimeState.DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* RealtimeState.DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    }\r\n    closeConnections_() {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nclass ServerActions {\r\n    put(pathString, data, onComplete, hash) { }\r\n    merge(pathString, data, onComplete, hash) { }\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */\r\n    refreshAuthToken(token) { }\r\n    /**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */\r\n    refreshAppCheckToken(token) { }\r\n    onDisconnectPut(pathString, data, onComplete) { }\r\n    onDisconnectMerge(pathString, data, onComplete) { }\r\n    onDisconnectCancel(pathString, onComplete) { }\r\n    reportStats(stats) { }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nclass EventEmitter {\r\n    constructor(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     */\r\n    trigger(eventType, ...varArgs) {\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            const listeners = [...this.listeners_[eventType]];\r\n            for (let i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    }\r\n    on(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback, context });\r\n        const eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    }\r\n    off(eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        const listeners = this.listeners_[eventType] || [];\r\n        for (let i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    validateEventType_(eventType) {\r\n        assert(this.allowedEvents_.find(et => {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */\r\nclass OnlineMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['online']);\r\n        this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', () => {\r\n                if (!this.online_) {\r\n                    this.online_ = true;\r\n                    this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', () => {\r\n                if (this.online_) {\r\n                    this.online_ = false;\r\n                    this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new OnlineMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    }\r\n    currentlyOnline() {\r\n        return this.online_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Maximum key depth. */\r\nconst MAX_PATH_DEPTH = 32;\r\n/** Maximum number of (UTF8) bytes in a Firebase path. */\r\nconst MAX_PATH_LENGTH_BYTES = 768;\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nclass Path {\r\n    /**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */\r\n    constructor(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            let copyTo = 0;\r\n            for (let i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    toString() {\r\n        let pathString = '';\r\n        for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    }\r\n}\r\nfunction newEmptyPath() {\r\n    return new Path('');\r\n}\r\nfunction pathGetFront(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    return path.pieces_[path.pieceNum_];\r\n}\r\n/**\r\n * @returns The number of segments in this path\r\n */\r\nfunction pathGetLength(path) {\r\n    return path.pieces_.length - path.pieceNum_;\r\n}\r\nfunction pathPopFront(path) {\r\n    let pieceNum = path.pieceNum_;\r\n    if (pieceNum < path.pieces_.length) {\r\n        pieceNum++;\r\n    }\r\n    return new Path(path.pieces_, pieceNum);\r\n}\r\nfunction pathGetBack(path) {\r\n    if (path.pieceNum_ < path.pieces_.length) {\r\n        return path.pieces_[path.pieces_.length - 1];\r\n    }\r\n    return null;\r\n}\r\nfunction pathToUrlEncodedString(path) {\r\n    let pathString = '';\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        if (path.pieces_[i] !== '') {\r\n            pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\r\n        }\r\n    }\r\n    return pathString || '/';\r\n}\r\n/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */\r\nfunction pathSlice(path, begin = 0) {\r\n    return path.pieces_.slice(path.pieceNum_ + begin);\r\n}\r\nfunction pathParent(path) {\r\n    if (path.pieceNum_ >= path.pieces_.length) {\r\n        return null;\r\n    }\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\nfunction pathChild(path, childPathObj) {\r\n    const pieces = [];\r\n    for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\r\n        pieces.push(path.pieces_[i]);\r\n    }\r\n    if (childPathObj instanceof Path) {\r\n        for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n            pieces.push(childPathObj.pieces_[i]);\r\n        }\r\n    }\r\n    else {\r\n        const childPieces = childPathObj.split('/');\r\n        for (let i = 0; i < childPieces.length; i++) {\r\n            if (childPieces[i].length > 0) {\r\n                pieces.push(childPieces[i]);\r\n            }\r\n        }\r\n    }\r\n    return new Path(pieces, 0);\r\n}\r\n/**\r\n * @returns True if there are no segments in this path\r\n */\r\nfunction pathIsEmpty(path) {\r\n    return path.pieceNum_ >= path.pieces_.length;\r\n}\r\n/**\r\n * @returns The path from outerPath to innerPath\r\n */\r\nfunction newRelativePath(outerPath, innerPath) {\r\n    const outer = pathGetFront(outerPath), inner = pathGetFront(innerPath);\r\n    if (outer === null) {\r\n        return innerPath;\r\n    }\r\n    else if (outer === inner) {\r\n        return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\r\n    }\r\n    else {\r\n        throw new Error('INTERNAL ERROR: innerPath (' +\r\n            innerPath +\r\n            ') is not within ' +\r\n            'outerPath (' +\r\n            outerPath +\r\n            ')');\r\n    }\r\n}\r\n/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */\r\nfunction pathCompare(left, right) {\r\n    const leftKeys = pathSlice(left, 0);\r\n    const rightKeys = pathSlice(right, 0);\r\n    for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n        const cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n        if (cmp !== 0) {\r\n            return cmp;\r\n        }\r\n    }\r\n    if (leftKeys.length === rightKeys.length) {\r\n        return 0;\r\n    }\r\n    return leftKeys.length < rightKeys.length ? -1 : 1;\r\n}\r\n/**\r\n * @returns true if paths are the same.\r\n */\r\nfunction pathEquals(path, other) {\r\n    if (pathGetLength(path) !== pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    for (let i = path.pieceNum_, j = other.pieceNum_; i <= path.pieces_.length; i++, j++) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns True if this path is a parent of (or the same as) other\r\n */\r\nfunction pathContains(path, other) {\r\n    let i = path.pieceNum_;\r\n    let j = other.pieceNum_;\r\n    if (pathGetLength(path) > pathGetLength(other)) {\r\n        return false;\r\n    }\r\n    while (i < path.pieces_.length) {\r\n        if (path.pieces_[i] !== other.pieces_[j]) {\r\n            return false;\r\n        }\r\n        ++i;\r\n        ++j;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nclass ValidationPath {\r\n    /**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */\r\n    constructor(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        this.parts_ = pathSlice(path, 0);\r\n        /** Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (let i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        validationPathCheckValid(this);\r\n    }\r\n}\r\nfunction validationPathPush(validationPath, child) {\r\n    // Count the needed '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ += 1;\r\n    }\r\n    validationPath.parts_.push(child);\r\n    validationPath.byteLength_ += stringLength(child);\r\n    validationPathCheckValid(validationPath);\r\n}\r\nfunction validationPathPop(validationPath) {\r\n    const last = validationPath.parts_.pop();\r\n    validationPath.byteLength_ -= stringLength(last);\r\n    // Un-count the previous '/'\r\n    if (validationPath.parts_.length > 0) {\r\n        validationPath.byteLength_ -= 1;\r\n    }\r\n}\r\nfunction validationPathCheckValid(validationPath) {\r\n    if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'has a key path longer than ' +\r\n            MAX_PATH_LENGTH_BYTES +\r\n            ' bytes (' +\r\n            validationPath.byteLength_ +\r\n            ').');\r\n    }\r\n    if (validationPath.parts_.length > MAX_PATH_DEPTH) {\r\n        throw new Error(validationPath.errorPrefix_ +\r\n            'path specified exceeds the maximum depth that can be written (' +\r\n            MAX_PATH_DEPTH +\r\n            ') or object contains a cycle ' +\r\n            validationPathToErrorString(validationPath));\r\n    }\r\n}\r\n/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */\r\nfunction validationPathToErrorString(validationPath) {\r\n    if (validationPath.parts_.length === 0) {\r\n        return '';\r\n    }\r\n    return \"in property '\" + validationPath.parts_.join('.') + \"'\";\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass VisibilityMonitor extends EventEmitter {\r\n    constructor() {\r\n        super(['visible']);\r\n        let hidden;\r\n        let visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, () => {\r\n                const visible = !document[hidden];\r\n                if (visible !== this.visible_) {\r\n                    this.visible_ = visible;\r\n                    this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n    }\r\n    static getInstance() {\r\n        return new VisibilityMonitor();\r\n    }\r\n    getInitialEvent(eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst RECONNECT_MIN_DELAY = 1000;\r\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nconst INVALID_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nclass PersistentConnection extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, appCheckTokenProvider_, authOverride_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.onConnectStatus_ = onConnectStatus_;\r\n        this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        this.log_ = logWrapper('p:' + this.id + ':');\r\n        this.interruptReasons_ = {};\r\n        this.listens = new Map();\r\n        this.outstandingPuts_ = [];\r\n        this.outstandingGets_ = [];\r\n        this.outstandingPutCount_ = 0;\r\n        this.outstandingGetCount_ = 0;\r\n        this.onDisconnectRequestQueue_ = [];\r\n        this.connected_ = false;\r\n        this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        this.securityDebugCallback_ = null;\r\n        this.lastSessionId = null;\r\n        this.establishConnectionTimer_ = null;\r\n        this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        this.requestCBHash_ = {};\r\n        this.requestNumber_ = 0;\r\n        this.realtime_ = null;\r\n        this.authToken_ = null;\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = false;\r\n        this.invalidAuthTokenCount_ = 0;\r\n        this.invalidAppCheckTokenCount_ = 0;\r\n        this.firstConnection_ = true;\r\n        this.lastConnectionAttemptTime_ = null;\r\n        this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', this.onOnline_, this);\r\n        }\r\n    }\r\n    sendRequest(action, body, onResponse) {\r\n        const curReqNum = ++this.requestNumber_;\r\n        const msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    }\r\n    get(query) {\r\n        this.initConnection_();\r\n        const deferred = new Deferred();\r\n        const request = {\r\n            p: query._path.toString(),\r\n            q: query._queryObject\r\n        };\r\n        const outstandingGet = {\r\n            action: 'g',\r\n            request,\r\n            onComplete: (message) => {\r\n                const payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        const index = this.outstandingGets_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        this.initConnection_();\r\n        const queryId = query._queryIdentifier;\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), `listen() called twice for same path/queryId.`);\r\n        const listenSpec = {\r\n            onComplete,\r\n            hashFn: currentHashFn,\r\n            query,\r\n            tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    }\r\n    sendGet_(index) {\r\n        const get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, (message) => {\r\n            delete this.outstandingGets_[index];\r\n            this.outstandingGetCount_--;\r\n            if (this.outstandingGetCount_ === 0) {\r\n                this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    }\r\n    sendListen_(listenSpec) {\r\n        const query = listenSpec.query;\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query._queryObject;\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, (message) => {\r\n            const payload = message[ /*data*/'d'];\r\n            const status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            const currentListenSpec = this.listens.get(pathString) &&\r\n                this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    static warnOnListenWarnings_(payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                const indexSpec = '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\r\n                const indexPath = query._path.toString();\r\n                warn(`Using an unspecified index. Your data will be downloaded and ` +\r\n                    `filtered on the client. Consider adding ${indexSpec} at ` +\r\n                    `${indexPath} to your security rules for better performance.`);\r\n            }\r\n        }\r\n    }\r\n    refreshAuthToken(token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, () => { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    }\r\n    reduceReconnectDelayIfAdminCredential_(credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        const isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    }\r\n    refreshAppCheckToken(token) {\r\n        this.appCheckToken_ = token;\r\n        this.log_('App check token refreshed');\r\n        if (this.appCheckToken_) {\r\n            this.tryAppCheck();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us.\r\n            //If we're not connected, simply delete the credential so we dont become\r\n            // authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unappeck', {}, () => { });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    tryAuth() {\r\n        if (this.connected_ && this.authToken_) {\r\n            const token = this.authToken_;\r\n            const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\r\n            const requestData = { cred: token };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (this.authToken_ === token) {\r\n                    if (status === 'ok') {\r\n                        this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */\r\n    tryAppCheck() {\r\n        if (this.connected_ && this.appCheckToken_) {\r\n            this.sendRequest('appcheck', { 'token': this.appCheckToken_ }, (res) => {\r\n                const status = res[ /*status*/'s'];\r\n                const data = res[ /*data*/'d'] || 'error';\r\n                if (status === 'ok') {\r\n                    this.invalidAppCheckTokenCount_ = 0;\r\n                }\r\n                else {\r\n                    this.onAppCheckRevoked_(status, data);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    unlisten(query, tag) {\r\n        const pathString = query._path.toString();\r\n        const queryId = query._queryIdentifier;\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query._queryParams.isDefault() || !query._queryParams.loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\r\n        }\r\n    }\r\n    sendUnlisten_(pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        const req = { /*path*/ p: pathString };\r\n        const action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    }\r\n    onDisconnectPut(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'o',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectMerge(pathString, data, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'om',\r\n                data,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    onDisconnectCancel(pathString, onComplete) {\r\n        this.initConnection_();\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete\r\n            });\r\n        }\r\n    }\r\n    sendOnDisconnect_(action, pathString, data, onComplete) {\r\n        const request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, (response) => {\r\n            if (onComplete) {\r\n                setTimeout(() => {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    }\r\n    put(pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    }\r\n    merge(pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    }\r\n    putInternal(action, pathString, data, onComplete, hash) {\r\n        this.initConnection_();\r\n        const request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action,\r\n            request,\r\n            onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        const index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    }\r\n    sendPut_(index) {\r\n        const action = this.outstandingPuts_[index].action;\r\n        const request = this.outstandingPuts_[index].request;\r\n        const onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, (message) => {\r\n            this.log_(action + ' response', message);\r\n            delete this.outstandingPuts_[index];\r\n            this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (this.outstandingPutCount_ === 0) {\r\n                this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    }\r\n    reportStats(stats) {\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            const request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, result => {\r\n                const status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    const errorReason = result[ /* data */'d'];\r\n                    this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDataMessage_(message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            const reqNum = message['r'];\r\n            const onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    }\r\n    onDataPush_(action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'apc') {\r\n            this.onAppCheckRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    }\r\n    onReady_(timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    }\r\n    scheduleConnect_(timeout) {\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(() => {\r\n            this.establishConnectionTimer_ = null;\r\n            this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    }\r\n    initConnection_() {\r\n        if (!this.realtime_ && this.firstConnection_) {\r\n            this.scheduleConnect_(0);\r\n        }\r\n    }\r\n    onVisible_(visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    }\r\n    onOnline_(online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    }\r\n    onRealtimeDisconnect_() {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                const timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            const timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            let reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    }\r\n    async establishConnection_() {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            const onDataMessage = this.onDataMessage_.bind(this);\r\n            const onReady = this.onReady_.bind(this);\r\n            const onDisconnect = this.onRealtimeDisconnect_.bind(this);\r\n            const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            const lastSessionId = this.lastSessionId;\r\n            let canceled = false;\r\n            let connection = null;\r\n            const closeFn = function () {\r\n                if (connection) {\r\n                    connection.close();\r\n                }\r\n                else {\r\n                    canceled = true;\r\n                    onDisconnect();\r\n                }\r\n            };\r\n            const sendRequestFn = function (msg) {\r\n                assert(connection, \"sendRequest call when we're not connected not allowed.\");\r\n                connection.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            const forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            try {\r\n                // First fetch auth and app check token, and establish connection after\r\n                // fetching the token was successful\r\n                const [authToken, appCheckToken] = await Promise.all([\r\n                    this.authTokenProvider_.getToken(forceRefresh),\r\n                    this.appCheckTokenProvider_.getToken(forceRefresh)\r\n                ]);\r\n                if (!canceled) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    this.authToken_ = authToken && authToken.accessToken;\r\n                    this.appCheckToken_ = appCheckToken && appCheckToken.token;\r\n                    connection = new Connection(connId, this.repoInfo_, this.applicationId_, this.appCheckToken_, this.authToken_, onDataMessage, onReady, onDisconnect, \r\n                    /* onKill= */ reason => {\r\n                        warn(reason + ' (' + this.repoInfo_.toString() + ')');\r\n                        this.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.log_('Failed to get token: ' + error);\r\n                if (!canceled) {\r\n                    if (this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    interrupt(reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    }\r\n    resume(reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    }\r\n    handleTimestamp_(timestamp) {\r\n        const delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    }\r\n    cancelSentTransactions_() {\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            const put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    }\r\n    onListenRevoked_(pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        let queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\r\n        }\r\n        const listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    }\r\n    removeListen_(pathString, queryId) {\r\n        const normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        let listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            const map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    }\r\n    onAuthRevoked_(statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onAppCheckRevoked_(statusCode, explanation) {\r\n        log('App check token revoked: ' + statusCode + '/' + explanation);\r\n        this.appCheckToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        // Note: We don't close the connection as the developer may not have\r\n        // enforcement enabled. The backend closes connections with enforcements.\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAppCheckTokenCount_++;\r\n            if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\r\n                this.appCheckTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    }\r\n    onSecurityDebugPacket_(body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    }\r\n    restoreState_() {\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        this.tryAppCheck();\r\n        // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n        // make sure to send listens before puts.\r\n        for (const queries of this.listens.values()) {\r\n            for (const listenSpec of queries.values()) {\r\n                this.sendListen_(listenSpec);\r\n            }\r\n        }\r\n        for (let i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            const request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (let i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    sendConnectStats_() {\r\n        const stats = {};\r\n        let clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    }\r\n    shouldReconnect_() {\r\n        const online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    }\r\n}\r\nPersistentConnection.nextPersistentConnectionId_ = 0;\r\n/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */\r\nPersistentConnection.nextConnectionId_ = 0;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass NamedNode {\r\n    constructor(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    static Wrap(name, node) {\r\n        return new NamedNode(name, node);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Index {\r\n    /**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */\r\n    getCompare() {\r\n        return this.compare.bind(this);\r\n    }\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    indexedValueChanged(oldNode, newNode) {\r\n        const oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        const newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    }\r\n    /**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __EMPTY_NODE;\r\nclass KeyIndex extends Index {\r\n    static get __EMPTY_NODE() {\r\n        return __EMPTY_NODE;\r\n    }\r\n    static set __EMPTY_NODE(val) {\r\n        __EMPTY_NODE = val;\r\n    }\r\n    compare(a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    }\r\n    isDefinedOn(node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    }\r\n    makePost(indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.key';\r\n    }\r\n}\r\nconst KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nclass SortedMapIterator {\r\n    /**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */\r\n    constructor(node, startKey, comparator, isReverse_, resultGenerator_ = null) {\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        this.nodeStack_ = [];\r\n        let cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getNext() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        let node = this.nodeStack_.pop();\r\n        let result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    hasNext() {\r\n        return this.nodeStack_.length > 0;\r\n    }\r\n    peek() {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        const node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    }\r\n}\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nclass LLRBNode {\r\n    /**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */\r\n    constructor(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return this.left.count() + 1 + this.right.count();\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    }\r\n    /**\r\n     * @returns The minimum node in the tree.\r\n     */\r\n    min_() {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    minKey() {\r\n        return this.min_().key;\r\n    }\r\n    /**\r\n     * @returns The maximum key in the tree.\r\n     */\r\n    maxKey() {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    }\r\n    /**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        let n = this;\r\n        const cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns New tree, with the minimum key removed.\r\n     */\r\n    removeMin_() {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        let n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        let n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    }\r\n    /**\r\n     * @returns Whether this is a RED node.\r\n     */\r\n    isRed_() {\r\n        return this.color;\r\n    }\r\n    /**\r\n     * @returns New tree after performing any needed rotations.\r\n     */\r\n    fixUp_() {\r\n        let n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedLeft.\r\n     */\r\n    moveRedLeft_() {\r\n        let n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after moveRedRight.\r\n     */\r\n    moveRedRight_() {\r\n        let n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateLeft.\r\n     */\r\n    rotateLeft_() {\r\n        const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    }\r\n    /**\r\n     * @returns New tree, after rotateRight.\r\n     */\r\n    rotateRight_() {\r\n        const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    }\r\n    /**\r\n     * @returns Newt ree, after colorFlip.\r\n     */\r\n    colorFlip_() {\r\n        const left = this.left.copy(null, null, !this.left.color, null, null);\r\n        const right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    }\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */\r\n    checkMaxDepth_() {\r\n        const blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    }\r\n    check_() {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        const blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    }\r\n}\r\nLLRBNode.RED = true;\r\nLLRBNode.BLACK = false;\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nclass LLRBEmptyNode {\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */\r\n    copy(key, value, color, left, right) {\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */\r\n    insert(key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    }\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */\r\n    remove(key, comparator) {\r\n        return this;\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the tree.\r\n     */\r\n    count() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns True if the tree is empty.\r\n     */\r\n    isEmpty() {\r\n        return true;\r\n    }\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    inorderTraversal(action) {\r\n        return false;\r\n    }\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return false;\r\n    }\r\n    minKey() {\r\n        return null;\r\n    }\r\n    maxKey() {\r\n        return null;\r\n    }\r\n    check_() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns Whether this node is red.\r\n     */\r\n    isRed_() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nclass SortedMap {\r\n    /**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */\r\n    constructor(comparator_, root_ = SortedMap.EMPTY_NODE) {\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */\r\n    insert(key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */\r\n    remove(key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    }\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    get(key) {\r\n        let cmp;\r\n        let node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */\r\n    getPredecessorKey(key) {\r\n        let cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    }\r\n    /**\r\n     * @returns True if the map is empty.\r\n     */\r\n    isEmpty() {\r\n        return this.root_.isEmpty();\r\n    }\r\n    /**\r\n     * @returns The total number of nodes in the map.\r\n     */\r\n    count() {\r\n        return this.root_.count();\r\n    }\r\n    /**\r\n     * @returns The minimum key in the map.\r\n     */\r\n    minKey() {\r\n        return this.root_.minKey();\r\n    }\r\n    /**\r\n     * @returns The maximum key in the map.\r\n     */\r\n    maxKey() {\r\n        return this.root_.maxKey();\r\n    }\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    inorderTraversal(action) {\r\n        return this.root_.inorderTraversal(action);\r\n    }\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */\r\n    reverseTraversal(action) {\r\n        return this.root_.reverseTraversal(action);\r\n    }\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */\r\n    getIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    }\r\n    getIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    }\r\n    getReverseIteratorFrom(key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    }\r\n    getReverseIterator(resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    }\r\n}\r\n/**\r\n * Always use the same empty node, to reduce memory.\r\n */\r\nSortedMap.EMPTY_NODE = new LLRBEmptyNode();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet MAX_NODE$2;\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$2 = val;\r\n}\r\nconst priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n */\r\nconst validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        const val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE$2 || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE$2 || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nclass LeafNode {\r\n    /**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */\r\n    constructor(value_, priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    static set __childrenNodeConstructor(val) {\r\n        __childrenNodeConstructor = val;\r\n    }\r\n    static get __childrenNodeConstructor() {\r\n        return __childrenNodeConstructor;\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return true;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this;\r\n        }\r\n        else if (pathGetFront(path) === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    }\r\n    hasChild() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode) {\r\n        return null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path), newChildNode));\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return 0;\r\n    }\r\n    /** @inheritDoc */\r\n    forEachChild(index, action) {\r\n        return false;\r\n    }\r\n    val(exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            const type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */\r\n    getValue() {\r\n        return this.value_;\r\n    }\r\n    compareTo(other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    }\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     */\r\n    compareToLeafNode_(otherLeaf) {\r\n        const otherLeafType = typeof otherLeaf.value_;\r\n        const thisLeafType = typeof this.value_;\r\n        const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    }\r\n    withIndex() {\r\n        return this;\r\n    }\r\n    isIndexed() {\r\n        return true;\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            const otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */\r\nLeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet nodeFromJSON$1;\r\nlet MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON$1 = val;\r\n}\r\nfunction setMaxNode(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\nclass PriorityIndex extends Index {\r\n    compare(a, b) {\r\n        const aPriority = a.node.getPriority();\r\n        const bPriority = b.node.getPriority();\r\n        const indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getPriority().isEmpty();\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    }\r\n    makePost(indexValue, name) {\r\n        const priorityNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.priority';\r\n    }\r\n}\r\nconst PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst LOG_2 = Math.log(2);\r\nclass Base12Num {\r\n    constructor(length) {\r\n        const logBase2 = (num) => \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parseInt((Math.log(num) / LOG_2), 10);\r\n        const bitMask = (bits) => parseInt(Array(bits + 1).join('1'), 2);\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        const mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    nextBitIsOne() {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        const result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */\r\nconst buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    const buildBalancedTree = function (low, high) {\r\n        const length = high - low;\r\n        let namedNode;\r\n        let key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const middle = parseInt((length / 2), 10) + low;\r\n            const left = buildBalancedTree(low, middle);\r\n            const right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    const buildFrom12Array = function (base12) {\r\n        let node = null;\r\n        let root = null;\r\n        let index = childList.length;\r\n        const buildPennant = function (chunkSize, color) {\r\n            const low = index - chunkSize;\r\n            const high = index;\r\n            index -= chunkSize;\r\n            const childTree = buildBalancedTree(low + 1, high);\r\n            const namedNode = childList[low];\r\n            const key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        const attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (let i = 0; i < base12.count; ++i) {\r\n            const isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            const chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    const base12 = new Base12Num(childList.length);\r\n    const root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet _defaultIndexMap;\r\nconst fallbackObject = {};\r\nclass IndexMap {\r\n    constructor(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    /**\r\n     * The default IndexMap for nodes without a priority\r\n     */\r\n    static get Default() {\r\n        assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n        _defaultIndexMap =\r\n            _defaultIndexMap ||\r\n                new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n        return _defaultIndexMap;\r\n    }\r\n    get(indexKey) {\r\n        const sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    }\r\n    hasIndex(indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    }\r\n    addIndex(indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        const childList = [];\r\n        let sawIndexedValue = false;\r\n        const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        let next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        let newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        const indexName = indexDefinition.toString();\r\n        const newIndexSet = Object.assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        const newIndexes = Object.assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    }\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    addToIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren, indexName) => {\r\n            const index = safeGet(this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    const childList = [];\r\n                    const iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    let next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                let newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    removeFromIndexes(namedNode, existingChildren) {\r\n        const newIndexes = map(this.indexes_, (indexedChildren) => {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                const existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nlet EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */\r\nclass ChildrenNode {\r\n    /**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */\r\n    constructor(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    static get EMPTY_NODE() {\r\n        return (EMPTY_NODE ||\r\n            (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n    }\r\n    /** @inheritDoc */\r\n    isLeafNode() {\r\n        return false;\r\n    }\r\n    /** @inheritDoc */\r\n    getPriority() {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    }\r\n    /** @inheritDoc */\r\n    updatePriority(newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getImmediateChild(childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            const child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    getChild(path) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(pathPopFront(path));\r\n    }\r\n    /** @inheritDoc */\r\n    hasChild(childName) {\r\n        return this.children_.get(childName) !== null;\r\n    }\r\n    /** @inheritDoc */\r\n    updateImmediateChild(childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            const namedNode = new NamedNode(childName, newChildNode);\r\n            let newChildren, newIndexMap;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            const newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    updateChild(path, newChildNode) {\r\n        const front = pathGetFront(path);\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(pathGetFront(path) !== '.priority' || pathGetLength(path) === 1, '.priority must be the last token in a path');\r\n            const newImmediateChild = this.getImmediateChild(front).updateChild(pathPopFront(path), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    isEmpty() {\r\n        return this.children_.isEmpty();\r\n    }\r\n    /** @inheritDoc */\r\n    numChildren() {\r\n        return this.children_.count();\r\n    }\r\n    /** @inheritDoc */\r\n    val(exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        const obj = {};\r\n        let numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            const array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (const key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    hash() {\r\n        if (this.lazyHash_ === null) {\r\n            let toHash = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                const childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    }\r\n    /** @inheritDoc */\r\n    getPredecessorChildName(childName, childNode, index) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            const predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    }\r\n    getFirstChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    }\r\n    getFirstChild(indexDefinition) {\r\n        const minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */\r\n    getLastChildName(indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            const maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    }\r\n    getLastChild(indexDefinition) {\r\n        const maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    forEachChild(index, action) {\r\n        const idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(wrappedNode => {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    }\r\n    getIterator(indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    }\r\n    getIteratorFrom(startPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, key => key);\r\n        }\r\n        else {\r\n            const iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    getReverseIterator(indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    }\r\n    getReverseIteratorFrom(endPost, indexDefinition) {\r\n        const idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, key => {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            const iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            let next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    }\r\n    compareTo(other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    }\r\n    withIndex(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    }\r\n    isIndexed(index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    }\r\n    equals(other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            const otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                const thisIter = this.getIterator(PRIORITY_INDEX);\r\n                const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                let thisCurrent = thisIter.getNext();\r\n                let otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */\r\n    resolveIndex_(indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    }\r\n}\r\nChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\nclass MaxNode extends ChildrenNode {\r\n    constructor() {\r\n        super(new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default);\r\n    }\r\n    compareTo(other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    }\r\n    equals(other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    }\r\n    getPriority() {\r\n        return this;\r\n    }\r\n    getImmediateChild(childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    isEmpty() {\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n */\r\nconst MAX_NODE = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode$1(MAX_NODE);\r\nsetMaxNode(MAX_NODE);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */\r\nfunction nodeFromJSON(json, priority = null) {\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        const jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        const children = [];\r\n        let childrenHavePriority = false;\r\n        const hinzeJsonObj = json;\r\n        each(hinzeJsonObj, (key, child) => {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                const childNode = nodeFromJSON(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority =\r\n                        childrenHavePriority || !childNode.getPriority().isEmpty();\r\n                    children.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        const childSet = buildChildSet(children, NAME_ONLY_COMPARATOR, namedNode => namedNode.name, NAME_COMPARATOR);\r\n        if (childrenHavePriority) {\r\n            const sortedChildSet = buildChildSet(children, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        let node = ChildrenNode.EMPTY_NODE;\r\n        each(json, (key, childData) => {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    const childNode = nodeFromJSON(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node = node.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node.updatePriority(nodeFromJSON(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PathIndex extends Index {\r\n    constructor(indexPath_) {\r\n        super();\r\n        this.indexPath_ = indexPath_;\r\n        assert(!pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n    }\r\n    extractChild(snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    }\r\n    isDefinedOn(node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    }\r\n    compare(a, b) {\r\n        const aChild = this.extractChild(a.node);\r\n        const bChild = this.extractChild(b.node);\r\n        const indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    }\r\n    maxPost() {\r\n        const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\r\n        return new NamedNode(MAX_NAME, node);\r\n    }\r\n    toString() {\r\n        return pathSlice(this.indexPath_, 0).join('/');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ValueIndex extends Index {\r\n    compare(a, b) {\r\n        const indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    }\r\n    isDefinedOn(node) {\r\n        return true;\r\n    }\r\n    indexedValueChanged(oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    }\r\n    minPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    }\r\n    maxPost() {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    }\r\n    makePost(indexValue, name) {\r\n        const valueNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    }\r\n    /**\r\n     * @returns String representation for inclusion in a query spec\r\n     */\r\n    toString() {\r\n        return '.value';\r\n    }\r\n}\r\nconst VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction changeValue(snapshotNode) {\r\n    return { type: \"value\" /* ChangeType.VALUE */, snapshotNode };\r\n}\r\nfunction changeChildAdded(childName, snapshotNode) {\r\n    return { type: \"child_added\" /* ChangeType.CHILD_ADDED */, snapshotNode, childName };\r\n}\r\nfunction changeChildRemoved(childName, snapshotNode) {\r\n    return { type: \"child_removed\" /* ChangeType.CHILD_REMOVED */, snapshotNode, childName };\r\n}\r\nfunction changeChildChanged(childName, snapshotNode, oldSnap) {\r\n    return {\r\n        type: \"child_changed\" /* ChangeType.CHILD_CHANGED */,\r\n        snapshotNode,\r\n        childName,\r\n        oldSnap\r\n    };\r\n}\r\nfunction changeChildMoved(childName, snapshotNode) {\r\n    return { type: \"child_moved\" /* ChangeType.CHILD_MOVED */, snapshotNode, childName };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */\r\nclass IndexedFilter {\r\n    constructor(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        const oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(changeChildRemoved(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(changeChildChanged(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(changeChildRemoved(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        const oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(changeChildChanged(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(changeChildAdded(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    }\r\n    filtersNodes() {\r\n        return false;\r\n    }\r\n    getIndexedFilter() {\r\n        return this;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */\r\nclass RangedFilter {\r\n    constructor(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    getStartPost() {\r\n        return this.startPost_;\r\n    }\r\n    getEndPost() {\r\n        return this.endPost_;\r\n    }\r\n    matches(node) {\r\n        const isWithinStart = this.startIsInclusive_\r\n            ? this.index_.compare(this.getStartPost(), node) <= 0\r\n            : this.index_.compare(this.getStartPost(), node) < 0;\r\n        const isWithinEnd = this.endIsInclusive_\r\n            ? this.index_.compare(node, this.getEndPost()) <= 0\r\n            : this.index_.compare(node, this.getEndPost()) < 0;\r\n        return isWithinStart && isWithinEnd;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        let filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        const self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.indexedFilter_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    static getStartPost_(params) {\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    }\r\n    static getEndPost_(params) {\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */\r\nclass LimitedFilter {\r\n    constructor(params) {\r\n        this.withinDirectionalStart = (node) => this.reverse_ ? this.withinEndPost(node) : this.withinStartPost(node);\r\n        this.withinDirectionalEnd = (node) => this.reverse_ ? this.withinStartPost(node) : this.withinEndPost(node);\r\n        this.withinStartPost = (node) => {\r\n            const compareRes = this.index_.compare(this.rangedFilter_.getStartPost(), node);\r\n            return this.startIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.withinEndPost = (node) => {\r\n            const compareRes = this.index_.compare(node, this.rangedFilter_.getEndPost());\r\n            return this.endIsInclusive_ ? compareRes <= 0 : compareRes < 0;\r\n        };\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n        this.startIsInclusive_ = !params.startAfterSet_;\r\n        this.endIsInclusive_ = !params.endBeforeSet_;\r\n    }\r\n    updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    }\r\n    updateFullNode(oldSnap, newSnap, optChangeAccumulator) {\r\n        let filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    const next = iterator.getNext();\r\n                    if (!this.withinDirectionalStart(next)) {\r\n                        // if we have not reached the start, skip to the next element\r\n                        continue;\r\n                    }\r\n                    else if (!this.withinDirectionalEnd(next)) {\r\n                        // if we have reached the end, stop adding elements\r\n                        break;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                let iterator;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                }\r\n                let count = 0;\r\n                while (iterator.hasNext()) {\r\n                    const next = iterator.getNext();\r\n                    const inRange = count < this.limit_ &&\r\n                        this.withinDirectionalStart(next) &&\r\n                        this.withinDirectionalEnd(next);\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    }\r\n    updatePriority(oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    }\r\n    filtersNodes() {\r\n        return true;\r\n    }\r\n    getIndexedFilter() {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    fullLimitUpdateChild_(snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        let cmp;\r\n        if (this.reverse_) {\r\n            const indexCmp = this.index_.getCompare();\r\n            cmp = (a, b) => indexCmp(b, a);\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        const oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        const newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        const windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        const inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            const oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            let nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            const compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            const remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildChanged(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(childKey, oldChildSnap));\r\n                }\r\n                const newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                const nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(changeChildAdded(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(changeChildAdded(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */\r\nclass QueryParams {\r\n    constructor() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.startAfterSet_ = false; // can only be true if startSet_ is true\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.endBeforeSet_ = false; // can only be true if endSet_ is true\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    hasStart() {\r\n        return this.startSet_;\r\n    }\r\n    /**\r\n     * @returns True if it would return from left.\r\n     */\r\n    isViewFromLeft() {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return this.viewFrom_ === \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n        }\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     */\r\n    getIndexStartValue() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */\r\n    getIndexStartName() {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    }\r\n    hasEnd() {\r\n        return this.endSet_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */\r\n    getIndexEndValue() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    }\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */\r\n    getIndexEndName() {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    }\r\n    hasLimit() {\r\n        return this.limitSet_;\r\n    }\r\n    /**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    hasAnchoredLimit() {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    }\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     */\r\n    getLimit() {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    }\r\n    getIndex() {\r\n        return this.index_;\r\n    }\r\n    loadsAllData() {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    }\r\n    isDefault() {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    }\r\n    copy() {\r\n        const copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.startAfterSet_ = this.startAfterSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.endBeforeSet_ = this.endBeforeSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    }\r\n}\r\nfunction queryParamsGetNodeFilter(queryParams) {\r\n    if (queryParams.loadsAllData()) {\r\n        return new IndexedFilter(queryParams.getIndex());\r\n    }\r\n    else if (queryParams.hasLimit()) {\r\n        return new LimitedFilter(queryParams);\r\n    }\r\n    else {\r\n        return new RangedFilter(queryParams);\r\n    }\r\n}\r\nfunction queryParamsLimitToFirst(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsLimitToLast(queryParams, newLimit) {\r\n    const newParams = queryParams.copy();\r\n    newParams.limitSet_ = true;\r\n    newParams.limit_ = newLimit;\r\n    newParams.viewFrom_ = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.startSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexStartValue_ = indexValue;\r\n    if (key != null) {\r\n        newParams.startNameSet_ = true;\r\n        newParams.indexStartName_ = key;\r\n    }\r\n    else {\r\n        newParams.startNameSet_ = false;\r\n        newParams.indexStartName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsStartAfter(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsStartAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsStartAt(queryParams, indexValue, MAX_NAME);\r\n    }\r\n    params.startAfterSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsEndAt(queryParams, indexValue, key) {\r\n    const newParams = queryParams.copy();\r\n    newParams.endSet_ = true;\r\n    if (indexValue === undefined) {\r\n        indexValue = null;\r\n    }\r\n    newParams.indexEndValue_ = indexValue;\r\n    if (key !== undefined) {\r\n        newParams.endNameSet_ = true;\r\n        newParams.indexEndName_ = key;\r\n    }\r\n    else {\r\n        newParams.endNameSet_ = false;\r\n        newParams.indexEndName_ = '';\r\n    }\r\n    return newParams;\r\n}\r\nfunction queryParamsEndBefore(queryParams, indexValue, key) {\r\n    let params;\r\n    if (queryParams.index_ === KEY_INDEX || !!key) {\r\n        params = queryParamsEndAt(queryParams, indexValue, key);\r\n    }\r\n    else {\r\n        params = queryParamsEndAt(queryParams, indexValue, MIN_NAME);\r\n    }\r\n    params.endBeforeSet_ = true;\r\n    return params;\r\n}\r\nfunction queryParamsOrderBy(queryParams, index) {\r\n    const newParams = queryParams.copy();\r\n    newParams.index_ = index;\r\n    return newParams;\r\n}\r\n/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */\r\nfunction queryParamsToRestQueryStringParameters(queryParams) {\r\n    const qs = {};\r\n    if (queryParams.isDefault()) {\r\n        return qs;\r\n    }\r\n    let orderBy;\r\n    if (queryParams.index_ === PRIORITY_INDEX) {\r\n        orderBy = \"$priority\" /* REST_QUERY_CONSTANTS.PRIORITY_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === VALUE_INDEX) {\r\n        orderBy = \"$value\" /* REST_QUERY_CONSTANTS.VALUE_INDEX */;\r\n    }\r\n    else if (queryParams.index_ === KEY_INDEX) {\r\n        orderBy = \"$key\" /* REST_QUERY_CONSTANTS.KEY_INDEX */;\r\n    }\r\n    else {\r\n        assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n        orderBy = queryParams.index_.toString();\r\n    }\r\n    qs[\"orderBy\" /* REST_QUERY_CONSTANTS.ORDER_BY */] = stringify(orderBy);\r\n    if (queryParams.startSet_) {\r\n        const startParam = queryParams.startAfterSet_\r\n            ? \"startAfter\" /* REST_QUERY_CONSTANTS.START_AFTER */\r\n            : \"startAt\" /* REST_QUERY_CONSTANTS.START_AT */;\r\n        qs[startParam] = stringify(queryParams.indexStartValue_);\r\n        if (queryParams.startNameSet_) {\r\n            qs[startParam] += ',' + stringify(queryParams.indexStartName_);\r\n        }\r\n    }\r\n    if (queryParams.endSet_) {\r\n        const endParam = queryParams.endBeforeSet_\r\n            ? \"endBefore\" /* REST_QUERY_CONSTANTS.END_BEFORE */\r\n            : \"endAt\" /* REST_QUERY_CONSTANTS.END_AT */;\r\n        qs[endParam] = stringify(queryParams.indexEndValue_);\r\n        if (queryParams.endNameSet_) {\r\n            qs[endParam] += ',' + stringify(queryParams.indexEndName_);\r\n        }\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        if (queryParams.isViewFromLeft()) {\r\n            qs[\"limitToFirst\" /* REST_QUERY_CONSTANTS.LIMIT_TO_FIRST */] = queryParams.limit_;\r\n        }\r\n        else {\r\n            qs[\"limitToLast\" /* REST_QUERY_CONSTANTS.LIMIT_TO_LAST */] = queryParams.limit_;\r\n        }\r\n    }\r\n    return qs;\r\n}\r\nfunction queryParamsGetQueryObject(queryParams) {\r\n    const obj = {};\r\n    if (queryParams.startSet_) {\r\n        obj[\"sp\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE */] =\r\n            queryParams.indexStartValue_;\r\n        if (queryParams.startNameSet_) {\r\n            obj[\"sn\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME */] =\r\n                queryParams.indexStartName_;\r\n        }\r\n        obj[\"sin\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_START_IS_INCLUSIVE */] =\r\n            !queryParams.startAfterSet_;\r\n    }\r\n    if (queryParams.endSet_) {\r\n        obj[\"ep\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE */] = queryParams.indexEndValue_;\r\n        if (queryParams.endNameSet_) {\r\n            obj[\"en\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME */] = queryParams.indexEndName_;\r\n        }\r\n        obj[\"ein\" /* WIRE_PROTOCOL_CONSTANTS.INDEX_END_IS_INCLUSIVE */] =\r\n            !queryParams.endBeforeSet_;\r\n    }\r\n    if (queryParams.limitSet_) {\r\n        obj[\"l\" /* WIRE_PROTOCOL_CONSTANTS.LIMIT */] = queryParams.limit_;\r\n        let viewFrom = queryParams.viewFrom_;\r\n        if (viewFrom === '') {\r\n            if (queryParams.isViewFromLeft()) {\r\n                viewFrom = \"l\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT */;\r\n            }\r\n            else {\r\n                viewFrom = \"r\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT */;\r\n            }\r\n        }\r\n        obj[\"vf\" /* WIRE_PROTOCOL_CONSTANTS.VIEW_FROM */] = viewFrom;\r\n    }\r\n    // For now, priority index is the default, so we only specify if it's some other index\r\n    if (queryParams.index_ !== PRIORITY_INDEX) {\r\n        obj[\"i\" /* WIRE_PROTOCOL_CONSTANTS.INDEX */] = queryParams.index_.toString();\r\n    }\r\n    return obj;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nclass ReadonlyRestClient extends ServerActions {\r\n    /**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */\r\n    constructor(repoInfo_, onDataUpdate_, authTokenProvider_, appCheckTokenProvider_) {\r\n        super();\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onDataUpdate_ = onDataUpdate_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckTokenProvider_ = appCheckTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */\r\n        this.listens_ = {};\r\n    }\r\n    reportStats(stats) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    static getListenId_(query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query._queryParams.isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query._path.toString();\r\n        }\r\n    }\r\n    /** @inheritDoc */\r\n    listen(query, currentHashFn, tag, onComplete) {\r\n        const pathString = query._path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\r\n        // Mark this listener so we can tell if it's removed.\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        const thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(this.listens_, listenId) === thisListen) {\r\n                let status;\r\n                if (!error) {\r\n                    status = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status = 'permission_denied';\r\n                }\r\n                else {\r\n                    status = 'rest_error:' + error;\r\n                }\r\n                onComplete(status, null);\r\n            }\r\n        });\r\n    }\r\n    /** @inheritDoc */\r\n    unlisten(query, tag) {\r\n        const listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    }\r\n    get(query) {\r\n        const queryStringParameters = queryParamsToRestQueryStringParameters(query._queryParams);\r\n        const pathString = query._path.toString();\r\n        const deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, (error, result) => {\r\n            let data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    }\r\n    /** @inheritDoc */\r\n    refreshAuthToken(token) {\r\n        // no-op since we just always call getToken.\r\n    }\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */\r\n    restRequest_(pathString, queryStringParameters = {}, callback) {\r\n        queryStringParameters['format'] = 'export';\r\n        return Promise.all([\r\n            this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\r\n            this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\r\n        ]).then(([authToken, appCheckToken]) => {\r\n            if (authToken && authToken.accessToken) {\r\n                queryStringParameters['auth'] = authToken.accessToken;\r\n            }\r\n            if (appCheckToken && appCheckToken.token) {\r\n                queryStringParameters['ac'] = appCheckToken.token;\r\n            }\r\n            const url = (this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            this.log_('Sending REST request for ' + url);\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = () => {\r\n                if (callback && xhr.readyState === 4) {\r\n                    this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    let res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */\r\nclass SnapshotHolder {\r\n    constructor() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    getNode(path) {\r\n        return this.rootNode_.getChild(path);\r\n    }\r\n    updateSnapshot(path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newSparseSnapshotTree() {\r\n    return {\r\n        value: null,\r\n        children: new Map()\r\n    };\r\n}\r\n/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */\r\nfunction sparseSnapshotTreeRemember(sparseSnapshotTree, path, data) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = data;\r\n        sparseSnapshotTree.children.clear();\r\n    }\r\n    else if (sparseSnapshotTree.value !== null) {\r\n        sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(path);\r\n        if (!sparseSnapshotTree.children.has(childKey)) {\r\n            sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\r\n        }\r\n        const child = sparseSnapshotTree.children.get(childKey);\r\n        path = pathPopFront(path);\r\n        sparseSnapshotTreeRemember(child, path, data);\r\n    }\r\n}\r\n/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */\r\nfunction sparseSnapshotTreeForget(sparseSnapshotTree, path) {\r\n    if (pathIsEmpty(path)) {\r\n        sparseSnapshotTree.value = null;\r\n        sparseSnapshotTree.children.clear();\r\n        return true;\r\n    }\r\n    else {\r\n        if (sparseSnapshotTree.value !== null) {\r\n            if (sparseSnapshotTree.value.isLeafNode()) {\r\n                // We're trying to forget a node that doesn't exist\r\n                return false;\r\n            }\r\n            else {\r\n                const value = sparseSnapshotTree.value;\r\n                sparseSnapshotTree.value = null;\r\n                value.forEachChild(PRIORITY_INDEX, (key, tree) => {\r\n                    sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\r\n                });\r\n                return sparseSnapshotTreeForget(sparseSnapshotTree, path);\r\n            }\r\n        }\r\n        else if (sparseSnapshotTree.children.size > 0) {\r\n            const childKey = pathGetFront(path);\r\n            path = pathPopFront(path);\r\n            if (sparseSnapshotTree.children.has(childKey)) {\r\n                const safeToRemove = sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey), path);\r\n                if (safeToRemove) {\r\n                    sparseSnapshotTree.children.delete(childKey);\r\n                }\r\n            }\r\n            return sparseSnapshotTree.children.size === 0;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */\r\nfunction sparseSnapshotTreeForEachTree(sparseSnapshotTree, prefixPath, func) {\r\n    if (sparseSnapshotTree.value !== null) {\r\n        func(prefixPath, sparseSnapshotTree.value);\r\n    }\r\n    else {\r\n        sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\r\n            const path = new Path(prefixPath.toString() + '/' + key);\r\n            sparseSnapshotTreeForEachTree(tree, path, func);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */\r\nfunction sparseSnapshotTreeForEachChild(sparseSnapshotTree, func) {\r\n    sparseSnapshotTree.children.forEach((tree, key) => {\r\n        func(key, tree);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */\r\nclass StatsListener {\r\n    constructor(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    get() {\r\n        const newStats = this.collection_.get();\r\n        const delta = Object.assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, (stat, value) => {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\r\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\nclass StatsReporter {\r\n    constructor(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        const timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    reportStats_() {\r\n        const stats = this.statsListener_.get();\r\n        const reportedStats = {};\r\n        let haveStatsToReport = false;\r\n        each(stats, (stat, value) => {\r\n            if (value > 0 && contains(this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\nfunction newOperationSourceUser() {\r\n    return {\r\n        fromUser: true,\r\n        fromServer: false,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServer() {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId: null,\r\n        tagged: false\r\n    };\r\n}\r\nfunction newOperationSourceServerTaggedQuery(queryId) {\r\n    return {\r\n        fromUser: false,\r\n        fromServer: true,\r\n        queryId,\r\n        tagged: true\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass AckUserWrite {\r\n    /**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */\r\n    constructor(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = newOperationSourceUser();\r\n    }\r\n    operationForChild(childName) {\r\n        if (!pathIsEmpty(this.path)) {\r\n            assert(pathGetFront(this.path) === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(pathPopFront(this.path), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            const childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(newEmptyPath(), childTree, this.revert);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ListenComplete {\r\n    constructor(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new ListenComplete(this.source, newEmptyPath());\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, pathPopFront(this.path));\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Overwrite {\r\n    constructor(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            return new Overwrite(this.source, newEmptyPath(), this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, pathPopFront(this.path), this.snap);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass Merge {\r\n    constructor(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    operationForChild(childName) {\r\n        if (pathIsEmpty(this.path)) {\r\n            const childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, newEmptyPath(), childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, newEmptyPath(), childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(pathGetFront(this.path) === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, pathPopFront(this.path), this.children);\r\n        }\r\n    }\r\n    toString() {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nclass CacheNode {\r\n    constructor(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */\r\n    isFullyInitialized() {\r\n        return this.fullyInitialized_;\r\n    }\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */\r\n    isFiltered() {\r\n        return this.filtered_;\r\n    }\r\n    isCompleteForPath(path) {\r\n        if (pathIsEmpty(path)) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        const childKey = pathGetFront(path);\r\n        return this.isCompleteForChild(childKey);\r\n    }\r\n    isCompleteForChild(key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    }\r\n    getNode() {\r\n        return this.node_;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */\r\nclass EventGenerator {\r\n    constructor(query_) {\r\n        this.query_ = query_;\r\n        this.index_ = this.query_._queryParams.getIndex();\r\n    }\r\n}\r\n/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */\r\nfunction eventGeneratorGenerateEventsForChanges(eventGenerator, changes, eventCache, eventRegistrations) {\r\n    const events = [];\r\n    const moves = [];\r\n    changes.forEach(change => {\r\n        if (change.type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n            eventGenerator.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n            moves.push(changeChildMoved(change.childName, change.snapshotNode));\r\n        }\r\n    });\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_removed\" /* ChangeType.CHILD_REMOVED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_added\" /* ChangeType.CHILD_ADDED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_moved\" /* ChangeType.CHILD_MOVED */, moves, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"child_changed\" /* ChangeType.CHILD_CHANGED */, changes, eventRegistrations, eventCache);\r\n    eventGeneratorGenerateEventsForType(eventGenerator, events, \"value\" /* ChangeType.VALUE */, changes, eventRegistrations, eventCache);\r\n    return events;\r\n}\r\n/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */\r\nfunction eventGeneratorGenerateEventsForType(eventGenerator, events, eventType, changes, registrations, eventCache) {\r\n    const filteredChanges = changes.filter(change => change.type === eventType);\r\n    filteredChanges.sort((a, b) => eventGeneratorCompareChanges(eventGenerator, a, b));\r\n    filteredChanges.forEach(change => {\r\n        const materializedChange = eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache);\r\n        registrations.forEach(registration => {\r\n            if (registration.respondsTo(change.type)) {\r\n                events.push(registration.createEvent(materializedChange, eventGenerator.query_));\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction eventGeneratorMaterializeSingleChange(eventGenerator, change, eventCache) {\r\n    if (change.type === 'value' || change.type === 'child_removed') {\r\n        return change;\r\n    }\r\n    else {\r\n        change.prevName = eventCache.getPredecessorChildName(change.childName, change.snapshotNode, eventGenerator.index_);\r\n        return change;\r\n    }\r\n}\r\nfunction eventGeneratorCompareChanges(eventGenerator, a, b) {\r\n    if (a.childName == null || b.childName == null) {\r\n        throw assertionError('Should only compare child_ events.');\r\n    }\r\n    const aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n    const bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n    return eventGenerator.index_.compare(aWrapped, bWrapped);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewCache(eventCache, serverCache) {\r\n    return { eventCache, serverCache };\r\n}\r\nfunction viewCacheUpdateEventSnap(viewCache, eventSnap, complete, filtered) {\r\n    return newViewCache(new CacheNode(eventSnap, complete, filtered), viewCache.serverCache);\r\n}\r\nfunction viewCacheUpdateServerSnap(viewCache, serverSnap, complete, filtered) {\r\n    return newViewCache(viewCache.eventCache, new CacheNode(serverSnap, complete, filtered));\r\n}\r\nfunction viewCacheGetCompleteEventSnap(viewCache) {\r\n    return viewCache.eventCache.isFullyInitialized()\r\n        ? viewCache.eventCache.getNode()\r\n        : null;\r\n}\r\nfunction viewCacheGetCompleteServerSnap(viewCache) {\r\n    return viewCache.serverCache.isFullyInitialized()\r\n        ? viewCache.serverCache.getNode()\r\n        : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n */\r\nconst EmptyChildren = () => {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nclass ImmutableTree {\r\n    constructor(value, children = EmptyChildren()) {\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    static fromObject(obj) {\r\n        let tree = new ImmutableTree(null);\r\n        each(obj, (childPath, childSnap) => {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    }\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     */\r\n    isEmpty() {\r\n        return this.value === null && this.children.isEmpty();\r\n    }\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */\r\n    findRootMostMatchingPathAndValue(relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: newEmptyPath(), value: this.value };\r\n        }\r\n        else {\r\n            if (pathIsEmpty(relativePath)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(relativePath);\r\n                const child = this.children.get(front);\r\n                if (child !== null) {\r\n                    const childExistingPathAndValue = child.findRootMostMatchingPathAndValue(pathPopFront(relativePath), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        const fullPath = pathChild(new Path(front), childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */\r\n    findRootMostValueAndPath(relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, () => true);\r\n    }\r\n    /**\r\n     * @returns The subtree at the given path\r\n     */\r\n    subtree(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */\r\n    set(relativePath, toSet) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.set(pathPopFront(relativePath), toSet);\r\n            const newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */\r\n    remove(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            if (this.children.isEmpty()) {\r\n                return new ImmutableTree(null);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                const newChild = child.remove(pathPopFront(relativePath));\r\n                let newChildren;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return new ImmutableTree(null);\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */\r\n    get(relativePath) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(pathPopFront(relativePath));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */\r\n    setTree(relativePath, newTree) {\r\n        if (pathIsEmpty(relativePath)) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            const front = pathGetFront(relativePath);\r\n            const child = this.children.get(front) || new ImmutableTree(null);\r\n            const newChild = child.setTree(pathPopFront(relativePath), newTree);\r\n            let newChildren;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    }\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */\r\n    fold(fn) {\r\n        return this.fold_(newEmptyPath(), fn);\r\n    }\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     */\r\n    fold_(pathSoFar, fn) {\r\n        const accum = {};\r\n        this.children.inorderTraversal((childKey, childTree) => {\r\n            accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    }\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */\r\n    findOnPath(path, f) {\r\n        return this.findOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    findOnPath_(pathToFollow, pathSoFar, f) {\r\n        const result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathIsEmpty(pathToFollow)) {\r\n                return null;\r\n            }\r\n            else {\r\n                const front = pathGetFront(pathToFollow);\r\n                const nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathPopFront(pathToFollow), pathChild(pathSoFar, front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    foreachOnPath(path, f) {\r\n        return this.foreachOnPath_(path, newEmptyPath(), f);\r\n    }\r\n    foreachOnPath_(pathToFollow, currentRelativePath, f) {\r\n        if (pathIsEmpty(pathToFollow)) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            const front = pathGetFront(pathToFollow);\r\n            const nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathPopFront(pathToFollow), pathChild(currentRelativePath, front), f);\r\n            }\r\n            else {\r\n                return new ImmutableTree(null);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */\r\n    foreach(f) {\r\n        this.foreach_(newEmptyPath(), f);\r\n    }\r\n    foreach_(currentRelativePath, f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            childTree.foreach_(pathChild(currentRelativePath, childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    }\r\n    foreachChild(f) {\r\n        this.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nclass CompoundWrite {\r\n    constructor(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    static empty() {\r\n        return new CompoundWrite(new ImmutableTree(null));\r\n    }\r\n}\r\nfunction compoundWriteAddWrite(compoundWrite, path, node) {\r\n    if (pathIsEmpty(path)) {\r\n        return new CompoundWrite(new ImmutableTree(node));\r\n    }\r\n    else {\r\n        const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            const rootMostPath = rootmost.path;\r\n            let value = rootmost.value;\r\n            const relativePath = newRelativePath(rootMostPath, path);\r\n            value = value.updateChild(relativePath, node);\r\n            return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath, value));\r\n        }\r\n        else {\r\n            const subtree = new ImmutableTree(node);\r\n            const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    }\r\n}\r\nfunction compoundWriteAddWrites(compoundWrite, path, updates) {\r\n    let newWrite = compoundWrite;\r\n    each(updates, (childKey, node) => {\r\n        newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\r\n    });\r\n    return newWrite;\r\n}\r\n/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */\r\nfunction compoundWriteRemoveWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return CompoundWrite.empty();\r\n    }\r\n    else {\r\n        const newWriteTree = compoundWrite.writeTree_.setTree(path, new ImmutableTree(null));\r\n        return new CompoundWrite(newWriteTree);\r\n    }\r\n}\r\n/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */\r\nfunction compoundWriteHasCompleteWrite(compoundWrite, path) {\r\n    return compoundWriteGetCompleteNode(compoundWrite, path) != null;\r\n}\r\n/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */\r\nfunction compoundWriteGetCompleteNode(compoundWrite, path) {\r\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\r\n    if (rootmost != null) {\r\n        return compoundWrite.writeTree_\r\n            .get(rootmost.path)\r\n            .getChild(newRelativePath(rootmost.path, path));\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */\r\nfunction compoundWriteGetCompleteChildren(compoundWrite) {\r\n    const children = [];\r\n    const node = compoundWrite.writeTree_.value;\r\n    if (node != null) {\r\n        // If it's a leaf node, it has no children; so nothing to do.\r\n        if (!node.isLeafNode()) {\r\n            node.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n                children.push(new NamedNode(childName, childNode));\r\n            });\r\n        }\r\n    }\r\n    else {\r\n        compoundWrite.writeTree_.children.inorderTraversal((childName, childTree) => {\r\n            if (childTree.value != null) {\r\n                children.push(new NamedNode(childName, childTree.value));\r\n            }\r\n        });\r\n    }\r\n    return children;\r\n}\r\nfunction compoundWriteChildCompoundWrite(compoundWrite, path) {\r\n    if (pathIsEmpty(path)) {\r\n        return compoundWrite;\r\n    }\r\n    else {\r\n        const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\r\n        if (shadowingNode != null) {\r\n            return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n        }\r\n        else {\r\n            return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */\r\nfunction compoundWriteIsEmpty(compoundWrite) {\r\n    return compoundWrite.writeTree_.isEmpty();\r\n}\r\n/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */\r\nfunction compoundWriteApply(compoundWrite, node) {\r\n    return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\r\n}\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        let priorityWrite = null;\r\n        writeTree.children.inorderTraversal((childKey, childTree) => {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(pathChild(relativePath, childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\r\n            node = node.updateChild(pathChild(relativePath, '.priority'), priorityWrite);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */\r\nfunction writeTreeChildWrites(writeTree, path) {\r\n    return newWriteTreeRef(path, writeTree);\r\n}\r\n/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */\r\nfunction writeTreeAddOverwrite(writeTree, path, snap, writeId, visible) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older write on top of newer ones');\r\n    if (visible === undefined) {\r\n        visible = true;\r\n    }\r\n    writeTree.allWrites.push({\r\n        path,\r\n        snap,\r\n        writeId,\r\n        visible\r\n    });\r\n    if (visible) {\r\n        writeTree.visibleWrites = compoundWriteAddWrite(writeTree.visibleWrites, path, snap);\r\n    }\r\n    writeTree.lastWriteId = writeId;\r\n}\r\n/**\r\n * Record a new merge from user code.\r\n */\r\nfunction writeTreeAddMerge(writeTree, path, changedChildren, writeId) {\r\n    assert(writeId > writeTree.lastWriteId, 'Stacking an older merge on top of newer ones');\r\n    writeTree.allWrites.push({\r\n        path,\r\n        children: changedChildren,\r\n        writeId,\r\n        visible: true\r\n    });\r\n    writeTree.visibleWrites = compoundWriteAddWrites(writeTree.visibleWrites, path, changedChildren);\r\n    writeTree.lastWriteId = writeId;\r\n}\r\nfunction writeTreeGetWrite(writeTree, writeId) {\r\n    for (let i = 0; i < writeTree.allWrites.length; i++) {\r\n        const record = writeTree.allWrites[i];\r\n        if (record.writeId === writeId) {\r\n            return record;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */\r\nfunction writeTreeRemoveWrite(writeTree, writeId) {\r\n    // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n    // out of order.\r\n    //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n    //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n    const idx = writeTree.allWrites.findIndex(s => {\r\n        return s.writeId === writeId;\r\n    });\r\n    assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n    const writeToRemove = writeTree.allWrites[idx];\r\n    writeTree.allWrites.splice(idx, 1);\r\n    let removedWriteWasVisible = writeToRemove.visible;\r\n    let removedWriteOverlapsWithOtherWrites = false;\r\n    let i = writeTree.allWrites.length - 1;\r\n    while (removedWriteWasVisible && i >= 0) {\r\n        const currentWrite = writeTree.allWrites[i];\r\n        if (currentWrite.visible) {\r\n            if (i >= idx &&\r\n                writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                // The removed write was completely shadowed by a subsequent write.\r\n                removedWriteWasVisible = false;\r\n            }\r\n            else if (pathContains(writeToRemove.path, currentWrite.path)) {\r\n                // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                removedWriteOverlapsWithOtherWrites = true;\r\n            }\r\n        }\r\n        i--;\r\n    }\r\n    if (!removedWriteWasVisible) {\r\n        return false;\r\n    }\r\n    else if (removedWriteOverlapsWithOtherWrites) {\r\n        // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n        writeTreeResetTree_(writeTree);\r\n        return true;\r\n    }\r\n    else {\r\n        // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n        if (writeToRemove.snap) {\r\n            writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, writeToRemove.path);\r\n        }\r\n        else {\r\n            const children = writeToRemove.children;\r\n            each(children, (childName) => {\r\n                writeTree.visibleWrites = compoundWriteRemoveWrite(writeTree.visibleWrites, pathChild(writeToRemove.path, childName));\r\n            });\r\n        }\r\n        return true;\r\n    }\r\n}\r\nfunction writeTreeRecordContainsPath_(writeRecord, path) {\r\n    if (writeRecord.snap) {\r\n        return pathContains(writeRecord.path, path);\r\n    }\r\n    else {\r\n        for (const childName in writeRecord.children) {\r\n            if (writeRecord.children.hasOwnProperty(childName) &&\r\n                pathContains(pathChild(writeRecord.path, childName), path)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */\r\nfunction writeTreeResetTree_(writeTree) {\r\n    writeTree.visibleWrites = writeTreeLayerTree_(writeTree.allWrites, writeTreeDefaultFilter_, newEmptyPath());\r\n    if (writeTree.allWrites.length > 0) {\r\n        writeTree.lastWriteId =\r\n            writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\r\n    }\r\n    else {\r\n        writeTree.lastWriteId = -1;\r\n    }\r\n}\r\n/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */\r\nfunction writeTreeDefaultFilter_(write) {\r\n    return write.visible;\r\n}\r\n/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */\r\nfunction writeTreeLayerTree_(writes, filter, treeRoot) {\r\n    let compoundWrite = CompoundWrite.empty();\r\n    for (let i = 0; i < writes.length; ++i) {\r\n        const write = writes[i];\r\n        // Theory, a later set will either:\r\n        // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n        // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n        if (filter(write)) {\r\n            const writePath = write.path;\r\n            let relativePath;\r\n            if (write.snap) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, relativePath, write.snap);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), write.snap.getChild(relativePath));\r\n                }\r\n                else ;\r\n            }\r\n            else if (write.children) {\r\n                if (pathContains(treeRoot, writePath)) {\r\n                    relativePath = newRelativePath(treeRoot, writePath);\r\n                    compoundWrite = compoundWriteAddWrites(compoundWrite, relativePath, write.children);\r\n                }\r\n                else if (pathContains(writePath, treeRoot)) {\r\n                    relativePath = newRelativePath(writePath, treeRoot);\r\n                    if (pathIsEmpty(relativePath)) {\r\n                        compoundWrite = compoundWriteAddWrites(compoundWrite, newEmptyPath(), write.children);\r\n                    }\r\n                    else {\r\n                        const child = safeGet(write.children, pathGetFront(relativePath));\r\n                        if (child) {\r\n                            // There exists a child in this node that matches the root path\r\n                            const deepNode = child.getChild(pathPopFront(relativePath));\r\n                            compoundWrite = compoundWriteAddWrite(compoundWrite, newEmptyPath(), deepNode);\r\n                        }\r\n                    }\r\n                }\r\n                else ;\r\n            }\r\n            else {\r\n                throw assertionError('WriteRecord should have .snap or .children');\r\n            }\r\n        }\r\n    }\r\n    return compoundWrite;\r\n}\r\n/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeCalcCompleteEventCache(writeTree, treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    if (!writeIdsToExclude && !includeHiddenWrites) {\r\n        const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            const subMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n            if (compoundWriteIsEmpty(subMerge)) {\r\n                return completeServerCache;\r\n            }\r\n            else if (completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())) {\r\n                // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                return null;\r\n            }\r\n            else {\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(subMerge, layeredCache);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\r\n            return completeServerCache;\r\n        }\r\n        else {\r\n            // If the server cache is null, and we don't have a complete cache, we need to return null\r\n            if (!includeHiddenWrites &&\r\n                completeServerCache == null &&\r\n                !compoundWriteHasCompleteWrite(merge, newEmptyPath())) {\r\n                return null;\r\n            }\r\n            else {\r\n                const filter = function (write) {\r\n                    return ((write.visible || includeHiddenWrites) &&\r\n                        (!writeIdsToExclude ||\r\n                            !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                        (pathContains(write.path, treePath) ||\r\n                            pathContains(treePath, write.path)));\r\n                };\r\n                const mergeAtPath = writeTreeLayerTree_(writeTree.allWrites, filter, treePath);\r\n                const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                return compoundWriteApply(mergeAtPath, layeredCache);\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */\r\nfunction writeTreeCalcCompleteEventChildren(writeTree, treePath, completeServerChildren) {\r\n    let completeChildren = ChildrenNode.EMPTY_NODE;\r\n    const topLevelSet = compoundWriteGetCompleteNode(writeTree.visibleWrites, treePath);\r\n    if (topLevelSet) {\r\n        if (!topLevelSet.isLeafNode()) {\r\n            // we're shadowing everything. Return the children.\r\n            topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\r\n                completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n            });\r\n        }\r\n        return completeChildren;\r\n    }\r\n    else if (completeServerChildren) {\r\n        // Layer any children we have on top of this\r\n        // We know we don't have a top-level set, so just enumerate existing children\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        completeServerChildren.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const node = compoundWriteApply(compoundWriteChildCompoundWrite(merge, new Path(childName)), childNode);\r\n            completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n        });\r\n        // Add any complete children we have from the set\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n    else {\r\n        // We don't have anything to layer on top of. Layer on any children we have\r\n        // Note that we can return an empty snap if we have a defined delete\r\n        const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n        compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\r\n            completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n        });\r\n        return completeChildren;\r\n    }\r\n}\r\n/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */\r\nfunction writeTreeCalcEventCacheAfterServerOverwrite(writeTree, treePath, childPath, existingEventSnap, existingServerSnap) {\r\n    assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n    const path = pathChild(treePath, childPath);\r\n    if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\r\n        // At this point we can probably guarantee that we're in case 2, meaning no events\r\n        // May need to check visibility while doing the findRootMostValueAndPath call\r\n        return null;\r\n    }\r\n    else {\r\n        // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n        const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n        if (compoundWriteIsEmpty(childMerge)) {\r\n            // We're not shadowing at all. Case 1\r\n            return existingServerSnap.getChild(childPath);\r\n        }\r\n        else {\r\n            // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n            // However this is tricky to find out, since user updates don't necessary change the server\r\n            // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n            // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n            // only check if the updates change the serverNode.\r\n            // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n            return compoundWriteApply(childMerge, existingServerSnap.getChild(childPath));\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeCalcCompleteChild(writeTree, treePath, childKey, existingServerSnap) {\r\n    const path = pathChild(treePath, childKey);\r\n    const shadowingNode = compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n    if (shadowingNode != null) {\r\n        return shadowingNode;\r\n    }\r\n    else {\r\n        if (existingServerSnap.isCompleteForChild(childKey)) {\r\n            const childMerge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, path);\r\n            return compoundWriteApply(childMerge, existingServerSnap.getNode().getImmediateChild(childKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */\r\nfunction writeTreeShadowingWrite(writeTree, path) {\r\n    return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */\r\nfunction writeTreeCalcIndexedSlice(writeTree, treePath, completeServerData, startPost, count, reverse, index) {\r\n    let toIterate;\r\n    const merge = compoundWriteChildCompoundWrite(writeTree.visibleWrites, treePath);\r\n    const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\r\n    if (shadowingNode != null) {\r\n        toIterate = shadowingNode;\r\n    }\r\n    else if (completeServerData != null) {\r\n        toIterate = compoundWriteApply(merge, completeServerData);\r\n    }\r\n    else {\r\n        // no children to iterate on\r\n        return [];\r\n    }\r\n    toIterate = toIterate.withIndex(index);\r\n    if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n        const nodes = [];\r\n        const cmp = index.getCompare();\r\n        const iter = reverse\r\n            ? toIterate.getReverseIteratorFrom(startPost, index)\r\n            : toIterate.getIteratorFrom(startPost, index);\r\n        let next = iter.getNext();\r\n        while (next && nodes.length < count) {\r\n            if (cmp(next, startPost) !== 0) {\r\n                nodes.push(next);\r\n            }\r\n            next = iter.getNext();\r\n        }\r\n        return nodes;\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nfunction newWriteTree() {\r\n    return {\r\n        visibleWrites: CompoundWrite.empty(),\r\n        allWrites: [],\r\n        lastWriteId: -1\r\n    };\r\n}\r\n/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */\r\nfunction writeTreeRefCalcCompleteEventCache(writeTreeRef, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n    return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n}\r\n/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */\r\nfunction writeTreeRefCalcCompleteEventChildren(writeTreeRef, completeServerChildren) {\r\n    return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerChildren);\r\n}\r\n/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */\r\nfunction writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef, path, existingEventSnap, existingServerSnap) {\r\n    return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree, writeTreeRef.treePath, path, existingEventSnap, existingServerSnap);\r\n}\r\n/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */\r\nfunction writeTreeRefShadowingWrite(writeTreeRef, path) {\r\n    return writeTreeShadowingWrite(writeTreeRef.writeTree, pathChild(writeTreeRef.treePath, path));\r\n}\r\n/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */\r\nfunction writeTreeRefCalcIndexedSlice(writeTreeRef, completeServerData, startPost, count, reverse, index) {\r\n    return writeTreeCalcIndexedSlice(writeTreeRef.writeTree, writeTreeRef.treePath, completeServerData, startPost, count, reverse, index);\r\n}\r\n/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */\r\nfunction writeTreeRefCalcCompleteChild(writeTreeRef, childKey, existingServerCache) {\r\n    return writeTreeCalcCompleteChild(writeTreeRef.writeTree, writeTreeRef.treePath, childKey, existingServerCache);\r\n}\r\n/**\r\n * Return a WriteTreeRef for a child.\r\n */\r\nfunction writeTreeRefChild(writeTreeRef, childName) {\r\n    return newWriteTreeRef(pathChild(writeTreeRef.treePath, childName), writeTreeRef.writeTree);\r\n}\r\nfunction newWriteTreeRef(path, writeTree) {\r\n    return {\r\n        treePath: path,\r\n        writeTree\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ChildChangeAccumulator {\r\n    constructor() {\r\n        this.changeMap = new Map();\r\n    }\r\n    trackChildChange(change) {\r\n        const type = change.type;\r\n        const childKey = change.childName;\r\n        assert(type === \"child_added\" /* ChangeType.CHILD_ADDED */ ||\r\n            type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ ||\r\n            type === \"child_removed\" /* ChangeType.CHILD_REMOVED */, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        const oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            const oldType = oldChange.type;\r\n            if (type === \"child_added\" /* ChangeType.CHILD_ADDED */ &&\r\n                oldType === \"child_removed\" /* ChangeType.CHILD_REMOVED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === \"child_removed\" /* ChangeType.CHILD_REMOVED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildRemoved(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_added\" /* ChangeType.CHILD_ADDED */) {\r\n                this.changeMap.set(childKey, changeChildAdded(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === \"child_changed\" /* ChangeType.CHILD_CHANGED */ &&\r\n                oldType === \"child_changed\" /* ChangeType.CHILD_CHANGED */) {\r\n                this.changeMap.set(childKey, changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    }\r\n    getChanges() {\r\n        return Array.from(this.changeMap.values());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nclass NoCompleteChildSource_ {\r\n    getCompleteChild(childKey) {\r\n        return null;\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Singleton instance.\r\n */\r\nconst NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */\r\nclass WriteTreeCompleteChildSource {\r\n    constructor(writes_, viewCache_, optCompleteServerCache_ = null) {\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    getCompleteChild(childKey) {\r\n        const node = this.viewCache_.eventCache;\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            const serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.serverCache;\r\n            return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\r\n        }\r\n    }\r\n    getChildAfterChild(index, child, reverse) {\r\n        const completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : viewCacheGetCompleteServerSnap(this.viewCache_);\r\n        const nodes = writeTreeRefCalcIndexedSlice(this.writes_, completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction newViewProcessor(filter) {\r\n    return { filter };\r\n}\r\nfunction viewProcessorAssertIndexed(viewProcessor, viewCache) {\r\n    assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Event snap not indexed');\r\n    assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()), 'Server snap not indexed');\r\n}\r\nfunction viewProcessorApplyOperation(viewProcessor, oldViewCache, operation, writesCache, completeCache) {\r\n    const accumulator = new ChildChangeAccumulator();\r\n    let newViewCache, filterServerNode;\r\n    if (operation.type === OperationType.OVERWRITE) {\r\n        const overwrite = operation;\r\n        if (overwrite.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(overwrite.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n            // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n            // again\r\n            filterServerNode =\r\n                overwrite.source.tagged ||\r\n                    (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\r\n            newViewCache = viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.MERGE) {\r\n        const merge = operation;\r\n        if (merge.source.fromUser) {\r\n            newViewCache = viewProcessorApplyUserMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            assert(merge.source.fromServer, 'Unknown source.');\r\n            // We filter the node if it's a tagged update or the node has been previously filtered\r\n            filterServerNode =\r\n                merge.source.tagged || oldViewCache.serverCache.isFiltered();\r\n            newViewCache = viewProcessorApplyServerMerge(viewProcessor, oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n        const ackUserWrite = operation;\r\n        if (!ackUserWrite.revert) {\r\n            newViewCache = viewProcessorAckUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n        }\r\n        else {\r\n            newViewCache = viewProcessorRevertUserWrite(viewProcessor, oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n        }\r\n    }\r\n    else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n        newViewCache = viewProcessorListenComplete(viewProcessor, oldViewCache, operation.path, writesCache, accumulator);\r\n    }\r\n    else {\r\n        throw assertionError('Unknown operation type: ' + operation.type);\r\n    }\r\n    const changes = accumulator.getChanges();\r\n    viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\r\n    return { viewCache: newViewCache, changes };\r\n}\r\nfunction viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, accumulator) {\r\n    const eventSnap = newViewCache.eventCache;\r\n    if (eventSnap.isFullyInitialized()) {\r\n        const isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n        const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\r\n        if (accumulator.length > 0 ||\r\n            !oldViewCache.eventCache.isFullyInitialized() ||\r\n            (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\r\n            !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n            accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));\r\n        }\r\n    }\r\n}\r\nfunction viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, viewCache, changePath, writesCache, source, accumulator) {\r\n    const oldEventSnap = viewCache.eventCache;\r\n    if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\r\n        // we have a shadowing write, ignore changes\r\n        return viewCache;\r\n    }\r\n    else {\r\n        let newEventCache, serverNode;\r\n        if (pathIsEmpty(changePath)) {\r\n            // TODO: figure out how this plays with \"sliding ack windows\"\r\n            assert(viewCache.serverCache.isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n            if (viewCache.serverCache.isFiltered()) {\r\n                // We need to special case this, because we need to only apply writes to complete children, or\r\n                // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                // writes cannot be guaranteed to be complete\r\n                const serverCache = viewCacheGetCompleteServerSnap(viewCache);\r\n                const completeChildren = serverCache instanceof ChildrenNode\r\n                    ? serverCache\r\n                    : ChildrenNode.EMPTY_NODE;\r\n                const completeEventChildren = writeTreeRefCalcCompleteEventChildren(writesCache, completeChildren);\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeEventChildren, accumulator);\r\n            }\r\n            else {\r\n                const completeNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                newEventCache = viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(), completeNode, accumulator);\r\n            }\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(changePath);\r\n            if (childKey === '.priority') {\r\n                assert(pathGetLength(changePath) === 1, \"Can't have a priority with additional path components\");\r\n                const oldEventNode = oldEventSnap.getNode();\r\n                serverNode = viewCache.serverCache.getNode();\r\n                // we might have overwrites for this priority\r\n                const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventNode, serverNode);\r\n                if (updatedPriority != null) {\r\n                    newEventCache = viewProcessor.filter.updatePriority(oldEventNode, updatedPriority);\r\n                }\r\n                else {\r\n                    // priority didn't change, keep old node\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n            else {\r\n                const childChangePath = pathPopFront(changePath);\r\n                // update child\r\n                let newEventChild;\r\n                if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                    serverNode = viewCache.serverCache.getNode();\r\n                    const eventChildUpdate = writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache, changePath, oldEventSnap.getNode(), serverNode);\r\n                    if (eventChildUpdate != null) {\r\n                        newEventChild = oldEventSnap\r\n                            .getNode()\r\n                            .getImmediateChild(childKey)\r\n                            .updateChild(childChangePath, eventChildUpdate);\r\n                    }\r\n                    else {\r\n                        // Nothing changed, just keep the old child\r\n                        newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                    }\r\n                }\r\n                else {\r\n                    newEventChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n                }\r\n                if (newEventChild != null) {\r\n                    newEventCache = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                }\r\n                else {\r\n                    // no complete child available or no change\r\n                    newEventCache = oldEventSnap.getNode();\r\n                }\r\n            }\r\n        }\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath), viewProcessor.filter.filtersNodes());\r\n    }\r\n}\r\nfunction viewProcessorApplyServerOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n    const oldServerSnap = oldViewCache.serverCache;\r\n    let newServerCache;\r\n    const serverFilter = filterServerNode\r\n        ? viewProcessor.filter\r\n        : viewProcessor.filter.getIndexedFilter();\r\n    if (pathIsEmpty(changePath)) {\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n    }\r\n    else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n        // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n        const newServerNode = oldServerSnap\r\n            .getNode()\r\n            .updateChild(changePath, changedSnap);\r\n        newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n            pathGetLength(changePath) > 1) {\r\n            // We don't update incomplete nodes with updates intended for other listeners\r\n            return oldViewCache;\r\n        }\r\n        const childChangePath = pathPopFront(changePath);\r\n        const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n        const newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n        if (childKey === '.priority') {\r\n            newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n        }\r\n        else {\r\n            newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n        }\r\n    }\r\n    const newViewCache = viewCacheUpdateServerSnap(oldViewCache, newServerCache, oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath), serverFilter.filtersNodes());\r\n    const source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, changePath, writesCache, source, accumulator);\r\n}\r\nfunction viewProcessorApplyUserOverwrite(viewProcessor, oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n    const oldEventSnap = oldViewCache.eventCache;\r\n    let newViewCache, newEventCache;\r\n    const source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n    if (pathIsEmpty(changePath)) {\r\n        newEventCache = viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(), changedSnap, accumulator);\r\n        newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, true, viewProcessor.filter.filtersNodes());\r\n    }\r\n    else {\r\n        const childKey = pathGetFront(changePath);\r\n        if (childKey === '.priority') {\r\n            newEventCache = viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(), changedSnap);\r\n            newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n        }\r\n        else {\r\n            const childChangePath = pathPopFront(changePath);\r\n            const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n            let newChild;\r\n            if (pathIsEmpty(childChangePath)) {\r\n                // Child overwrite, we can replace the child\r\n                newChild = changedSnap;\r\n            }\r\n            else {\r\n                const childNode = source.getCompleteChild(childKey);\r\n                if (childNode != null) {\r\n                    if (pathGetBack(childChangePath) === '.priority' &&\r\n                        childNode.getChild(pathParent(childChangePath)).isEmpty()) {\r\n                        // This is a priority update on an empty node. If this node exists on the server, the\r\n                        // server will send down the priority in the update, so ignore for now\r\n                        newChild = childNode;\r\n                    }\r\n                    else {\r\n                        newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                    }\r\n                }\r\n                else {\r\n                    // There is no complete child node available\r\n                    newChild = ChildrenNode.EMPTY_NODE;\r\n                }\r\n            }\r\n            if (!oldChild.equals(newChild)) {\r\n                const newEventSnap = viewProcessor.filter.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                newViewCache = viewCacheUpdateEventSnap(oldViewCache, newEventSnap, oldEventSnap.isFullyInitialized(), viewProcessor.filter.filtersNodes());\r\n            }\r\n            else {\r\n                newViewCache = oldViewCache;\r\n            }\r\n        }\r\n    }\r\n    return newViewCache;\r\n}\r\nfunction viewProcessorCacheHasChild(viewCache, childKey) {\r\n    return viewCache.eventCache.isCompleteForChild(childKey);\r\n}\r\nfunction viewProcessorApplyUserMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    changedChildren.foreach((relativePath, childNode) => {\r\n        const writePath = pathChild(path, relativePath);\r\n        if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\r\n            curViewCache = viewProcessorApplyUserOverwrite(viewProcessor, curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorApplyMerge(viewProcessor, node, merge) {\r\n    merge.foreach((relativePath, childNode) => {\r\n        node = node.updateChild(relativePath, childNode);\r\n    });\r\n    return node;\r\n}\r\nfunction viewProcessorApplyServerMerge(viewProcessor, viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n    // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n    // wait for the complete data update coming soon.\r\n    if (viewCache.serverCache.getNode().isEmpty() &&\r\n        !viewCache.serverCache.isFullyInitialized()) {\r\n        return viewCache;\r\n    }\r\n    // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n    // window leaving room for new items.  It's important we process these changes first, so we\r\n    // iterate the changes twice, first processing any that affect items currently in view.\r\n    // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n    // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n    // not the other.\r\n    let curViewCache = viewCache;\r\n    let viewMergeTree;\r\n    if (pathIsEmpty(path)) {\r\n        viewMergeTree = changedChildren;\r\n    }\r\n    else {\r\n        viewMergeTree = new ImmutableTree(null).setTree(path, changedChildren);\r\n    }\r\n    const serverNode = viewCache.serverCache.getNode();\r\n    viewMergeTree.children.inorderTraversal((childKey, childTree) => {\r\n        if (serverNode.hasChild(childKey)) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\r\n        const isUnknownDeepMerge = !viewCache.serverCache.isCompleteForChild(childKey) &&\r\n            childMergeTree.value === null;\r\n        if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n            const serverChild = viewCache.serverCache\r\n                .getNode()\r\n                .getImmediateChild(childKey);\r\n            const newChild = viewProcessorApplyMerge(viewProcessor, serverChild, childMergeTree);\r\n            curViewCache = viewProcessorApplyServerOverwrite(viewProcessor, curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n        }\r\n    });\r\n    return curViewCache;\r\n}\r\nfunction viewProcessorAckUserWrite(viewProcessor, viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n    if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\r\n        return viewCache;\r\n    }\r\n    // Only filter server node if it is currently filtered\r\n    const filterServerNode = viewCache.serverCache.isFiltered();\r\n    // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n    // now that it won't be shadowed.\r\n    const serverCache = viewCache.serverCache;\r\n    if (affectedTree.value != null) {\r\n        // This is an overwrite.\r\n        if ((pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\r\n            serverCache.isCompleteForPath(ackPath)) {\r\n            return viewProcessorApplyServerOverwrite(viewProcessor, viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else if (pathIsEmpty(ackPath)) {\r\n            // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n            // should just re-apply whatever we have in our cache as a merge.\r\n            let changedChildren = new ImmutableTree(null);\r\n            serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\r\n                changedChildren = changedChildren.set(new Path(name), node);\r\n            });\r\n            return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n        else {\r\n            return viewCache;\r\n        }\r\n    }\r\n    else {\r\n        // This is a merge.\r\n        let changedChildren = new ImmutableTree(null);\r\n        affectedTree.foreach((mergePath, value) => {\r\n            const serverCachePath = pathChild(ackPath, mergePath);\r\n            if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                changedChildren = changedChildren.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n            }\r\n        });\r\n        return viewProcessorApplyServerMerge(viewProcessor, viewCache, ackPath, changedChildren, writesCache, completeCache, filterServerNode, accumulator);\r\n    }\r\n}\r\nfunction viewProcessorListenComplete(viewProcessor, viewCache, path, writesCache, accumulator) {\r\n    const oldServerNode = viewCache.serverCache;\r\n    const newViewCache = viewCacheUpdateServerSnap(viewCache, oldServerNode.getNode(), oldServerNode.isFullyInitialized() || pathIsEmpty(path), oldServerNode.isFiltered());\r\n    return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor, newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n}\r\nfunction viewProcessorRevertUserWrite(viewProcessor, viewCache, path, writesCache, completeServerCache, accumulator) {\r\n    let complete;\r\n    if (writeTreeRefShadowingWrite(writesCache, path) != null) {\r\n        return viewCache;\r\n    }\r\n    else {\r\n        const source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n        const oldEventCache = viewCache.eventCache.getNode();\r\n        let newEventCache;\r\n        if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\r\n            let newNode;\r\n            if (viewCache.serverCache.isFullyInitialized()) {\r\n                newNode = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n            }\r\n            else {\r\n                const serverChildren = viewCache.serverCache.getNode();\r\n                assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                newNode = writeTreeRefCalcCompleteEventChildren(writesCache, serverChildren);\r\n            }\r\n            newNode = newNode;\r\n            newEventCache = viewProcessor.filter.updateFullNode(oldEventCache, newNode, accumulator);\r\n        }\r\n        else {\r\n            const childKey = pathGetFront(path);\r\n            let newChild = writeTreeRefCalcCompleteChild(writesCache, childKey, viewCache.serverCache);\r\n            if (newChild == null &&\r\n                viewCache.serverCache.isCompleteForChild(childKey)) {\r\n                newChild = oldEventCache.getImmediateChild(childKey);\r\n            }\r\n            if (newChild != null) {\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, newChild, pathPopFront(path), source, accumulator);\r\n            }\r\n            else if (viewCache.eventCache.getNode().hasChild(childKey)) {\r\n                // No complete child available, delete the existing one, if any\r\n                newEventCache = viewProcessor.filter.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, pathPopFront(path), source, accumulator);\r\n            }\r\n            else {\r\n                newEventCache = oldEventCache;\r\n            }\r\n            if (newEventCache.isEmpty() &&\r\n                viewCache.serverCache.isFullyInitialized()) {\r\n                // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                complete = writeTreeRefCalcCompleteEventCache(writesCache, viewCacheGetCompleteServerSnap(viewCache));\r\n                if (complete.isLeafNode()) {\r\n                    newEventCache = viewProcessor.filter.updateFullNode(newEventCache, complete, accumulator);\r\n                }\r\n            }\r\n        }\r\n        complete =\r\n            viewCache.serverCache.isFullyInitialized() ||\r\n                writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\r\n        return viewCacheUpdateEventSnap(viewCache, newEventCache, complete, viewProcessor.filter.filtersNodes());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */\r\nclass View {\r\n    constructor(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        const params = this.query_._queryParams;\r\n        const indexFilter = new IndexedFilter(params.getIndex());\r\n        const filter = queryParamsGetNodeFilter(params);\r\n        this.processor_ = newViewProcessor(filter);\r\n        const initialServerCache = initialViewCache.serverCache;\r\n        const initialEventCache = initialViewCache.eventCache;\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        const serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        const eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        const newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        const newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        this.viewCache_ = newViewCache(newEventCache, newServerCache);\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    get query() {\r\n        return this.query_;\r\n    }\r\n}\r\nfunction viewGetServerCache(view) {\r\n    return view.viewCache_.serverCache.getNode();\r\n}\r\nfunction viewGetCompleteNode(view) {\r\n    return viewCacheGetCompleteEventSnap(view.viewCache_);\r\n}\r\nfunction viewGetCompleteServerCache(view, path) {\r\n    const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\r\n    if (cache) {\r\n        // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n        // we need to see if it contains the child we're interested in.\r\n        if (view.query._queryParams.loadsAllData() ||\r\n            (!pathIsEmpty(path) &&\r\n                !cache.getImmediateChild(pathGetFront(path)).isEmpty())) {\r\n            return cache.getChild(path);\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction viewIsEmpty(view) {\r\n    return view.eventRegistrations_.length === 0;\r\n}\r\nfunction viewAddEventRegistration(view, eventRegistration) {\r\n    view.eventRegistrations_.push(eventRegistration);\r\n}\r\n/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction viewRemoveEventRegistration(view, eventRegistration, cancelError) {\r\n    const cancelEvents = [];\r\n    if (cancelError) {\r\n        assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n        const path = view.query._path;\r\n        view.eventRegistrations_.forEach(registration => {\r\n            const maybeEvent = registration.createCancelEvent(cancelError, path);\r\n            if (maybeEvent) {\r\n                cancelEvents.push(maybeEvent);\r\n            }\r\n        });\r\n    }\r\n    if (eventRegistration) {\r\n        let remaining = [];\r\n        for (let i = 0; i < view.eventRegistrations_.length; ++i) {\r\n            const existing = view.eventRegistrations_[i];\r\n            if (!existing.matches(eventRegistration)) {\r\n                remaining.push(existing);\r\n            }\r\n            else if (eventRegistration.hasAnyCallback()) {\r\n                // We're removing just this one\r\n                remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\r\n                break;\r\n            }\r\n        }\r\n        view.eventRegistrations_ = remaining;\r\n    }\r\n    else {\r\n        view.eventRegistrations_ = [];\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */\r\nfunction viewApplyOperation(view, operation, writesCache, completeServerCache) {\r\n    if (operation.type === OperationType.MERGE &&\r\n        operation.source.queryId !== null) {\r\n        assert(viewCacheGetCompleteServerSnap(view.viewCache_), 'We should always have a full cache before handling merges');\r\n        assert(viewCacheGetCompleteEventSnap(view.viewCache_), 'Missing event cache, even though we have a server cache');\r\n    }\r\n    const oldViewCache = view.viewCache_;\r\n    const result = viewProcessorApplyOperation(view.processor_, oldViewCache, operation, writesCache, completeServerCache);\r\n    viewProcessorAssertIndexed(view.processor_, result.viewCache);\r\n    assert(result.viewCache.serverCache.isFullyInitialized() ||\r\n        !oldViewCache.serverCache.isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n    view.viewCache_ = result.viewCache;\r\n    return viewGenerateEventsForChanges_(view, result.changes, result.viewCache.eventCache.getNode(), null);\r\n}\r\nfunction viewGetInitialEvents(view, registration) {\r\n    const eventSnap = view.viewCache_.eventCache;\r\n    const initialChanges = [];\r\n    if (!eventSnap.getNode().isLeafNode()) {\r\n        const eventNode = eventSnap.getNode();\r\n        eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\r\n            initialChanges.push(changeChildAdded(key, childNode));\r\n        });\r\n    }\r\n    if (eventSnap.isFullyInitialized()) {\r\n        initialChanges.push(changeValue(eventSnap.getNode()));\r\n    }\r\n    return viewGenerateEventsForChanges_(view, initialChanges, eventSnap.getNode(), registration);\r\n}\r\nfunction viewGenerateEventsForChanges_(view, changes, eventCache, eventRegistration) {\r\n    const registrations = eventRegistration\r\n        ? [eventRegistration]\r\n        : view.eventRegistrations_;\r\n    return eventGeneratorGenerateEventsForChanges(view.eventGenerator_, changes, eventCache, registrations);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nclass SyncPoint {\r\n    constructor() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n}\r\nfunction syncPointSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor$1, '__referenceConstructor has already been defined');\r\n    referenceConstructor$1 = val;\r\n}\r\nfunction syncPointGetReferenceConstructor() {\r\n    assert(referenceConstructor$1, 'Reference.ts has not been loaded');\r\n    return referenceConstructor$1;\r\n}\r\nfunction syncPointIsEmpty(syncPoint) {\r\n    return syncPoint.views.size === 0;\r\n}\r\nfunction syncPointApplyOperation(syncPoint, operation, writesCache, optCompleteServerCache) {\r\n    const queryId = operation.source.queryId;\r\n    if (queryId !== null) {\r\n        const view = syncPoint.views.get(queryId);\r\n        assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n        return viewApplyOperation(view, operation, writesCache, optCompleteServerCache);\r\n    }\r\n    else {\r\n        let events = [];\r\n        for (const view of syncPoint.views.values()) {\r\n            events = events.concat(viewApplyOperation(view, operation, writesCache, optCompleteServerCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete) {\r\n    const queryId = query._queryIdentifier;\r\n    const view = syncPoint.views.get(queryId);\r\n    if (!view) {\r\n        // TODO: make writesCache take flag for complete server node\r\n        let eventCache = writeTreeRefCalcCompleteEventCache(writesCache, serverCacheComplete ? serverCache : null);\r\n        let eventCacheComplete = false;\r\n        if (eventCache) {\r\n            eventCacheComplete = true;\r\n        }\r\n        else if (serverCache instanceof ChildrenNode) {\r\n            eventCache = writeTreeRefCalcCompleteEventChildren(writesCache, serverCache);\r\n            eventCacheComplete = false;\r\n        }\r\n        else {\r\n            eventCache = ChildrenNode.EMPTY_NODE;\r\n            eventCacheComplete = false;\r\n        }\r\n        const viewCache = newViewCache(new CacheNode(eventCache, eventCacheComplete, false), new CacheNode(serverCache, serverCacheComplete, false));\r\n        return new View(query, viewCache);\r\n    }\r\n    return view;\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */\r\nfunction syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCache, serverCacheComplete);\r\n    if (!syncPoint.views.has(query._queryIdentifier)) {\r\n        syncPoint.views.set(query._queryIdentifier, view);\r\n    }\r\n    // This is guaranteed to exist now, we just created anything that was missing\r\n    viewAddEventRegistration(view, eventRegistration);\r\n    return viewGetInitialEvents(view, eventRegistration);\r\n}\r\n/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */\r\nfunction syncPointRemoveEventRegistration(syncPoint, query, eventRegistration, cancelError) {\r\n    const queryId = query._queryIdentifier;\r\n    const removed = [];\r\n    let cancelEvents = [];\r\n    const hadCompleteView = syncPointHasCompleteView(syncPoint);\r\n    if (queryId === 'default') {\r\n        // When you do ref.off(...), we search all views for the registration to remove.\r\n        for (const [viewQueryId, view] of syncPoint.views.entries()) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(viewQueryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // remove the callback from the specific view.\r\n        const view = syncPoint.views.get(queryId);\r\n        if (view) {\r\n            cancelEvents = cancelEvents.concat(viewRemoveEventRegistration(view, eventRegistration, cancelError));\r\n            if (viewIsEmpty(view)) {\r\n                syncPoint.views.delete(queryId);\r\n                // We'll deal with complete views later.\r\n                if (!view.query._queryParams.loadsAllData()) {\r\n                    removed.push(view.query);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\r\n        // We removed our last complete view.\r\n        removed.push(new (syncPointGetReferenceConstructor())(query._repo, query._path));\r\n    }\r\n    return { removed, events: cancelEvents };\r\n}\r\nfunction syncPointGetQueryViews(syncPoint) {\r\n    const result = [];\r\n    for (const view of syncPoint.views.values()) {\r\n        if (!view.query._queryParams.loadsAllData()) {\r\n            result.push(view);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */\r\nfunction syncPointGetCompleteServerCache(syncPoint, path) {\r\n    let serverCache = null;\r\n    for (const view of syncPoint.views.values()) {\r\n        serverCache = serverCache || viewGetCompleteServerCache(view, path);\r\n    }\r\n    return serverCache;\r\n}\r\nfunction syncPointViewForQuery(syncPoint, query) {\r\n    const params = query._queryParams;\r\n    if (params.loadsAllData()) {\r\n        return syncPointGetCompleteView(syncPoint);\r\n    }\r\n    else {\r\n        const queryId = query._queryIdentifier;\r\n        return syncPoint.views.get(queryId);\r\n    }\r\n}\r\nfunction syncPointViewExistsForQuery(syncPoint, query) {\r\n    return syncPointViewForQuery(syncPoint, query) != null;\r\n}\r\nfunction syncPointHasCompleteView(syncPoint) {\r\n    return syncPointGetCompleteView(syncPoint) != null;\r\n}\r\nfunction syncPointGetCompleteView(syncPoint) {\r\n    for (const view of syncPoint.views.values()) {\r\n        if (view.query._queryParams.loadsAllData()) {\r\n            return view;\r\n        }\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nlet referenceConstructor;\r\nfunction syncTreeSetReferenceConstructor(val) {\r\n    assert(!referenceConstructor, '__referenceConstructor has already been defined');\r\n    referenceConstructor = val;\r\n}\r\nfunction syncTreeGetReferenceConstructor() {\r\n    assert(referenceConstructor, 'Reference.ts has not been loaded');\r\n    return referenceConstructor;\r\n}\r\n/**\r\n * Static tracker for next query tag.\r\n */\r\nlet syncTreeNextQueryTag_ = 1;\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */\r\nclass SyncTree {\r\n    /**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    constructor(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = new ImmutableTree(null);\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = newWriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n}\r\n/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserOverwrite(syncTree, path, newData, writeId, visible) {\r\n    // Record pending write.\r\n    writeTreeAddOverwrite(syncTree.pendingWriteTree_, path, newData, writeId, visible);\r\n    if (!visible) {\r\n        return [];\r\n    }\r\n    else {\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceUser(), path, newData));\r\n    }\r\n}\r\n/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyUserMerge(syncTree, path, changedChildren, writeId) {\r\n    // Record pending merge.\r\n    writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceUser(), path, changeTree));\r\n}\r\n/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAckUserWrite(syncTree, writeId, revert = false) {\r\n    const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\r\n    const needToReevaluate = writeTreeRemoveWrite(syncTree.pendingWriteTree_, writeId);\r\n    if (!needToReevaluate) {\r\n        return [];\r\n    }\r\n    else {\r\n        let affectedTree = new ImmutableTree(null);\r\n        if (write.snap != null) {\r\n            // overwrite\r\n            affectedTree = affectedTree.set(newEmptyPath(), true);\r\n        }\r\n        else {\r\n            each(write.children, (pathString) => {\r\n                affectedTree = affectedTree.set(new Path(pathString), true);\r\n            });\r\n        }\r\n        return syncTreeApplyOperationToSyncPoints_(syncTree, new AckUserWrite(write.path, affectedTree, revert));\r\n    }\r\n}\r\n/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerOverwrite(syncTree, path, newData) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Overwrite(newOperationSourceServer(), path, newData));\r\n}\r\n/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyServerMerge(syncTree, path, changedChildren) {\r\n    const changeTree = ImmutableTree.fromObject(changedChildren);\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new Merge(newOperationSourceServer(), path, changeTree));\r\n}\r\n/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyListenComplete(syncTree, path) {\r\n    return syncTreeApplyOperationToSyncPoints_(syncTree, new ListenComplete(newOperationSourceServer(), path));\r\n}\r\n/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedListenComplete(syncTree, path, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new ListenComplete(newOperationSourceServerTaggedQuery(queryId), relativePath);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @param skipListenerDedup - When performing a `get()`, we don't add any new listeners, so no\r\n *  deduping needs to take place. This flag allows toggling of that behavior\r\n * @returns Cancel events, if cancelError was provided.\r\n */\r\nfunction syncTreeRemoveEventRegistration(syncTree, query, eventRegistration, cancelError, skipListenerDedup = false) {\r\n    // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n    const path = query._path;\r\n    const maybeSyncPoint = syncTree.syncPointTree_.get(path);\r\n    let cancelEvents = [];\r\n    // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n    // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n    // not loadsAllData().\r\n    if (maybeSyncPoint &&\r\n        (query._queryIdentifier === 'default' ||\r\n            syncPointViewExistsForQuery(maybeSyncPoint, query))) {\r\n        const removedAndEvents = syncPointRemoveEventRegistration(maybeSyncPoint, query, eventRegistration, cancelError);\r\n        if (syncPointIsEmpty(maybeSyncPoint)) {\r\n            syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\r\n        }\r\n        const removed = removedAndEvents.removed;\r\n        cancelEvents = removedAndEvents.events;\r\n        if (!skipListenerDedup) {\r\n            /**\r\n             * We may have just removed one of many listeners and can short-circuit this whole process\r\n             * We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n             * properly set up.\r\n             */\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            const removingDefault = -1 !==\r\n                removed.findIndex(query => {\r\n                    return query._queryParams.loadsAllData();\r\n                });\r\n            const covered = syncTree.syncPointTree_.findOnPath(path, (relativePath, parentSyncPoint) => syncPointHasCompleteView(parentSyncPoint));\r\n            if (removingDefault && !covered) {\r\n                const subtree = syncTree.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (let i = 0; i < newViews.length; ++i) {\r\n                        const view = newViews[i], newQuery = view.query;\r\n                        const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n                        syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery), syncTreeTagForQuery(syncTree, newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n                // Otherwise there's nothing below us, so nothing we need to start listening on\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    const defaultTag = null;\r\n                    syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach((queryToRemove) => {\r\n                        const tagToRemove = syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));\r\n                        syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        // Now, clear all of the tags we're tracking for the removed listens\r\n        syncTreeRemoveTags_(syncTree, removed);\r\n    }\r\n    return cancelEvents;\r\n}\r\n/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryOverwrite(syncTree, path, snap, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey != null) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const op = new Overwrite(newOperationSourceServerTaggedQuery(queryId), relativePath, snap);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // Query must have been removed already\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeApplyTaggedQueryMerge(syncTree, path, changedChildren, tag) {\r\n    const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\r\n    if (queryKey) {\r\n        const r = syncTreeParseQueryKey_(queryKey);\r\n        const queryPath = r.path, queryId = r.queryId;\r\n        const relativePath = newRelativePath(queryPath, path);\r\n        const changeTree = ImmutableTree.fromObject(changedChildren);\r\n        const op = new Merge(newOperationSourceServerTaggedQuery(queryId), relativePath, changeTree);\r\n        return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\r\n    }\r\n    else {\r\n        // We've already removed the query. No big deal, ignore the update\r\n        return [];\r\n    }\r\n}\r\n/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */\r\nfunction syncTreeAddEventRegistration(syncTree, query, eventRegistration, skipSetupListener = false) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    let foundAncestorDefaultView = false;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(sp);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        foundAncestorDefaultView =\r\n            foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let serverCacheComplete;\r\n    if (serverCache != null) {\r\n        serverCacheComplete = true;\r\n    }\r\n    else {\r\n        serverCacheComplete = false;\r\n        serverCache = ChildrenNode.EMPTY_NODE;\r\n        const subtree = syncTree.syncPointTree_.subtree(path);\r\n        subtree.foreachChild((childName, childSyncPoint) => {\r\n            const completeCache = syncPointGetCompleteServerCache(childSyncPoint, newEmptyPath());\r\n            if (completeCache) {\r\n                serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n            }\r\n        });\r\n    }\r\n    const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\r\n    if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\r\n        // We need to track a tag for this query\r\n        const queryKey = syncTreeMakeQueryKey_(query);\r\n        assert(!syncTree.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n        const tag = syncTreeGetNextQueryTag_();\r\n        syncTree.queryToTagMap.set(queryKey, tag);\r\n        syncTree.tagToQueryMap.set(tag, queryKey);\r\n    }\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\r\n    let events = syncPointAddEventRegistration(syncPoint, query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n    if (!viewAlreadyExists && !foundAncestorDefaultView && !skipSetupListener) {\r\n        const view = syncPointViewForQuery(syncPoint, query);\r\n        events = events.concat(syncTreeSetupListener_(syncTree, query, view));\r\n    }\r\n    return events;\r\n}\r\n/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */\r\nfunction syncTreeCalcCompleteEventCache(syncTree, path, writeIdsToExclude) {\r\n    const includeHiddenSets = true;\r\n    const writeTree = syncTree.pendingWriteTree_;\r\n    const serverCache = syncTree.syncPointTree_.findOnPath(path, (pathSoFar, syncPoint) => {\r\n        const relativePath = newRelativePath(pathSoFar, path);\r\n        const serverCache = syncPointGetCompleteServerCache(syncPoint, relativePath);\r\n        if (serverCache) {\r\n            return serverCache;\r\n        }\r\n    });\r\n    return writeTreeCalcCompleteEventCache(writeTree, path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n}\r\nfunction syncTreeGetServerValue(syncTree, query) {\r\n    const path = query._path;\r\n    let serverCache = null;\r\n    // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n    // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n    syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\r\n        const relativePath = newRelativePath(pathToSyncPoint, path);\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(sp, relativePath);\r\n    });\r\n    let syncPoint = syncTree.syncPointTree_.get(path);\r\n    if (!syncPoint) {\r\n        syncPoint = new SyncPoint();\r\n        syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\r\n    }\r\n    else {\r\n        serverCache =\r\n            serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    const serverCacheComplete = serverCache != null;\r\n    const serverCacheNode = serverCacheComplete\r\n        ? new CacheNode(serverCache, true, false)\r\n        : null;\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, query._path);\r\n    const view = syncPointGetView(syncPoint, query, writesCache, serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE, serverCacheComplete);\r\n    return viewGetCompleteNode(view);\r\n}\r\n/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */\r\nfunction syncTreeApplyOperationToSyncPoints_(syncTree, operation) {\r\n    return syncTreeApplyOperationHelper_(operation, syncTree.syncPointTree_, \r\n    /*serverCache=*/ null, writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath()));\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    if (pathIsEmpty(operation.path)) {\r\n        return syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n    }\r\n    else {\r\n        const syncPoint = syncPointTree.get(newEmptyPath());\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n        }\r\n        let events = [];\r\n        const childName = pathGetFront(operation.path);\r\n        const childOperation = operation.operationForChild(childName);\r\n        const childTree = syncPointTree.children.get(childName);\r\n        if (childTree && childOperation) {\r\n            const childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n            events = events.concat(syncTreeApplyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n        if (syncPoint) {\r\n            events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    }\r\n}\r\n/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */\r\nfunction syncTreeApplyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache) {\r\n    const syncPoint = syncPointTree.get(newEmptyPath());\r\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n    if (serverCache == null && syncPoint != null) {\r\n        serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\r\n    }\r\n    let events = [];\r\n    syncPointTree.children.inorderTraversal((childName, childTree) => {\r\n        const childServerCache = serverCache\r\n            ? serverCache.getImmediateChild(childName)\r\n            : null;\r\n        const childWritesCache = writeTreeRefChild(writesCache, childName);\r\n        const childOperation = operation.operationForChild(childName);\r\n        if (childOperation) {\r\n            events = events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n        }\r\n    });\r\n    if (syncPoint) {\r\n        events = events.concat(syncPointApplyOperation(syncPoint, operation, writesCache, serverCache));\r\n    }\r\n    return events;\r\n}\r\nfunction syncTreeCreateListenerForView_(syncTree, view) {\r\n    const query = view.query;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    return {\r\n        hashFn: () => {\r\n            const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\r\n            return cache.hash();\r\n        },\r\n        onComplete: (status) => {\r\n            if (status === 'ok') {\r\n                if (tag) {\r\n                    return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\r\n                }\r\n                else {\r\n                    return syncTreeApplyListenComplete(syncTree, query._path);\r\n                }\r\n            }\r\n            else {\r\n                // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                const error = errorForServerCode(status, query);\r\n                return syncTreeRemoveEventRegistration(syncTree, query, \r\n                /*eventRegistration*/ null, error);\r\n            }\r\n        }\r\n    };\r\n}\r\n/**\r\n * Return the tag associated with the given query.\r\n */\r\nfunction syncTreeTagForQuery(syncTree, query) {\r\n    const queryKey = syncTreeMakeQueryKey_(query);\r\n    return syncTree.queryToTagMap.get(queryKey);\r\n}\r\n/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */\r\nfunction syncTreeMakeQueryKey_(query) {\r\n    return query._path.toString() + '$' + query._queryIdentifier;\r\n}\r\n/**\r\n * Return the query associated with the given tag, if we have one\r\n */\r\nfunction syncTreeQueryKeyForTag_(syncTree, tag) {\r\n    return syncTree.tagToQueryMap.get(tag);\r\n}\r\n/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */\r\nfunction syncTreeParseQueryKey_(queryKey) {\r\n    const splitIndex = queryKey.indexOf('$');\r\n    assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n    return {\r\n        queryId: queryKey.substr(splitIndex + 1),\r\n        path: new Path(queryKey.substr(0, splitIndex))\r\n    };\r\n}\r\n/**\r\n * A helper method to apply tagged operations\r\n */\r\nfunction syncTreeApplyTaggedOperation_(syncTree, queryPath, operation) {\r\n    const syncPoint = syncTree.syncPointTree_.get(queryPath);\r\n    assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n    const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, queryPath);\r\n    return syncPointApplyOperation(syncPoint, operation, writesCache, null);\r\n}\r\n/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */\r\nfunction syncTreeCollectDistinctViewsForSubTree_(subtree) {\r\n    return subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n        if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n            const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\r\n            return [completeView];\r\n        }\r\n        else {\r\n            // No complete view here, flatten any deeper listens into an array\r\n            let views = [];\r\n            if (maybeChildSyncPoint) {\r\n                views = syncPointGetQueryViews(maybeChildSyncPoint);\r\n            }\r\n            each(childMap, (_key, childViews) => {\r\n                views = views.concat(childViews);\r\n            });\r\n            return views;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */\r\nfunction syncTreeQueryForListening_(query) {\r\n    if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\r\n        // We treat queries that load all data as default queries\r\n        // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n        // from Query\r\n        return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\r\n    }\r\n    else {\r\n        return query;\r\n    }\r\n}\r\nfunction syncTreeRemoveTags_(syncTree, queries) {\r\n    for (let j = 0; j < queries.length; ++j) {\r\n        const removedQuery = queries[j];\r\n        if (!removedQuery._queryParams.loadsAllData()) {\r\n            // We should have a tag for this\r\n            const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\r\n            const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\r\n            syncTree.queryToTagMap.delete(removedQueryKey);\r\n            syncTree.tagToQueryMap.delete(removedQueryTag);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Static accessor for query tags.\r\n */\r\nfunction syncTreeGetNextQueryTag_() {\r\n    return syncTreeNextQueryTag_++;\r\n}\r\n/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */\r\nfunction syncTreeSetupListener_(syncTree, query, view) {\r\n    const path = query._path;\r\n    const tag = syncTreeTagForQuery(syncTree, query);\r\n    const listener = syncTreeCreateListenerForView_(syncTree, view);\r\n    const events = syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n    const subtree = syncTree.syncPointTree_.subtree(path);\r\n    // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n    // may need to shadow other listens as well.\r\n    if (tag) {\r\n        assert(!syncPointHasCompleteView(subtree.value), \"If we're adding a query, it shouldn't be shadowed\");\r\n    }\r\n    else {\r\n        // Shadow everything at or below this location, this is a default listener.\r\n        const queriesToStop = subtree.fold((relativePath, maybeChildSyncPoint, childMap) => {\r\n            if (!pathIsEmpty(relativePath) &&\r\n                maybeChildSyncPoint &&\r\n                syncPointHasCompleteView(maybeChildSyncPoint)) {\r\n                return [syncPointGetCompleteView(maybeChildSyncPoint).query];\r\n            }\r\n            else {\r\n                // No default listener here, flatten any deeper queries into an array\r\n                let queries = [];\r\n                if (maybeChildSyncPoint) {\r\n                    queries = queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(view => view.query));\r\n                }\r\n                each(childMap, (_key, childQueries) => {\r\n                    queries = queries.concat(childQueries);\r\n                });\r\n                return queries;\r\n            }\r\n        });\r\n        for (let i = 0; i < queriesToStop.length; ++i) {\r\n            const queryToStop = queriesToStop[i];\r\n            syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop), syncTreeTagForQuery(syncTree, queryToStop));\r\n        }\r\n    }\r\n    return events;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass ExistingValueProvider {\r\n    constructor(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    }\r\n    node() {\r\n        return this.node_;\r\n    }\r\n}\r\nclass DeferredValueProvider {\r\n    constructor(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    getImmediateChild(childName) {\r\n        const childPath = pathChild(this.path_, childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    }\r\n    node() {\r\n        return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\r\n    }\r\n}\r\n/**\r\n * Generate placeholders for deferred values.\r\n */\r\nconst generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */\r\nconst resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nconst resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nconst resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    const delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    const existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    const leaf = existingNode;\r\n    const existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */\r\nconst resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */\r\nconst resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    const rawPri = node.getPriority().val();\r\n    const priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    let newNode;\r\n    if (node.isLeafNode()) {\r\n        const leafNode = node;\r\n        const value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        const childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\r\n            const newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nclass Tree {\r\n    /**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */\r\n    constructor(name = '', parent = null, node = { children: {}, childCount: 0 }) {\r\n        this.name = name;\r\n        this.parent = parent;\r\n        this.node = node;\r\n    }\r\n}\r\n/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */\r\nfunction treeSubTree(tree, pathObj) {\r\n    // TODO: Require pathObj to be Path?\r\n    let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n    let child = tree, next = pathGetFront(path);\r\n    while (next !== null) {\r\n        const childNode = safeGet(child.node.children, next) || {\r\n            children: {},\r\n            childCount: 0\r\n        };\r\n        child = new Tree(next, child, childNode);\r\n        path = pathPopFront(path);\r\n        next = pathGetFront(path);\r\n    }\r\n    return child;\r\n}\r\n/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */\r\nfunction treeGetValue(tree) {\r\n    return tree.node.value;\r\n}\r\n/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */\r\nfunction treeSetValue(tree, value) {\r\n    tree.node.value = value;\r\n    treeUpdateParents(tree);\r\n}\r\n/**\r\n * @returns Whether the tree has any children.\r\n */\r\nfunction treeHasChildren(tree) {\r\n    return tree.node.childCount > 0;\r\n}\r\n/**\r\n * @returns Whether the tree is empty (no value or children).\r\n */\r\nfunction treeIsEmpty(tree) {\r\n    return treeGetValue(tree) === undefined && !treeHasChildren(tree);\r\n}\r\n/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */\r\nfunction treeForEachChild(tree, action) {\r\n    each(tree.node.children, (child, childTree) => {\r\n        action(new Tree(child, tree, childTree));\r\n    });\r\n}\r\n/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */\r\nfunction treeForEachDescendant(tree, action, includeSelf, childrenFirst) {\r\n    if (includeSelf && !childrenFirst) {\r\n        action(tree);\r\n    }\r\n    treeForEachChild(tree, child => {\r\n        treeForEachDescendant(child, action, true, childrenFirst);\r\n    });\r\n    if (includeSelf && childrenFirst) {\r\n        action(tree);\r\n    }\r\n}\r\n/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */\r\nfunction treeForEachAncestor(tree, action, includeSelf) {\r\n    let node = includeSelf ? tree : tree.parent;\r\n    while (node !== null) {\r\n        if (action(node)) {\r\n            return true;\r\n        }\r\n        node = node.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns The path of this tree node, as a Path.\r\n */\r\nfunction treeGetPath(tree) {\r\n    return new Path(tree.parent === null\r\n        ? tree.name\r\n        : treeGetPath(tree.parent) + '/' + tree.name);\r\n}\r\n/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */\r\nfunction treeUpdateParents(tree) {\r\n    if (tree.parent !== null) {\r\n        treeUpdateChild(tree.parent, tree.name, tree);\r\n    }\r\n}\r\n/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */\r\nfunction treeUpdateChild(tree, childName, child) {\r\n    const childEmpty = treeIsEmpty(child);\r\n    const childExists = contains(tree.node.children, childName);\r\n    if (childEmpty && childExists) {\r\n        delete tree.node.children[childName];\r\n        tree.node.childCount--;\r\n        treeUpdateParents(tree);\r\n    }\r\n    else if (!childEmpty && !childExists) {\r\n        tree.node.children[childName] = child.node;\r\n        tree.node.childCount++;\r\n        treeUpdateParents(tree);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n */\r\nconst INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */\r\nconst INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n */\r\nconst MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\nconst isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\nconst isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\nconst isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\nconst isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */\r\nconst validateFirebaseDataArg = function (fnName, value, path, optional) {\r\n    if (optional && value === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, 'value'), value, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n */\r\nconst validateFirebaseData = function (errorPrefix, data, path_) {\r\n    const path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + validationPathToErrorString(path));\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            validationPathToErrorString(path) +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix +\r\n            'contains ' +\r\n            data.toString() +\r\n            ' ' +\r\n            validationPathToErrorString(path));\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            validationPathToErrorString(path) +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        let hasDotValue = false;\r\n        let hasActualChild = false;\r\n        each(data, (key, value) => {\r\n            if (key === '.value') {\r\n                hasDotValue = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        validationPathToErrorString(path) +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            validationPathPush(path, key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            validationPathPop(path);\r\n        });\r\n        if (hasDotValue && hasActualChild) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                validationPathToErrorString(path) +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n */\r\nconst validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    let i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        const keys = pathSlice(curPath);\r\n        for (let j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(pathCompare);\r\n    let prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && pathContains(prevPath, curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */\r\nconst validateFirebaseMergeDataArg = function (fnName, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    const errorPrefix$1 = errorPrefix(fnName, 'values');\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    const mergePaths = [];\r\n    each(data, (key, value) => {\r\n        const curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, pathChild(path, curPath));\r\n        if (pathGetBack(curPath) === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nconst validatePriority = function (fnName, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, 'priority') +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nconst validateKey = function (fnName, argumentName, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validatePathString = function (fnName, argumentName, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentName) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nconst validateRootPathString = function (fnName, argumentName, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentName, pathString, optional);\r\n};\r\n/**\r\n * @internal\r\n */\r\nconst validateWritablePath = function (fnName, path) {\r\n    if (pathGetFront(path) === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nconst validateUrl = function (fnName, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    const pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, 'url') +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */\r\nclass EventQueue {\r\n    constructor() {\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n}\r\n/**\r\n * @param eventDataList - The new events to queue.\r\n */\r\nfunction eventQueueQueueEvents(eventQueue, eventDataList) {\r\n    // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n    let currList = null;\r\n    for (let i = 0; i < eventDataList.length; i++) {\r\n        const data = eventDataList[i];\r\n        const path = data.getPath();\r\n        if (currList !== null && !pathEquals(path, currList.path)) {\r\n            eventQueue.eventLists_.push(currList);\r\n            currList = null;\r\n        }\r\n        if (currList === null) {\r\n            currList = { events: [], path };\r\n        }\r\n        currList.events.push(data);\r\n    }\r\n    if (currList) {\r\n        eventQueue.eventLists_.push(currList);\r\n    }\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */\r\nfunction eventQueueRaiseEventsAtPath(eventQueue, path, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathEquals(eventPath, path));\r\n}\r\n/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */\r\nfunction eventQueueRaiseEventsForChangedPath(eventQueue, changedPath, eventDataList) {\r\n    eventQueueQueueEvents(eventQueue, eventDataList);\r\n    eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath => pathContains(eventPath, changedPath) ||\r\n        pathContains(changedPath, eventPath));\r\n}\r\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, predicate) {\r\n    eventQueue.recursionDepth_++;\r\n    let sentAll = true;\r\n    for (let i = 0; i < eventQueue.eventLists_.length; i++) {\r\n        const eventList = eventQueue.eventLists_[i];\r\n        if (eventList) {\r\n            const eventPath = eventList.path;\r\n            if (predicate(eventPath)) {\r\n                eventListRaise(eventQueue.eventLists_[i]);\r\n                eventQueue.eventLists_[i] = null;\r\n            }\r\n            else {\r\n                sentAll = false;\r\n            }\r\n        }\r\n    }\r\n    if (sentAll) {\r\n        eventQueue.eventLists_ = [];\r\n    }\r\n    eventQueue.recursionDepth_--;\r\n}\r\n/**\r\n * Iterates through the list and raises each event\r\n */\r\nfunction eventListRaise(eventList) {\r\n    for (let i = 0; i < eventList.events.length; i++) {\r\n        const eventData = eventList.events[i];\r\n        if (eventData !== null) {\r\n            eventList.events[i] = null;\r\n            const eventFn = eventData.getEventRunner();\r\n            if (logger) {\r\n                log('event: ' + eventData.toString());\r\n            }\r\n            exceptionGuard(eventFn);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */\r\nconst MAX_TRANSACTION_RETRIES = 25;\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nclass Repo {\r\n    constructor(repoInfo_, forceRestClient_, authTokenProvider_, appCheckProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.appCheckProvider_ = appCheckProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = newSparseSnapshotTree();\r\n        /** Stores queues of outstanding transactions for Firebase locations. */\r\n        this.transactionQueueTree_ = new Tree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    /**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */\r\n    toString() {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    }\r\n}\r\nfunction repoStart(repo, appId, authOverride) {\r\n    repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\r\n    if (repo.forceRestClient_ || beingCrawled()) {\r\n        repo.server_ = new ReadonlyRestClient(repo.repoInfo_, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_);\r\n        // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n        setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\r\n    }\r\n    else {\r\n        // Validate authOverride\r\n        if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n            if (typeof authOverride !== 'object') {\r\n                throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n            }\r\n            try {\r\n                stringify(authOverride);\r\n            }\r\n            catch (e) {\r\n                throw new Error('Invalid authOverride provided: ' + e);\r\n            }\r\n        }\r\n        repo.persistentConnection_ = new PersistentConnection(repo.repoInfo_, appId, (pathString, data, isMerge, tag) => {\r\n            repoOnDataUpdate(repo, pathString, data, isMerge, tag);\r\n        }, (connectStatus) => {\r\n            repoOnConnectStatus(repo, connectStatus);\r\n        }, (updates) => {\r\n            repoOnServerInfoUpdate(repo, updates);\r\n        }, repo.authTokenProvider_, repo.appCheckProvider_, authOverride);\r\n        repo.server_ = repo.persistentConnection_;\r\n    }\r\n    repo.authTokenProvider_.addTokenChangeListener(token => {\r\n        repo.server_.refreshAuthToken(token);\r\n    });\r\n    repo.appCheckProvider_.addTokenChangeListener(result => {\r\n        repo.server_.refreshAppCheckToken(result.token);\r\n    });\r\n    // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n    // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n    repo.statsReporter_ = statsManagerGetOrCreateReporter(repo.repoInfo_, () => new StatsReporter(repo.stats_, repo.server_));\r\n    // Used for .info.\r\n    repo.infoData_ = new SnapshotHolder();\r\n    repo.infoSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            let infoEvents = [];\r\n            const node = repo.infoData_.getNode(query._path);\r\n            // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n            // on initial data...\r\n            if (!node.isEmpty()) {\r\n                infoEvents = syncTreeApplyServerOverwrite(repo.infoSyncTree_, query._path, node);\r\n                setTimeout(() => {\r\n                    onComplete('ok');\r\n                }, 0);\r\n            }\r\n            return infoEvents;\r\n        },\r\n        stopListening: () => { }\r\n    });\r\n    repoUpdateInfo(repo, 'connected', false);\r\n    repo.serverSyncTree_ = new SyncTree({\r\n        startListening: (query, tag, currentHashFn, onComplete) => {\r\n            repo.server_.listen(query, currentHashFn, tag, (status, data) => {\r\n                const events = onComplete(status, data);\r\n                eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n            });\r\n            // No synchronous events for network-backed sync trees\r\n            return [];\r\n        },\r\n        stopListening: (query, tag) => {\r\n            repo.server_.unlisten(query, tag);\r\n        }\r\n    });\r\n}\r\n/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */\r\nfunction repoServerTime(repo) {\r\n    const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n    const offset = offsetNode.val() || 0;\r\n    return new Date().getTime() + offset;\r\n}\r\n/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */\r\nfunction repoGenerateServerValues(repo) {\r\n    return generateWithValues({\r\n        timestamp: repoServerTime(repo)\r\n    });\r\n}\r\n/**\r\n * Called by realtime when we get new messages from the server.\r\n */\r\nfunction repoOnDataUpdate(repo, pathString, data, isMerge, tag) {\r\n    // For testing.\r\n    repo.dataUpdateCount++;\r\n    const path = new Path(pathString);\r\n    data = repo.interceptServerDataCallback_\r\n        ? repo.interceptServerDataCallback_(pathString, data)\r\n        : data;\r\n    let events = [];\r\n    if (tag) {\r\n        if (isMerge) {\r\n            const taggedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n            events = syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_, path, taggedChildren, tag);\r\n        }\r\n        else {\r\n            const taggedSnap = nodeFromJSON(data);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, path, taggedSnap, tag);\r\n        }\r\n    }\r\n    else if (isMerge) {\r\n        const changedChildren = map(data, (raw) => nodeFromJSON(raw));\r\n        events = syncTreeApplyServerMerge(repo.serverSyncTree_, path, changedChildren);\r\n    }\r\n    else {\r\n        const snap = nodeFromJSON(data);\r\n        events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\r\n    }\r\n    let affectedPath = path;\r\n    if (events.length > 0) {\r\n        // Since we have a listener outstanding for each transaction, receiving any events\r\n        // is a proxy for some change having occurred.\r\n        affectedPath = repoRerunTransactions(repo, path);\r\n    }\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\r\n}\r\nfunction repoOnConnectStatus(repo, connectStatus) {\r\n    repoUpdateInfo(repo, 'connected', connectStatus);\r\n    if (connectStatus === false) {\r\n        repoRunOnDisconnectEvents(repo);\r\n    }\r\n}\r\nfunction repoOnServerInfoUpdate(repo, updates) {\r\n    each(updates, (key, value) => {\r\n        repoUpdateInfo(repo, key, value);\r\n    });\r\n}\r\nfunction repoUpdateInfo(repo, pathString, value) {\r\n    const path = new Path('/.info/' + pathString);\r\n    const newNode = nodeFromJSON(value);\r\n    repo.infoData_.updateSnapshot(path, newNode);\r\n    const events = syncTreeApplyServerOverwrite(repo.infoSyncTree_, path, newNode);\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n}\r\nfunction repoGetNextWriteId(repo) {\r\n    return repo.nextWriteId_++;\r\n}\r\n/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will wait until the\r\n *  repo has established a connection and then request the value for `query`.\r\n * If the client is not able to retrieve the query result for another reason,\r\n * it reports an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */\r\nfunction repoGetValue(repo, query, eventRegistration) {\r\n    // Only active queries are cached. There is no persisted cache.\r\n    const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\r\n    if (cached != null) {\r\n        return Promise.resolve(cached);\r\n    }\r\n    return repo.server_.get(query).then(payload => {\r\n        const node = nodeFromJSON(payload).withIndex(query._queryParams.getIndex());\r\n        /**\r\n         * Below we simulate the actions of an `onlyOnce` `onValue()` event where:\r\n         * Add an event registration,\r\n         * Update data at the path,\r\n         * Raise any events,\r\n         * Cleanup the SyncTree\r\n         */\r\n        syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration, true);\r\n        let events;\r\n        if (query._queryParams.loadsAllData()) {\r\n            events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, query._path, node);\r\n        }\r\n        else {\r\n            const tag = syncTreeTagForQuery(repo.serverSyncTree_, query);\r\n            events = syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_, query._path, node, tag);\r\n        }\r\n        /*\r\n         * We need to raise events in the scenario where `get()` is called at a parent path, and\r\n         * while the `get()` is pending, `onValue` is called at a child location. While get() is waiting\r\n         * for the data, `onValue` will register a new event. Then, get() will come back, and update the syncTree\r\n         * and its corresponding serverCache, including the child location where `onValue` is called. Then,\r\n         * `onValue` will receive the event from the server, but look at the syncTree and see that the data received\r\n         * from the server is already at the SyncPoint, and so the `onValue` callback will never get fired.\r\n         * Calling `eventQueueRaiseEventsForChangedPath()` is the correct way to propagate the events and\r\n         * ensure the corresponding child events will get fired.\r\n         */\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, query._path, events);\r\n        syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration, null, true);\r\n        return node;\r\n    }, err => {\r\n        repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\r\n        return Promise.reject(new Error(err));\r\n    });\r\n}\r\nfunction repoSetWithPriority(repo, path, newVal, newPriority, onComplete) {\r\n    repoLog(repo, 'set', {\r\n        path: path.toString(),\r\n        value: newVal,\r\n        priority: newPriority\r\n    });\r\n    // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n    // (b) store unresolved paths on JSON parse\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\r\n    const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\r\n    const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n    const writeId = repoGetNextWriteId(repo);\r\n    const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, writeId, true);\r\n    eventQueueQueueEvents(repo.eventQueue_, events);\r\n    repo.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), (status, errorReason) => {\r\n        const success = status === 'ok';\r\n        if (!success) {\r\n            warn('set at ' + path + ' failed: ' + status);\r\n        }\r\n        const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n    const affectedPath = repoAbortTransactions(repo, path);\r\n    repoRerunTransactions(repo, affectedPath);\r\n    // We queued the events above, so just flush the queue here\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\r\n}\r\nfunction repoUpdate(repo, path, childrenToMerge, onComplete) {\r\n    repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\r\n    // Start with our existing data and merge each child into it.\r\n    let empty = true;\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const changedChildren = {};\r\n    each(childrenToMerge, (changedKey, changedValue) => {\r\n        empty = false;\r\n        changedChildren[changedKey] = resolveDeferredValueTree(pathChild(path, changedKey), nodeFromJSON(changedValue), repo.serverSyncTree_, serverValues);\r\n    });\r\n    if (!empty) {\r\n        const writeId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserMerge(repo.serverSyncTree_, path, changedChildren, writeId);\r\n        eventQueueQueueEvents(repo.eventQueue_, events);\r\n        repo.server_.merge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n            const success = status === 'ok';\r\n            if (!success) {\r\n                warn('update at ' + path + ' failed: ' + status);\r\n            }\r\n            const clearEvents = syncTreeAckUserWrite(repo.serverSyncTree_, writeId, !success);\r\n            const affectedPath = clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, clearEvents);\r\n            repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n        });\r\n        each(childrenToMerge, (changedPath) => {\r\n            const affectedPath = repoAbortTransactions(repo, pathChild(path, changedPath));\r\n            repoRerunTransactions(repo, affectedPath);\r\n        });\r\n        // We queued the events above, so just flush the queue here\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\r\n    }\r\n    else {\r\n        log(\"update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n    }\r\n}\r\n/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */\r\nfunction repoRunOnDisconnectEvents(repo) {\r\n    repoLog(repo, 'onDisconnectEvents');\r\n    const serverValues = repoGenerateServerValues(repo);\r\n    const resolvedOnDisconnectTree = newSparseSnapshotTree();\r\n    sparseSnapshotTreeForEachTree(repo.onDisconnect_, newEmptyPath(), (path, node) => {\r\n        const resolved = resolveDeferredValueTree(path, node, repo.serverSyncTree_, serverValues);\r\n        sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\r\n    });\r\n    let events = [];\r\n    sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree, newEmptyPath(), (path, snap) => {\r\n        events = events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap));\r\n        const affectedPath = repoAbortTransactions(repo, path);\r\n        repoRerunTransactions(repo, affectedPath);\r\n    });\r\n    repo.onDisconnect_ = newSparseSnapshotTree();\r\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\r\n}\r\nfunction repoOnDisconnectCancel(repo, path, onComplete) {\r\n    repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeForget(repo.onDisconnect_, path);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSet(repo, path, value, onComplete) {\r\n    const newNode = nodeFromJSON(value);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectSetWithPriority(repo, path, value, priority, onComplete) {\r\n    const newNode = nodeFromJSON(value, priority);\r\n    repo.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoOnDisconnectUpdate(repo, path, childrenToMerge, onComplete) {\r\n    if (isEmpty(childrenToMerge)) {\r\n        log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n        repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\r\n        return;\r\n    }\r\n    repo.server_.onDisconnectMerge(path.toString(), childrenToMerge, (status, errorReason) => {\r\n        if (status === 'ok') {\r\n            each(childrenToMerge, (childName, childNode) => {\r\n                const newChildNode = nodeFromJSON(childNode);\r\n                sparseSnapshotTreeRemember(repo.onDisconnect_, pathChild(path, childName), newChildNode);\r\n            });\r\n        }\r\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\r\n    });\r\n}\r\nfunction repoAddEventCallbackForQuery(repo, query, eventRegistration) {\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeAddEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeAddEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoRemoveEventCallbackForQuery(repo, query, eventRegistration) {\r\n    // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n    // a little bit by handling the return values anyways.\r\n    let events;\r\n    if (pathGetFront(query._path) === '.info') {\r\n        events = syncTreeRemoveEventRegistration(repo.infoSyncTree_, query, eventRegistration);\r\n    }\r\n    else {\r\n        events = syncTreeRemoveEventRegistration(repo.serverSyncTree_, query, eventRegistration);\r\n    }\r\n    eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\r\n}\r\nfunction repoInterrupt(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoResume(repo) {\r\n    if (repo.persistentConnection_) {\r\n        repo.persistentConnection_.resume(INTERRUPT_REASON);\r\n    }\r\n}\r\nfunction repoLog(repo, ...varArgs) {\r\n    let prefix = '';\r\n    if (repo.persistentConnection_) {\r\n        prefix = repo.persistentConnection_.id + ':';\r\n    }\r\n    log(prefix, ...varArgs);\r\n}\r\nfunction repoCallOnCompleteCallback(repo, callback, status, errorReason) {\r\n    if (callback) {\r\n        exceptionGuard(() => {\r\n            if (status === 'ok') {\r\n                callback(null);\r\n            }\r\n            else {\r\n                const code = (status || 'error').toUpperCase();\r\n                let message = code;\r\n                if (errorReason) {\r\n                    message += ': ' + errorReason;\r\n                }\r\n                const error = new Error(message);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                error.code = code;\r\n                callback(error);\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */\r\nfunction repoStartTransaction(repo, path, transactionUpdate, onComplete, unwatcher, applyLocally) {\r\n    repoLog(repo, 'transaction on ' + path);\r\n    // Initialize transaction.\r\n    const transaction = {\r\n        path,\r\n        update: transactionUpdate,\r\n        onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out\r\n        // which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    const currentState = repoGetLatestState(repo, path, undefined);\r\n    transaction.currentInputSnapshot = currentState;\r\n    const newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            transaction.onComplete(null, false, transaction.currentInputSnapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = 0 /* TransactionStatus.RUN */;\r\n        const queueNode = treeSubTree(repo.transactionQueueTree_, path);\r\n        const nodeQueue = treeGetValue(queueNode) || [];\r\n        nodeQueue.push(transaction);\r\n        treeSetValue(queueNode, nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our\r\n        // transaction state, since the user could start new transactions from the\r\n        // event callbacks.\r\n        let priorityForNode;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            const currentNode = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        const serverValues = repoGenerateServerValues(repo);\r\n        const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\r\n        const newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = repoGetNextWriteId(repo);\r\n        const events = syncTreeApplyUserOverwrite(repo.serverSyncTree_, path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n    }\r\n}\r\n/**\r\n * @param excludeSets - A specific set to exclude\r\n */\r\nfunction repoGetLatestState(repo, path, excludeSets) {\r\n    return (syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n}\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */\r\nfunction repoSendReadyTransactions(repo, node = repo.transactionQueueTree_) {\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        repoPruneCompletedTransactionsBelowNode(repo, node);\r\n    }\r\n    if (treeGetValue(node)) {\r\n        const queue = repoBuildTransactionQueue(repo, node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        const allRun = queue.every((transaction) => transaction.status === 0 /* TransactionStatus.RUN */);\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            repoSendTransactionQueue(repo, treeGetPath(node), queue);\r\n        }\r\n    }\r\n    else if (treeHasChildren(node)) {\r\n        treeForEachChild(node, childNode => {\r\n            repoSendReadyTransactions(repo, childNode);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */\r\nfunction repoSendTransactionQueue(repo, path, queue) {\r\n    // Mark transactions as sent and increment retry count!\r\n    const setsToIgnore = queue.map(txn => {\r\n        return txn.currentWriteId;\r\n    });\r\n    const latestState = repoGetLatestState(repo, path, setsToIgnore);\r\n    let snapToSend = latestState;\r\n    const latestHash = latestState.hash();\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const txn = queue[i];\r\n        assert(txn.status === 0 /* TransactionStatus.RUN */, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = 1 /* TransactionStatus.SENT */;\r\n        txn.retryCount++;\r\n        const relativePath = newRelativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    const dataToSend = snapToSend.val(true);\r\n    const pathToSend = path;\r\n    // Send the put.\r\n    repo.server_.put(pathToSend.toString(), dataToSend, (status) => {\r\n        repoLog(repo, 'transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status\r\n        });\r\n        let events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our\r\n            // transaction state, since the callback could trigger more\r\n            // transactions or sets.\r\n            const callbacks = [];\r\n            for (let i = 0; i < queue.length; i++) {\r\n                queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this\r\n                    // transaction is complete, it should be set\r\n                    callbacks.push(() => queue[i].onComplete(null, true, queue[i].currentOutputSnapshotResolved));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            repoPruneCompletedTransactionsBelowNode(repo, treeSubTree(repo.transactionQueueTree_, path));\r\n            // There may be pending transactions that we can now send.\r\n            repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n            eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (let i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) {\r\n                        queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    }\r\n                    else {\r\n                        queue[i].status = 0 /* TransactionStatus.RUN */;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (let i = 0; i < queue.length; i++) {\r\n                    queue[i].status = 4 /* TransactionStatus.NEEDS_ABORT */;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            repoRerunTransactions(repo, path);\r\n        }\r\n    }, latestHash);\r\n}\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */\r\nfunction repoRerunTransactions(repo, changedPath) {\r\n    const rootMostTransactionNode = repoGetAncestorTransactionNode(repo, changedPath);\r\n    const path = treeGetPath(rootMostTransactionNode);\r\n    const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\r\n    repoRerunTransactionQueue(repo, queue, path);\r\n    return path;\r\n}\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */\r\nfunction repoRerunTransactionQueue(repo, queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our\r\n    // transaction state, since the callback could trigger more transactions or\r\n    // sets.\r\n    const callbacks = [];\r\n    let events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    const txnsToRerun = queue.filter(q => {\r\n        return q.status === 0 /* TransactionStatus.RUN */;\r\n    });\r\n    const setsToIgnore = txnsToRerun.map(q => {\r\n        return q.currentWriteId;\r\n    });\r\n    for (let i = 0; i < queue.length; i++) {\r\n        const transaction = queue[i];\r\n        const relativePath = newRelativePath(path, transaction.path);\r\n        let abortTransaction = false, abortReason;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === 4 /* TransactionStatus.NEEDS_ABORT */) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === 0 /* TransactionStatus.RUN */) {\r\n            if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                const currentNode = repoGetLatestState(repo, transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                const newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    let newDataNode = nodeFromJSON(newData);\r\n                    const hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    const oldWriteId = transaction.currentWriteId;\r\n                    const serverValues = repoGenerateServerValues(repo);\r\n                    const newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = repoGetNextWriteId(repo);\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_, transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = 2 /* TransactionStatus.COMPLETED */;\r\n            // Removing a listener can trigger pruning which can muck with\r\n            // mergedData/visibleData (as it prunes data). So defer the unwatcher\r\n            // until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    callbacks.push(() => queue[i].onComplete(null, false, queue[i].currentInputSnapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(() => queue[i].onComplete(new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (let i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\r\n}\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */\r\nfunction repoGetAncestorTransactionNode(repo, path) {\r\n    let front;\r\n    // Start at the root and walk deeper into the tree towards path until we\r\n    // find a node with pending transactions.\r\n    let transactionNode = repo.transactionQueueTree_;\r\n    front = pathGetFront(path);\r\n    while (front !== null && treeGetValue(transactionNode) === undefined) {\r\n        transactionNode = treeSubTree(transactionNode, front);\r\n        path = pathPopFront(path);\r\n        front = pathGetFront(path);\r\n    }\r\n    return transactionNode;\r\n}\r\n/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */\r\nfunction repoBuildTransactionQueue(repo, transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    const transactionQueue = [];\r\n    repoAggregateTransactionQueuesForNode(repo, transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort((a, b) => a.order - b.order);\r\n    return transactionQueue;\r\n}\r\nfunction repoAggregateTransactionQueuesForNode(repo, node, queue) {\r\n    const nodeQueue = treeGetValue(node);\r\n    if (nodeQueue) {\r\n        for (let i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    treeForEachChild(node, child => {\r\n        repoAggregateTransactionQueuesForNode(repo, child, queue);\r\n    });\r\n}\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */\r\nfunction repoPruneCompletedTransactionsBelowNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        let to = 0;\r\n        for (let from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== 2 /* TransactionStatus.COMPLETED */) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        treeSetValue(node, queue.length > 0 ? queue : undefined);\r\n    }\r\n    treeForEachChild(node, childNode => {\r\n        repoPruneCompletedTransactionsBelowNode(repo, childNode);\r\n    });\r\n}\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */\r\nfunction repoAbortTransactions(repo, path) {\r\n    const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\r\n    const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\r\n    treeForEachAncestor(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    repoAbortTransactionsOnNode(repo, transactionNode);\r\n    treeForEachDescendant(transactionNode, (node) => {\r\n        repoAbortTransactionsOnNode(repo, node);\r\n    });\r\n    return affectedPath;\r\n}\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */\r\nfunction repoAbortTransactionsOnNode(repo, node) {\r\n    const queue = treeGetValue(node);\r\n    if (queue) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our\r\n        // transaction state, since the callback could trigger more transactions\r\n        // or sets.\r\n        const callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for\r\n        // abort, while the unsent ones can be immediately aborted and removed.\r\n        let events = [];\r\n        let lastSent = -1;\r\n        for (let i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === 3 /* TransactionStatus.SENT_NEEDS_ABORT */) ;\r\n            else if (queue[i].status === 1 /* TransactionStatus.SENT */) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = 3 /* TransactionStatus.SENT_NEEDS_ABORT */;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === 0 /* TransactionStatus.RUN */, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, null));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            treeSetValue(node, undefined);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, treeGetPath(node), events);\r\n        for (let i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction decodePath(pathString) {\r\n    let pathStringDecoded = '';\r\n    const pieces = pathString.split('/');\r\n    for (let i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            let piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @returns key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    const results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    for (const segment of queryString.split('&')) {\r\n        if (segment.length === 0) {\r\n            continue;\r\n        }\r\n        const kv = segment.split('=');\r\n        if (kv.length === 2) {\r\n            results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n        }\r\n        else {\r\n            warn(`Invalid query segment '${segment}' in query '${queryString}'`);\r\n        }\r\n    }\r\n    return results;\r\n}\r\nconst parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    const parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, nodeAdmin, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\nconst parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    let host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    let secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        let colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        let slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        let questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        const queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        const hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            const dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host,\r\n        port,\r\n        domain,\r\n        subdomain,\r\n        secure,\r\n        scheme,\r\n        pathString,\r\n        namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Modeled after base64 web-safe chars, but ordered by ASCII.\r\nconst PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nconst nextPushId = (function () {\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    let lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    const lastRandChars = [];\r\n    return function (now) {\r\n        const duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        let i;\r\n        const timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        let id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n */\r\nclass DataEvent {\r\n    /**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */\r\n    constructor(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    getPath() {\r\n        const ref = this.snapshot.ref;\r\n        if (this.eventType === 'value') {\r\n            return ref._path;\r\n        }\r\n        else {\r\n            return ref.parent._path;\r\n        }\r\n    }\r\n    getEventType() {\r\n        return this.eventType;\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    }\r\n}\r\nclass CancelEvent {\r\n    constructor(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    getPath() {\r\n        return this.path;\r\n    }\r\n    getEventType() {\r\n        return 'cancel';\r\n    }\r\n    getEventRunner() {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    }\r\n    toString() {\r\n        return this.path.toString() + ':cancel';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */\r\nclass CallbackContext {\r\n    constructor(snapshotCallback, cancelCallback) {\r\n        this.snapshotCallback = snapshotCallback;\r\n        this.cancelCallback = cancelCallback;\r\n    }\r\n    onValue(expDataSnapshot, previousChildName) {\r\n        this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\r\n    }\r\n    onCancel(error) {\r\n        assert(this.hasCancelCallback, 'Raising a cancel event on a listener with no cancel callback');\r\n        return this.cancelCallback.call(null, error);\r\n    }\r\n    get hasCancelCallback() {\r\n        return !!this.cancelCallback;\r\n    }\r\n    matches(other) {\r\n        return (this.snapshotCallback === other.snapshotCallback ||\r\n            (this.snapshotCallback.userCallback !== undefined &&\r\n                this.snapshotCallback.userCallback ===\r\n                    other.snapshotCallback.userCallback &&\r\n                this.snapshotCallback.context === other.snapshotCallback.context));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */\r\nclass OnDisconnect {\r\n    /** @hideconstructor */\r\n    constructor(_repo, _path) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n    }\r\n    /**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    cancel() {\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectCancel(this._repo, this._path, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */\r\n    remove() {\r\n        validateWritablePath('OnDisconnect.remove', this._path);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, null, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    set(value) {\r\n        validateWritablePath('OnDisconnect.set', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSet(this._repo, this._path, value, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    setWithPriority(value, priority) {\r\n        validateWritablePath('OnDisconnect.setWithPriority', this._path);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', value, this._path, false);\r\n        validatePriority('OnDisconnect.setWithPriority', priority, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectSetWithPriority(this._repo, this._path, value, priority, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n    /**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */\r\n    update(values) {\r\n        validateWritablePath('OnDisconnect.update', this._path);\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', values, this._path, false);\r\n        const deferred = new Deferred();\r\n        repoOnDisconnectUpdate(this._repo, this._path, values, deferred.wrapCallback(() => { }));\r\n        return deferred.promise;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nclass QueryImpl {\r\n    /**\r\n     * @hideconstructor\r\n     */\r\n    constructor(_repo, _path, _queryParams, _orderByCalled) {\r\n        this._repo = _repo;\r\n        this._path = _path;\r\n        this._queryParams = _queryParams;\r\n        this._orderByCalled = _orderByCalled;\r\n    }\r\n    get key() {\r\n        if (pathIsEmpty(this._path)) {\r\n            return null;\r\n        }\r\n        else {\r\n            return pathGetBack(this._path);\r\n        }\r\n    }\r\n    get ref() {\r\n        return new ReferenceImpl(this._repo, this._path);\r\n    }\r\n    get _queryIdentifier() {\r\n        const obj = queryParamsGetQueryObject(this._queryParams);\r\n        const id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    }\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     */\r\n    get _queryObject() {\r\n        return queryParamsGetQueryObject(this._queryParams);\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof QueryImpl)) {\r\n            return false;\r\n        }\r\n        const sameRepo = this._repo === other._repo;\r\n        const samePath = pathEquals(this._path, other._path);\r\n        const sameQueryIdentifier = this._queryIdentifier === other._queryIdentifier;\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    }\r\n    toJSON() {\r\n        return this.toString();\r\n    }\r\n    toString() {\r\n        return this._repo.toString() + pathToUrlEncodedString(this._path);\r\n    }\r\n}\r\n/**\r\n * Validates that no other order by call has been made\r\n */\r\nfunction validateNoPreviousOrderByCall(query, fnName) {\r\n    if (query._orderByCalled === true) {\r\n        throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n    }\r\n}\r\n/**\r\n * Validates start/end values for queries.\r\n */\r\nfunction validateQueryEndpoints(params) {\r\n    let startNode = null;\r\n    let endNode = null;\r\n    if (params.hasStart()) {\r\n        startNode = params.getIndexStartValue();\r\n    }\r\n    if (params.hasEnd()) {\r\n        endNode = params.getIndexEndValue();\r\n    }\r\n    if (params.getIndex() === KEY_INDEX) {\r\n        const tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n            'startAt(), endAt(), or equalTo().';\r\n        const wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\r\n            'endAt(), endBefore(), or equalTo() must be a string.';\r\n        if (params.hasStart()) {\r\n            const startName = params.getIndexStartName();\r\n            if (startName !== MIN_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof startNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n        if (params.hasEnd()) {\r\n            const endName = params.getIndexEndName();\r\n            if (endName !== MAX_NAME) {\r\n                throw new Error(tooManyArgsError);\r\n            }\r\n            else if (typeof endNode !== 'string') {\r\n                throw new Error(wrongArgTypeError);\r\n            }\r\n        }\r\n    }\r\n    else if (params.getIndex() === PRIORITY_INDEX) {\r\n        if ((startNode != null && !isValidPriority(startNode)) ||\r\n            (endNode != null && !isValidPriority(endNode))) {\r\n            throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\r\n                '(null, a number, or a string).');\r\n        }\r\n    }\r\n    else {\r\n        assert(params.getIndex() instanceof PathIndex ||\r\n            params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n        if ((startNode != null && typeof startNode === 'object') ||\r\n            (endNode != null && typeof endNode === 'object')) {\r\n            throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\r\n                'equalTo() cannot be an object.');\r\n        }\r\n    }\r\n}\r\n/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */\r\nfunction validateLimit(params) {\r\n    if (params.hasStart() &&\r\n        params.hasEnd() &&\r\n        params.hasLimit() &&\r\n        !params.hasAnchoredLimit()) {\r\n        throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\r\n            'limitToFirst() or limitToLast() instead.');\r\n    }\r\n}\r\n/**\r\n * @internal\r\n */\r\nclass ReferenceImpl extends QueryImpl {\r\n    /** @hideconstructor */\r\n    constructor(repo, path) {\r\n        super(repo, path, new QueryParams(), false);\r\n    }\r\n    get parent() {\r\n        const parentPath = pathParent(this._path);\r\n        return parentPath === null\r\n            ? null\r\n            : new ReferenceImpl(this._repo, parentPath);\r\n    }\r\n    get root() {\r\n        let ref = this;\r\n        while (ref.parent !== null) {\r\n            ref = ref.parent;\r\n        }\r\n        return ref;\r\n    }\r\n}\r\n/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */\r\nclass DataSnapshot {\r\n    /**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */\r\n    constructor(_node, \r\n    /**\r\n     * The location of this DataSnapshot.\r\n     */\r\n    ref, _index) {\r\n        this._node = _node;\r\n        this.ref = ref;\r\n        this._index = _index;\r\n    }\r\n    /**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */\r\n    get priority() {\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this._node.getPriority().val();\r\n    }\r\n    /**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */\r\n    get key() {\r\n        return this.ref.key;\r\n    }\r\n    /** Returns the number of child properties of this `DataSnapshot`. */\r\n    get size() {\r\n        return this._node.numChildren();\r\n    }\r\n    /**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */\r\n    child(path) {\r\n        const childPath = new Path(path);\r\n        const childRef = child(this.ref, path);\r\n        return new DataSnapshot(this._node.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    }\r\n    /**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */\r\n    exists() {\r\n        return !this._node.isEmpty();\r\n    }\r\n    /**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    exportVal() {\r\n        return this._node.val(true);\r\n    }\r\n    /**\r\n     * Enumerates the top-level children in the `IteratedDataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */\r\n    forEach(action) {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        const childrenNode = this._node;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this._index, (key, node) => {\r\n            return action(new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX));\r\n        });\r\n    }\r\n    /**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */\r\n    hasChild(path) {\r\n        const childPath = new Path(path);\r\n        return !this._node.getChild(childPath).isEmpty();\r\n    }\r\n    /**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */\r\n    hasChildren() {\r\n        if (this._node.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this._node.isEmpty();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */\r\n    toJSON() {\r\n        return this.exportVal();\r\n    }\r\n    /**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    val() {\r\n        return this._node.val();\r\n    }\r\n}\r\n/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */\r\nfunction ref(db, path) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('ref');\r\n    return path !== undefined ? child(db._root, path) : db._root;\r\n}\r\n/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */\r\nfunction refFromURL(db, url) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('refFromURL');\r\n    const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\r\n    validateUrl('refFromURL', parsedURL);\r\n    const repoInfo = parsedURL.repoInfo;\r\n    if (!db._repo.repoInfo_.isCustomHost() &&\r\n        repoInfo.host !== db._repo.repoInfo_.host) {\r\n        fatal('refFromURL' +\r\n            ': Host name does not match the current database: ' +\r\n            '(found ' +\r\n            repoInfo.host +\r\n            ' but expected ' +\r\n            db._repo.repoInfo_.host +\r\n            ')');\r\n    }\r\n    return ref(db, parsedURL.path.toString());\r\n}\r\n/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */\r\nfunction child(parent, path) {\r\n    parent = getModularInstance(parent);\r\n    if (pathGetFront(parent._path) === null) {\r\n        validateRootPathString('child', 'path', path, false);\r\n    }\r\n    else {\r\n        validatePathString('child', 'path', path, false);\r\n    }\r\n    return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\r\n}\r\n/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */\r\nfunction onDisconnect(ref) {\r\n    ref = getModularInstance(ref);\r\n    return new OnDisconnect(ref._repo, ref._path);\r\n}\r\n/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}.\r\n * See {@link https://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}.\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */\r\nfunction push(parent, value) {\r\n    parent = getModularInstance(parent);\r\n    validateWritablePath('push', parent._path);\r\n    validateFirebaseDataArg('push', value, parent._path, true);\r\n    const now = repoServerTime(parent._repo);\r\n    const name = nextPushId(now);\r\n    // push() returns a ThennableReference whose promise is fulfilled with a\r\n    // regular Reference. We use child() to create handles to two different\r\n    // references. The first is turned into a ThennableReference below by adding\r\n    // then() and catch() methods and is used as the return value of push(). The\r\n    // second remains a regular Reference and is used as the fulfilled value of\r\n    // the first ThennableReference.\r\n    const thenablePushRef = child(parent, name);\r\n    const pushRef = child(parent, name);\r\n    let promise;\r\n    if (value != null) {\r\n        promise = set(pushRef, value).then(() => pushRef);\r\n    }\r\n    else {\r\n        promise = Promise.resolve(pushRef);\r\n    }\r\n    thenablePushRef.then = promise.then.bind(promise);\r\n    thenablePushRef.catch = promise.then.bind(promise, undefined);\r\n    return thenablePushRef;\r\n}\r\n/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */\r\nfunction remove(ref) {\r\n    validateWritablePath('remove', ref._path);\r\n    return set(ref, null);\r\n}\r\n/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction set(ref, value) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('set', ref._path);\r\n    validateFirebaseDataArg('set', value, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, \r\n    /*priority=*/ null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setPriority(ref, priority) {\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('setPriority', ref._path);\r\n    validatePriority('setPriority', priority, false);\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, pathChild(ref._path, '.priority'), priority, null, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */\r\nfunction setWithPriority(ref, value, priority) {\r\n    validateWritablePath('setWithPriority', ref._path);\r\n    validateFirebaseDataArg('setWithPriority', value, ref._path, false);\r\n    validatePriority('setWithPriority', priority, false);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\r\n    }\r\n    const deferred = new Deferred();\r\n    repoSetWithPriority(ref._repo, ref._path, value, priority, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */\r\nfunction update(ref, values) {\r\n    validateFirebaseMergeDataArg('update', values, ref._path, false);\r\n    const deferred = new Deferred();\r\n    repoUpdate(ref._repo, ref._path, values, deferred.wrapCallback(() => { }));\r\n    return deferred.promise;\r\n}\r\n/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */\r\nfunction get(query) {\r\n    query = getModularInstance(query);\r\n    const callbackContext = new CallbackContext(() => { });\r\n    const container = new ValueEventRegistration(callbackContext);\r\n    return repoGetValue(query._repo, query, container).then(node => {\r\n        return new DataSnapshot(node, new ReferenceImpl(query._repo, query._path), query._queryParams.getIndex());\r\n    });\r\n}\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nclass ValueEventRegistration {\r\n    constructor(callbackContext) {\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        return eventType === 'value';\r\n    }\r\n    createEvent(change, query) {\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, new ReferenceImpl(query._repo, query._path), index));\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, null);\r\n        }\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callbackContext || !this.callbackContext) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return other.callbackContext.matches(this.callbackContext);\r\n        }\r\n    }\r\n    hasAnyCallback() {\r\n        return this.callbackContext !== null;\r\n    }\r\n}\r\n/**\r\n * Represents the registration of a child_x event.\r\n */\r\nclass ChildEventRegistration {\r\n    constructor(eventType, callbackContext) {\r\n        this.eventType = eventType;\r\n        this.callbackContext = callbackContext;\r\n    }\r\n    respondsTo(eventType) {\r\n        let eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return this.eventType === eventToCheck;\r\n    }\r\n    createCancelEvent(error, path) {\r\n        if (this.callbackContext.hasCancelCallback) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    createEvent(change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        const childRef = child(new ReferenceImpl(query._repo, query._path), change.childName);\r\n        const index = query._queryParams.getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, childRef, index), change.prevName);\r\n    }\r\n    getEventRunner(eventData) {\r\n        if (eventData.getEventType() === 'cancel') {\r\n            return () => this.callbackContext.onCancel(eventData.error);\r\n        }\r\n        else {\r\n            return () => this.callbackContext.onValue(eventData.snapshot, eventData.prevName);\r\n        }\r\n    }\r\n    matches(other) {\r\n        if (other instanceof ChildEventRegistration) {\r\n            return (this.eventType === other.eventType &&\r\n                (!this.callbackContext ||\r\n                    !other.callbackContext ||\r\n                    this.callbackContext.matches(other.callbackContext)));\r\n        }\r\n        return false;\r\n    }\r\n    hasAnyCallback() {\r\n        return !!this.callbackContext;\r\n    }\r\n}\r\nfunction addEventListener(query, eventType, callback, cancelCallbackOrListenOptions, options) {\r\n    let cancelCallback;\r\n    if (typeof cancelCallbackOrListenOptions === 'object') {\r\n        cancelCallback = undefined;\r\n        options = cancelCallbackOrListenOptions;\r\n    }\r\n    if (typeof cancelCallbackOrListenOptions === 'function') {\r\n        cancelCallback = cancelCallbackOrListenOptions;\r\n    }\r\n    if (options && options.onlyOnce) {\r\n        const userCallback = callback;\r\n        const onceCallback = (dataSnapshot, previousChildName) => {\r\n            repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n            userCallback(dataSnapshot, previousChildName);\r\n        };\r\n        onceCallback.userCallback = callback.userCallback;\r\n        onceCallback.context = callback.context;\r\n        callback = onceCallback;\r\n    }\r\n    const callbackContext = new CallbackContext(callback, cancelCallback || undefined);\r\n    const container = eventType === 'value'\r\n        ? new ValueEventRegistration(callbackContext)\r\n        : new ChildEventRegistration(eventType, callbackContext);\r\n    repoAddEventCallbackForQuery(query._repo, query, container);\r\n    return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\nfunction onValue(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'value', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildAdded(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_added', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildChanged(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_changed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildMoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_moved', callback, cancelCallbackOrListenOptions, options);\r\n}\r\nfunction onChildRemoved(query, callback, cancelCallbackOrListenOptions, options) {\r\n    return addEventListener(query, 'child_removed', callback, cancelCallbackOrListenOptions, options);\r\n}\r\n/**\r\n * Detaches a callback previously attached with the corresponding `on*()` (`onValue`, `onChildAdded`) listener.\r\n * Note: This is not the recommended way to remove a listener. Instead, please use the returned callback function from\r\n * the respective `on*` callbacks.\r\n *\r\n * Detach a callback previously attached with `on*()`. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */\r\nfunction off(query, eventType, callback) {\r\n    let container = null;\r\n    const expCallback = callback ? new CallbackContext(callback) : null;\r\n    if (eventType === 'value') {\r\n        container = new ValueEventRegistration(expCallback);\r\n    }\r\n    else if (eventType) {\r\n        container = new ChildEventRegistration(eventType, expCallback);\r\n    }\r\n    repoRemoveEventCallbackForQuery(query._repo, query, container);\r\n}\r\n/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */\r\nclass QueryConstraint {\r\n}\r\nclass QueryEndAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'endAt';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endAt', this._value, query._path, true);\r\n        const newParams = queryParamsEndAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endAt: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */\r\nfunction endAt(value, key) {\r\n    validateKey('endAt', 'key', key, true);\r\n    return new QueryEndAtConstraint(value, key);\r\n}\r\nclass QueryEndBeforeConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'endBefore';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('endBefore', this._value, query._path, false);\r\n        const newParams = queryParamsEndBefore(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('endBefore: Starting point was already set (by another call to endAt, ' +\r\n                'endBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value less than or equal\r\n * to the specified value and a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction endBefore(value, key) {\r\n    validateKey('endBefore', 'key', key, true);\r\n    return new QueryEndBeforeConstraint(value, key);\r\n}\r\nclass QueryStartAtConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'startAt';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAt', this._value, query._path, true);\r\n        const newParams = queryParamsStartAt(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAt: Starting point was already set (by another call to startAt, ' +\r\n                'startBefore or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAt(value = null, key) {\r\n    validateKey('startAt', 'key', key, true);\r\n    return new QueryStartAtConstraint(value, key);\r\n}\r\nclass QueryStartAfterConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'startAfter';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('startAfter', this._value, query._path, false);\r\n        const newParams = queryParamsStartAfter(query._queryParams, this._value, this._key);\r\n        validateLimit(newParams);\r\n        validateQueryEndpoints(newParams);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('startAfter: Starting point was already set (by another call to startAt, ' +\r\n                'startAfter, or equalTo).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, newParams, query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */\r\nfunction startAfter(value, key) {\r\n    validateKey('startAfter', 'key', key, true);\r\n    return new QueryStartAfterConstraint(value, key);\r\n}\r\nclass QueryLimitToFirstConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n        this.type = 'limitToFirst';\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToFirst(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToFirst(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToFirst: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToFirstConstraint(limit);\r\n}\r\nclass QueryLimitToLastConstraint extends QueryConstraint {\r\n    constructor(_limit) {\r\n        super();\r\n        this._limit = _limit;\r\n        this.type = 'limitToLast';\r\n    }\r\n    _apply(query) {\r\n        if (query._queryParams.hasLimit()) {\r\n            throw new Error('limitToLast: Limit was already set (by another call to limitToFirst ' +\r\n                'or limitToLast).');\r\n        }\r\n        return new QueryImpl(query._repo, query._path, queryParamsLimitToLast(query._queryParams, this._limit), query._orderByCalled);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */\r\nfunction limitToLast(limit) {\r\n    if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\r\n        throw new Error('limitToLast: First argument must be a positive integer.');\r\n    }\r\n    return new QueryLimitToLastConstraint(limit);\r\n}\r\nclass QueryOrderByChildConstraint extends QueryConstraint {\r\n    constructor(_path) {\r\n        super();\r\n        this._path = _path;\r\n        this.type = 'orderByChild';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByChild');\r\n        const parsedPath = new Path(this._path);\r\n        if (pathIsEmpty(parsedPath)) {\r\n            throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');\r\n        }\r\n        const index = new PathIndex(parsedPath);\r\n        const newParams = queryParamsOrderBy(query._queryParams, index);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */\r\nfunction orderByChild(path) {\r\n    if (path === '$key') {\r\n        throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');\r\n    }\r\n    else if (path === '$priority') {\r\n        throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');\r\n    }\r\n    else if (path === '$value') {\r\n        throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');\r\n    }\r\n    validatePathString('orderByChild', 'path', path, false);\r\n    return new QueryOrderByChildConstraint(path);\r\n}\r\nclass QueryOrderByKeyConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByKey';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByKey');\r\n        const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByKey() {\r\n    return new QueryOrderByKeyConstraint();\r\n}\r\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByPriority';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByPriority');\r\n        const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */\r\nfunction orderByPriority() {\r\n    return new QueryOrderByPriorityConstraint();\r\n}\r\nclass QueryOrderByValueConstraint extends QueryConstraint {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = 'orderByValue';\r\n    }\r\n    _apply(query) {\r\n        validateNoPreviousOrderByCall(query, 'orderByValue');\r\n        const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\r\n        validateQueryEndpoints(newParams);\r\n        return new QueryImpl(query._repo, query._path, newParams, \r\n        /*orderByCalled=*/ true);\r\n    }\r\n}\r\n/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */\r\nfunction orderByValue() {\r\n    return new QueryOrderByValueConstraint();\r\n}\r\nclass QueryEqualToValueConstraint extends QueryConstraint {\r\n    constructor(_value, _key) {\r\n        super();\r\n        this._value = _value;\r\n        this._key = _key;\r\n        this.type = 'equalTo';\r\n    }\r\n    _apply(query) {\r\n        validateFirebaseDataArg('equalTo', this._value, query._path, false);\r\n        if (query._queryParams.hasStart()) {\r\n            throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\r\n                'equalTo).');\r\n        }\r\n        if (query._queryParams.hasEnd()) {\r\n            throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\r\n                'equalTo).');\r\n        }\r\n        return new QueryEndAtConstraint(this._value, this._key)._apply(new QueryStartAtConstraint(this._value, this._key)._apply(query));\r\n    }\r\n}\r\n/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */\r\nfunction equalTo(value, key) {\r\n    validateKey('equalTo', 'key', key, true);\r\n    return new QueryEqualToValueConstraint(value, key);\r\n}\r\n/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */\r\nfunction query(query, ...queryConstraints) {\r\n    let queryImpl = getModularInstance(query);\r\n    for (const constraint of queryConstraints) {\r\n        queryImpl = constraint._apply(queryImpl);\r\n    }\r\n    return queryImpl;\r\n}\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nsyncPointSetReferenceConstructor(ReferenceImpl);\r\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\n/**\r\n * Creates and caches `Repo` instances.\r\n */\r\nconst repos = {};\r\n/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */\r\nlet useRestClient = false;\r\n/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */\r\nfunction repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider) {\r\n    repo.repoInfo_ = new RepoInfo(`${host}:${port}`, \r\n    /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams, \r\n    /*isUsingEmulator=*/ true);\r\n    if (tokenProvider) {\r\n        repo.authTokenProvider_ = tokenProvider;\r\n    }\r\n}\r\n/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */\r\nfunction repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin) {\r\n    let dbUrl = url || app.options.databaseURL;\r\n    if (dbUrl === undefined) {\r\n        if (!app.options.projectId) {\r\n            fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                ' a Project ID when calling firebase.initializeApp().');\r\n        }\r\n        log('Using default host for project ', app.options.projectId);\r\n        dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\r\n    }\r\n    let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n    let repoInfo = parsedUrl.repoInfo;\r\n    let isEmulator;\r\n    let dbEmulatorHost = undefined;\r\n    if (typeof process !== 'undefined' && process.env) {\r\n        dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n    }\r\n    if (dbEmulatorHost) {\r\n        isEmulator = true;\r\n        dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\r\n        parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        repoInfo = parsedUrl.repoInfo;\r\n    }\r\n    else {\r\n        isEmulator = !parsedUrl.repoInfo.secure;\r\n    }\r\n    const authTokenProvider = nodeAdmin && isEmulator\r\n        ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\r\n        : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\r\n    validateUrl('Invalid Firebase Database URL', parsedUrl);\r\n    if (!pathIsEmpty(parsedUrl.path)) {\r\n        fatal('Database URL must point to the root of a Firebase Database ' +\r\n            '(not including a child path).');\r\n    }\r\n    const repo = repoManagerCreateRepo(repoInfo, app, authTokenProvider, new AppCheckTokenProvider(app.name, appCheckProvider));\r\n    return new Database(repo, app);\r\n}\r\n/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */\r\nfunction repoManagerDeleteRepo(repo, appName) {\r\n    const appRepos = repos[appName];\r\n    // This should never happen...\r\n    if (!appRepos || appRepos[repo.key] !== repo) {\r\n        fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\r\n    }\r\n    repoInterrupt(repo);\r\n    delete appRepos[repo.key];\r\n}\r\n/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */\r\nfunction repoManagerCreateRepo(repoInfo, app, authTokenProvider, appCheckProvider) {\r\n    let appRepos = repos[app.name];\r\n    if (!appRepos) {\r\n        appRepos = {};\r\n        repos[app.name] = appRepos;\r\n    }\r\n    let repo = appRepos[repoInfo.toURLString()];\r\n    if (repo) {\r\n        fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n    }\r\n    repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\r\n    appRepos[repoInfo.toURLString()] = repo;\r\n    return repo;\r\n}\r\n/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */\r\nfunction repoManagerForceRestClient(forceRestClient) {\r\n    useRestClient = forceRestClient;\r\n}\r\n/**\r\n * Class representing a Firebase Realtime Database.\r\n */\r\nclass Database {\r\n    /** @hideconstructor */\r\n    constructor(_repoInternal, \r\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\r\n    app) {\r\n        this._repoInternal = _repoInternal;\r\n        this.app = app;\r\n        /** Represents a `Database` instance. */\r\n        this['type'] = 'database';\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this._instanceStarted = false;\r\n    }\r\n    get _repo() {\r\n        if (!this._instanceStarted) {\r\n            repoStart(this._repoInternal, this.app.options.appId, this.app.options['databaseAuthVariableOverride']);\r\n            this._instanceStarted = true;\r\n        }\r\n        return this._repoInternal;\r\n    }\r\n    get _root() {\r\n        if (!this._rootInternal) {\r\n            this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\r\n        }\r\n        return this._rootInternal;\r\n    }\r\n    _delete() {\r\n        if (this._rootInternal !== null) {\r\n            repoManagerDeleteRepo(this._repo, this.app.name);\r\n            this._repoInternal = null;\r\n            this._rootInternal = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    _checkNotDeleted(apiName) {\r\n        if (this._rootInternal === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    }\r\n}\r\nfunction checkTransportInit() {\r\n    if (TransportManager.IS_TRANSPORT_INITIALIZED) {\r\n        warn('Transport has already been initialized. Please call this function before calling ref or setting up a listener');\r\n    }\r\n}\r\n/**\r\n * Force the use of websockets instead of longPolling.\r\n */\r\nfunction forceWebSockets() {\r\n    checkTransportInit();\r\n    BrowserPollConnection.forceDisallow();\r\n}\r\n/**\r\n * Force the use of longPolling instead of websockets. This will be ignored if websocket protocol is used in databaseURL.\r\n */\r\nfunction forceLongPolling() {\r\n    checkTransportInit();\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n}\r\n/**\r\n * Returns the instance of the Realtime Database SDK that is associated with the provided\r\n * {@link @firebase/app#FirebaseApp}. Initializes a new instance with default settings if\r\n * no instance exists or if the existing instance uses a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */\r\nfunction getDatabase(app = getApp(), url) {\r\n    const db = _getProvider(app, 'database').getImmediate({\r\n        identifier: url\r\n    });\r\n    if (!db._instanceStarted) {\r\n        const emulator = getDefaultEmulatorHostnameAndPort('database');\r\n        if (emulator) {\r\n            connectDatabaseEmulator(db, ...emulator);\r\n        }\r\n    }\r\n    return db;\r\n}\r\n/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */\r\nfunction connectDatabaseEmulator(db, host, port, options = {}) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('useEmulator');\r\n    if (db._instanceStarted) {\r\n        fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n    }\r\n    const repo = db._repoInternal;\r\n    let tokenProvider = undefined;\r\n    if (repo.repoInfo_.nodeAdmin) {\r\n        if (options.mockUserToken) {\r\n            fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');\r\n        }\r\n        tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\r\n    }\r\n    else if (options.mockUserToken) {\r\n        const token = typeof options.mockUserToken === 'string'\r\n            ? options.mockUserToken\r\n            : createMockUserToken(options.mockUserToken, db.app.options.projectId);\r\n        tokenProvider = new EmulatorTokenProvider(token);\r\n    }\r\n    // Modify the repo to apply emulator settings\r\n    repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\r\n}\r\n/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */\r\nfunction goOffline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOffline');\r\n    repoInterrupt(db._repo);\r\n}\r\n/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */\r\nfunction goOnline(db) {\r\n    db = getModularInstance(db);\r\n    db._checkNotDeleted('goOnline');\r\n    repoResume(db._repo);\r\n}\r\nfunction enableLogging(logger, persistent) {\r\n    enableLogging$1(logger, persistent);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerDatabase(variant) {\r\n    setSDKVersion(SDK_VERSION$1);\r\n    _registerComponent(new Component('database', (container, { instanceIdentifier: url }) => {\r\n        const app = container.getProvider('app').getImmediate();\r\n        const authProvider = container.getProvider('auth-internal');\r\n        const appCheckProvider = container.getProvider('app-check-internal');\r\n        return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */).setMultipleInstances(true));\r\n    registerVersion(name, version, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name, version, 'esm2017');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SERVER_TIMESTAMP = {\r\n    '.sv': 'timestamp'\r\n};\r\n/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */\r\nfunction serverTimestamp() {\r\n    return SERVER_TIMESTAMP;\r\n}\r\n/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */\r\nfunction increment(delta) {\r\n    return {\r\n        '.sv': {\r\n            'increment': delta\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */\r\nclass TransactionResult {\r\n    /** @hideconstructor */\r\n    constructor(\r\n    /** Whether the transaction was successfully committed. */\r\n    committed, \r\n    /** The resulting data snapshot. */\r\n    snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    /** Returns a JSON-serializable representation of this object. */\r\n    toJSON() {\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    }\r\n}\r\n/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */\r\nfunction runTransaction(ref, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ntransactionUpdate, options) {\r\n    var _a;\r\n    ref = getModularInstance(ref);\r\n    validateWritablePath('Reference.transaction', ref._path);\r\n    if (ref.key === '.length' || ref.key === '.keys') {\r\n        throw ('Reference.transaction failed: ' + ref.key + ' is a read-only object.');\r\n    }\r\n    const applyLocally = (_a = options === null || options === void 0 ? void 0 : options.applyLocally) !== null && _a !== void 0 ? _a : true;\r\n    const deferred = new Deferred();\r\n    const promiseComplete = (error, committed, node) => {\r\n        let dataSnapshot = null;\r\n        if (error) {\r\n            deferred.reject(error);\r\n        }\r\n        else {\r\n            dataSnapshot = new DataSnapshot(node, new ReferenceImpl(ref._repo, ref._path), PRIORITY_INDEX);\r\n            deferred.resolve(new TransactionResult(committed, dataSnapshot));\r\n        }\r\n    };\r\n    // Add a watch to make sure we get server updates.\r\n    const unwatcher = onValue(ref, () => { });\r\n    repoStartTransaction(ref._repo, ref._path, transactionUpdate, promiseComplete, unwatcher, applyLocally);\r\n    return deferred.promise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nPersistentConnection;\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nConnection;\r\n/**\r\n * @internal\r\n */\r\nconst hijackHash = function (newHash) {\r\n    const oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\nRepoInfo;\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */\r\nconst forceRestClient = function (forceRestClient) {\r\n    repoManagerForceRestClient(forceRestClient);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n * @internal\r\n * @param app - A valid FirebaseApp-like object\r\n * @param url - A valid Firebase databaseURL\r\n * @param version - custom version e.g. firebase-admin version\r\n * @param customAppCheckImpl - custom app check implementation\r\n * @param customAuthImpl - custom auth implementation\r\n */\r\nfunction _initStandalone({ app, url, version, customAuthImpl, customAppCheckImpl, nodeAdmin = false }) {\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    const componentContainer = new ComponentContainer('database-standalone');\r\n    const authProvider = new Provider('auth-internal', componentContainer);\r\n    let appCheckProvider;\r\n    if (customAppCheckImpl) {\r\n        appCheckProvider = new Provider('app-check-internal', componentContainer);\r\n        appCheckProvider.setComponent(new Component('app-check-internal', () => customAppCheckImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    }\r\n    authProvider.setComponent(new Component('auth-internal', () => customAuthImpl, \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    return repoManagerDatabaseFromApp(app, authProvider, appCheckProvider, url, nodeAdmin);\r\n}\n\n/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */\r\nregisterDatabase();\n\nexport { DataSnapshot, Database, OnDisconnect, QueryConstraint, TransactionResult, QueryImpl as _QueryImpl, QueryParams as _QueryParams, ReferenceImpl as _ReferenceImpl, forceRestClient as _TEST_ACCESS_forceRestClient, hijackHash as _TEST_ACCESS_hijackHash, _initStandalone, repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp, setSDKVersion as _setSDKVersion, validatePathString as _validatePathString, validateWritablePath as _validateWritablePath, child, connectDatabaseEmulator, enableLogging, endAt, endBefore, equalTo, forceLongPolling, forceWebSockets, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, update };\n//# sourceMappingURL=index.esm2017.js.map\n","<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    import { navigate } from \"svelte-routing\";\n    import { initializeApp } from \"firebase/app\";\n    import { getDatabase, ref, set, get } from \"firebase/database\";\n\n    // Configuração do Firebase\n    const firebaseConfig = {\n        apiKey: \"AIzaSyA7bdsMRoNvLc1fGk84tjjCzy8jQgT2VLc\",\n        authDomain: \"svelte-blip-chatbo.firebaseapp.com\",\n        databaseURL: \"https://svelte-blip-chatbo-default-rtdb.firebaseio.com\",\n        projectId: \"svelte-blip-chatbo\",\n        storageBucket: \"svelte-blip-chatbo.appspot.com\",\n        messagingSenderId: \"494627128433\",\n        appId: \"1:494627128433:web:99099a19db8eee632687d0\",\n    };\n\n    const app = initializeApp(firebaseConfig);\n    const db = getDatabase(app);\n\n    // Variáveis de estado\n    let apiKey: string = \"\";\n    let errorMessage: string = \"\";\n    let registeredApiKeys: string[] = [];\n    let newApiKey: string = \"\";\n\n    // Monta o componente e verifica chaves registradas\n    onMount(() => {\n        checkRegisteredApiKeys();\n    });\n\n    // Verifica chaves de API registradas no Firebase\n    function checkRegisteredApiKeys() {\n        const apiKeysRef = ref(db, \"apiKeys/\");\n        get(apiKeysRef)\n            .then((snapshot) => {\n                if (snapshot.exists()) {\n                    registeredApiKeys = Object.keys(snapshot.val()).map(\n                        (key) => snapshot.val()[key].key,\n                    );\n                } else {\n                    console.log(\"No data available\");\n                }\n            })\n            .catch((error) => {\n                console.error(\"Erro ao buscar chaves de API:\", error);\n            });\n    }\n\n    // Autentica o usuário com a chave de API\n    function authenticate() {\n        if (registeredApiKeys.includes(apiKey)) {\n            localStorage.setItem(\"apiKey\", apiKey);\n            navigate(\"/\");\n        } else {\n            errorMessage = \"Chave de API inválida. Tente novamente.\";\n        }\n    }\n\n    // Manipula o envio do formulário de login\n    function handleSubmit(event: Event) {\n        event.preventDefault();\n        authenticate();\n    }\n\n    // Manipula o envio do formulário de registro\n    function handleRegister(event: Event) {\n        event.preventDefault();\n        if (isValidApiKey(newApiKey)) {\n            // Verifica se a chave já está registrada\n            if (registeredApiKeys.includes(newApiKey)) {\n                alert(\"Essa chave de API já está registrada.\");\n                return;\n            }\n\n            registerApiKey(newApiKey); // Chama função para registrar a chave\n        } else {\n            alert(\"Chave de API inválida. O formato deve ser: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\");\n        }\n    }\n\n    // Registra a nova chave de API no Firebase\n    function registerApiKey(apiKey: string) {\n        const apiKeyRef = ref(db, \"apiKeys/\" + apiKey);\n        set(apiKeyRef, { key: apiKey })\n            .then(() => {\n                alert(\"Chave de API registrada com sucesso!\");\n                newApiKey = \"\"; // Limpa o campo após o registro\n                checkRegisteredApiKeys(); // Atualiza a lista de chaves registradas\n            })\n            .catch((error) => {\n                console.error(\"Erro ao registrar chave de API:\", error);\n                alert(\"Erro ao registrar chave de API. Tente novamente.\");\n            });\n    }\n\n    // Valida o formato da chave de API\n    function isValidApiKey(key: string): boolean {\n        const apiKeyPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n        return apiKeyPattern.test(key);\n    }\n</script>\n\n<div class=\"flex flex-col items-center justify-center min-h-screen text-gray-100\">\n    <div class=\"max-w-md w-full p-8 bg-gray-800 border-2 border-gray-600 rounded-lg text-center\">\n        <h2 class=\"text-2xl mb-4\">\n            <i class=\"fas fa-lock mr-2\"></i>Login\n        </h2>\n        {#if errorMessage}\n            <p class=\"text-red-400\">{errorMessage}</p>\n        {/if}\n        <form on:submit={handleSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Insira sua chave de API\"\n                bind:value={apiKey}\n                required\n                class=\"w-full p-2 mb-4 border-2 border-gray-600 bg-gray-700 text-gray-100\"\n            />\n            <button\n                type=\"submit\"\n                class=\"w-full py-2 bg-gray-700 text-gray-100 hover:bg-gray-600\"\n            >\n                <i class=\"fas fa-sign-in-alt mr-2\"></i>Entrar\n            </button>\n        </form>\n    </div>\n\n    <!-- Painel de Registro da Chave API -->\n    <div class=\"max-w-md w-full p-8 bg-gray-800 border-2 border-gray-600 rounded-lg text-center mt-6\">\n        <h2 class=\"text-2xl mb-4\">\n            <i class=\"fas fa-pencil-alt mr-2\"></i>Registrar Chave de API\n        </h2>\n        <form on:submit={handleRegister}>\n            <input\n                type=\"text\"\n                placeholder=\"Insira a nova chave de API\"\n                bind:value={newApiKey}\n                required\n                class=\"w-full p-2 mb-4 border-2 border-gray-600 bg-gray-700 text-gray-100\"\n            />\n            <button\n                type=\"submit\"\n                class=\"w-full py-2 bg-gray-700 text-gray-100 hover:bg-gray-600\"\n            >\n                <i class=\"fas fa-plus-circle mr-2\"></i>Registrar\n            </button>\n        </form>\n    </div>\n\n    <!-- Painéis de informações -->\n    <div class=\"mt-6 flex flex-col items-center w-full px-4\">\n        <div class=\"bg-gray-800 border-2 border-gray-600 rounded-lg p-4 w-full max-w-md mb-4 text-center\">\n            <h3 class=\"text-lg mb-2\">\n                <i class=\"fas fa-info-circle mr-2\"></i>Sobre o Sistema\n            </h3>\n            <p>\n                O sistema valida uma chave de API e carrega um banco de dados de mensagens, simulando endpoints para tratativa com logs, mensagens recebidas e enviadas.\n            </p>\n        </div>\n        <div class=\"bg-gray-800 border-2 border-gray-600 rounded-lg p-4 w-full max-w-md mb-4 text-center\">\n            <h3 class=\"text-lg mb-2\">\n                <i class=\"fas fa-question-circle mr-2\"></i>Ajuda\n            </h3>\n            <p>\n                Para registrar uma nova chave de API, siga as instruções do sistema. Após registrar, você poderá validar suas mensagens.\n            </p>\n            <p class=\"text-yellow-400 mt-2\">\n                <strong>Observação:</strong> Você pode registrar uma chave falsa, só precisa ser o mesmo formato.\n            </p>\n        </div>\n        <div class=\"bg-gray-800 border-2 border-gray-600 rounded-lg p-4 w-full max-w-md mb-4 text-center\">\n            <h3 class=\"text-lg mb-2\">\n                <i class=\"fas fa-server mr-2\"></i>Servidor Simulado\n            </h3>\n            <p>\n                Inicie o servidor com o comando <code>npm run dev</code> para o front e <code>node server.js</code> para o backend.\n            </p>\n            <p><strong>Instruções de instalação:</strong></p>\n            <ol class=\"list-decimal pl-6\">\n                <li>Clone o repositório.</li>\n                <li>Instale as dependências com <code>npm install</code>.</li>\n                <li>Inicie o servidor com <code>node server.js</code> para o backend.</li>\n                <li>Execute <code>npm run dev</code> para rodar a aplicação no frontend.</li>\n                <li>Após registrar sua chave de API, você poderá testá-la.</li>\n            </ol>\n        </div>\n    </div>\n</div>\n\n<link href=\"https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css\" rel=\"stylesheet\" />\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" rel=\"stylesheet\" />\n\n<style>\n    @import url(\"https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@400;700&display=swap\");\n\n    :global(body) {\n        font-family: \"Source Code Pro\", monospace;\n        background-color: #1a1a1a;\n        background-image: url(\"https://www.transparenttextures.com/patterns/cubes.png\");\n        color: #ccc;\n        margin: 0;\n        padding: 0;\n    }\n\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { initializeApp } from \"firebase/app\";\n    import { getDatabase, ref, set, onValue } from \"firebase/database\";\n\n    const firebaseConfig = {\n        apiKey: \"AIzaSyA7bdsMRoNvLc1fGk84tjjCzy8jQgT2VLc\",\n        authDomain: \"svelte-blip-chatbo.firebaseapp.com\",\n        databaseURL: \"https://svelte-blip-chatbo-default-rtdb.firebaseio.com\",\n        projectId: \"svelte-blip-chatbo\",\n        storageBucket: \"svelte-blip-chatbo.appspot.com\",\n        messagingSenderId: \"494627128433\",\n        appId: \"1:494627128433:web:99099a19db8eee632687d0\"\n    };\n\n    const app = initializeApp(firebaseConfig);\n    const db = getDatabase(app);\n\n    let messages = [];\n    let newMessage = '';\n\n    function fetchChatLogs() {\n        const messagesRef = ref(db, 'messages');\n        onValue(messagesRef, (snapshot) => {\n            messages = [];\n            snapshot.forEach((childSnapshot) => {   \n                const messageData = childSnapshot.val();\n                messages.push({\n                    content: messageData.content,\n                    from: messageData.from,\n                    timestamp: messageData.timestamp\n                });\n            });\n            scrollToBottom();\n        });\n    }\n\n    async function sendMessage() {\n        if (newMessage.trim() === '') return;\n\n        const messageData = {\n            content: newMessage,\n            from: 'Você',\n            timestamp: Date.now(),\n        };\n\n        try {\n            const messageRef = ref(db, 'messages/' + Date.now());\n            await set(messageRef, messageData);\n            await fetch('https://withered-grass-6f5a.rafcs-x.workers.dev/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    botAccessKey: 'YXNrdG90aGV2ZXNzZWxvZmV4aXN0ZW5jZTE6ZDQ5MjUzZTUtNmEwOS00ZDRjLTgyZmItMDlkYzAxNjU4YzU0',\n                    message: {\n                        from: 'Você',\n                        to: 'bot',\n                        content: {\n                            type: 'text',\n                            text: newMessage\n                        }\n                    }\n                })\n            });\n\n            newMessage = '';\n        } catch (error) {\n            console.error('Erro ao enviar mensagem:', error);\n        }\n    }\n\n    onMount(() => {\n        fetchChatLogs();\n        initBlipChat();\n    });\n\n    function scrollToBottom() {\n        const chatContainer = document.querySelector('.chat-container') as HTMLElement;\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n    }\n\n    function initBlipChat() {\n        const script = document.createElement('script');\n        script.src = \"https://unpkg.com/blip-chat-widget\";\n        script.onload = () => {\n            new BlipChat()\n                .withAppKey('YXNrdG90aGV2ZXNzZWxvZmV4aXN0ZW5jZTE6ZDQ5MjUzZTUtNmEwOS00ZDRjLTgyZmItMDlkYzAxNjU4YzU0')\n                .withButton({\"color\":\"#00ff00\",\"icon\":\"\"}) \n                .withCustomCommonUrl('https://rafael-correia-y0tjz.chat.blip.ai/')\n                .withFontColor('#ffffff') \n                .withBackgroundColor('#000000')\n                .withHeaderColor('#333333') \n                .withInputBackgroundColor('#222222') \n                .withInputFontColor('#ffffff') \n                .withMessageFromBotBackgroundColor('#444444') \n                .withMessageFromUserBackgroundColor('#555555')\n                .build();\n        };\n        document.head.appendChild(script);\n    }\n</script>\n\n<div class=\"chat-container bg-gray-800 p-4 rounded-lg shadow-lg max-w-md mx-auto h-96 flex flex-col\">\n    <h2 class=\"text-white text-xl text-center mb-4\">Conversa</h2>\n    <div class=\"messages flex-1 overflow-y-auto\">\n        {#each messages as message}\n            <div class={`message p-2 rounded-lg mb-2 ${message.from === 'Você' ? 'bg-gray-600 text-white self-end' : 'bg-gray-700 text-white self-start'}`}>\n                <div class=\"message-content break-words\">\n                    {message.content}\n                </div>\n                <div class=\"timestamp text-xs text-gray-400 mt-1\">{new Date(message.timestamp).toLocaleTimeString()}</div>\n            </div>\n        {/each}\n    </div>\n    \n    <div class=\"input-container mt-2 flex\">\n        <input type=\"text\" bind:value={newMessage} placeholder=\"Digite sua mensagem...\" class=\"input flex-1 p-2 border border-gray-600 rounded-lg bg-gray-700 text-white focus:outline-none\" />\n        <button on:click={sendMessage} class=\"send-button bg-blue-500 text-white p-2 rounded-lg ml-2 hover:bg-blue-600 transition duration-200\">Enviar</button>\n    </div>\n</div>\n\n<style>\n body {\n    display: flex; /* Usar flexbox para centralizar o conteúdo */\n    justify-content: center; /* Centraliza horizontalmente */\n    align-items: center; /* Centraliza verticalmente */\n    height: 100vh; /* Faz a altura ocupar toda a janela */\n    margin: 0; /* Remove margens padrão do body */\n    background-color: #111; /* Cor de fundo da página */\n}\n\n.chat-panel {\n    width: 400px; /* Largura fixa para o painel */\n    height: 400px; /* Altura fixa para manter a forma quadrada */\n    background-color: #222; \n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);\n    overflow: hidden; /* Oculta o conteúdo que excede os limites do painel */\n}\n\nh2 {\n    color: #fff; \n    margin: 0;\n    text-align: center;\n    padding: 1rem;\n    background-color: #333;\n}\n\n.chat-container {\n    display: flex;\n    flex-direction: column;\n    gap: 10px; /* Espaçamento entre as mensagens */\n    padding: 1rem;\n    height: calc(100% - 80px); /* Altura ajustada para o painel, subtraindo a altura do título e entrada */\n    overflow-y: auto; /* Permite rolagem se o conteúdo exceder a altura */\n}\n\n.message {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    border-radius: 5px;\n    animation: fadeIn 0.5s ease-in-out;\n    position: relative;\n}\n\n.message.user {\n    justify-content: flex-end;\n    background-color: #333; \n    color: #fff;\n}\n\n.message.bot {\n    justify-content: flex-start;\n    background-color: #444; \n    color: #fff;\n}\n\n.message-content {\n    max-width: 60%; /* Limita a largura das mensagens */\n    padding: 15px;\n    border-radius: 5px;\n    background-color: rgba(255, 255, 255, 0.1); \n    word-wrap: break-word; /* Quebra a linha do texto longo */\n}\n\n.timestamp {\n    font-size: 0.75em;\n    color: #aaaaaa; \n    position: absolute;\n    bottom: -15px;\n    right: 10px; /* Ajusta a posição do timestamp */\n}\n\n.input-container {\n    display: flex;\n    margin-top: 10px;\n    padding: 10px; /* Espaçamento interno */\n}\n\n.input {\n    flex: 1; /* Faz o campo de entrada ocupar o espaço restante */\n    padding: 10px;\n    border: 1px solid #CCC; \n    border-radius: 5px;\n    color: #fff;\n    background-color: #222; \n}\n\n.send-button {\n    background-color: #ccc; \n    color: #000;\n    padding: 10px 15px;\n    border: none;\n    border-radius: 5px;\n    margin-left: 10px; /* Espaçamento à esquerda do botão */\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.send-button:hover {\n    background-color: #bbb; \n}\n\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n</style>\n","<script lang=\"ts\">\n    import { onMount } from 'svelte';\n    import { navigate } from 'svelte-routing';\n\n    interface Contact {\n        id: string;\n        name: string;\n    }\n\n    let contacts: Contact[] = [];\n    let currentPage: number = 1;\n    const contactsPerPage: number = 10;\n    let totalContacts: number = 0;\n    const apiKey: string | null = localStorage.getItem('apiKey');\n\n    let errorMessage: string = '';\n\n    // Funções\n    async function fetchContacts() {\n        try {\n            console.log('Fetching contacts...');\n            console.log('API Key:', apiKey);\n\n            const response = await fetch(`http://localhost:3000/api/contacts`, {\n                method: 'GET',\n                headers: {\n                    'Authorization': `Bearer ${apiKey}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            if (!response.ok) {\n                handleFetchError(response);\n                throw new Error('Failed to fetch contacts');\n            }\n\n            const data = await response.json();\n            console.log('Fetched data:', data);\n            contacts = data.contacts || [];\n            totalContacts = contacts.length;\n\n        } catch (error) {\n            console.error('Error:', error);\n            errorMessage = 'Erro ao buscar contatos. Redirecionando para login...';\n            setTimeout(() => {\n                navigate('/login');\n            }, 3000);\n        }\n    }\n\n    function handleFetchError(response: Response) {\n        if (response.status === 401) {\n            errorMessage = 'Unauthorized access. Please log in again.';\n        } else if (response.status === 404) {\n            errorMessage = 'Contacts not found.';\n        } else {\n            errorMessage = 'Error fetching contacts. Please try again later.';\n        }\n    }\n\n    function goToConversation(contactId: string) {\n        console.log('Navigating to conversation with contact ID:', contactId);\n        navigate(`/contato/${contactId}`);\n    }\n\n    function currentContacts(): Contact[] {\n        const startIndex: number = (currentPage - 1) * contactsPerPage;\n        const current = contacts.slice(startIndex, startIndex + contactsPerPage);\n        console.log('Current contacts:', current);\n        return current;\n    }\n\n    function changePage(page: number) {\n        currentPage = page;\n    }\n\n    // Lifecycle\n    onMount(() => {\n        if (!apiKey) {\n            navigate('/login');\n        } else {\n            fetchContacts();\n        }\n    });\n</script>\n\n<div class=\"max-w-lg mx-auto my-12 p-6 bg-white rounded-lg shadow-lg text-center\">\n    <h1 class=\"text-2xl font-semibold mb-4\">Lista de Contatos</h1>\n    {#if errorMessage}\n        <p class=\"text-red-500\">{errorMessage}</p>\n    {/if}\n    {#if contacts.length === 0}\n        <p>Nenhum contato encontrado.</p>\n    {:else}\n        <ul class=\"list-none p-0 m-0\">\n            {#each currentContacts() as contact}\n                <li>\n                    <button \n                        on:click={() => goToConversation(contact.id)} \n                        type=\"button\" \n                        class=\"flex items-center justify-center px-4 py-2 my-2 bg-gray-200 rounded hover:bg-gray-300 transition-colors duration-300\"\n                    >\n                        <i class=\"fas fa-user\"></i> {contact.name}\n                    </button>\n                </li>\n            {/each}\n        </ul>\n\n        <div class=\"mt-4\">\n            {#each Array(Math.ceil(totalContacts / contactsPerPage)) as _, index}\n                <button \n                    on:click={() => changePage(index + 1)} \n                    disabled={currentPage === index + 1}\n                    class=\"px-2 py-1 mx-1 rounded bg-blue-500 text-white hover:bg-blue-600 disabled:bg-gray-300 transition-colors duration-300\"\n                >\n                    {index + 1}\n                </button>\n            {/each}\n        </div>\n    {/if}\n</div>\n","<script>\n    import { Router, Route } from 'svelte-routing';\n    import Navbar from './components/routes/Navbar.svelte'; \n    import Home from './components/routes/Home.svelte';\n    import Login from './components/routes/Login.svelte';\n    import ChatComponent from './components/routes/ChatComponent.svelte'; \n    import Contacts from './components/routes/Contacts.svelte'; \n\n    import { onMount } from 'svelte';\n\n    onMount(() => {\n        const script = document.createElement('script');\n        script.src = 'https://unpkg.com/blip-chat-widget';\n        script.type = 'text/javascript';\n        script.onload = () => {\n            const blipChat = new BlipChat()\n                .withAppKey(import.meta.env.MYAPP_FIREBASE_API_KEY) // Use a variável de ambiente aqui\n                .withButton({ \"color\": \"#0096fa\", \"icon\": \"\" })\n                .withCustomCommonUrl(import.meta.env.MYAPP_FIREBASE_AUTH_DOMAIN) // Outro exemplo\n                .build();\n\n            blipChat.on('send', (message) => {\n                const payload = {\n                    botAccessKey: import.meta.env.MYAPP_FIREBASE_APP_ID, // Use a variável de ambiente aqui\n                    message: {\n                        content: message.content,\n                        type: message.type,\n                        from: message.from,\n                        to: message.to,\n                        timestamp: new Date().toISOString(),\n                    },\n                };\n                sendToWebhook(payload);\n            });\n\n            blipChat.on('receive', (message) => {\n                const payload = {\n                    botAccessKey: import.meta.env.MYAPP_FIREBASE_APP_ID, // Use a variável de ambiente aqui\n                    message: {\n                        content: message.content,\n                        type: message.type,\n                        from: message.from,\n                        to: message.to,\n                        timestamp: new Date().toISOString(),\n                    },\n                };\n                sendToWebhook(payload);\n            });\n        };\n        document.body.appendChild(script);\n    });\n\n    async function sendToWebhook(payload) {\n        const webhookUrl = import.meta.env.MYAPP_WEBHOOK_URL; // Use a variável de ambiente aqui\n\n        try {\n            const response = await fetch(webhookUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payload),\n            });\n\n            if (!response.ok) {\n                console.error('Erro ao enviar dados para o webhook:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Erro na requisição ao webhook:', error);\n        }\n    }\n</script>\n\n<Router>\n    <Navbar />\n    <main>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/contatos\" component={Contacts} />\n        <Route path=\"/contato/:id\" component={ChatComponent} />\n    </main>\n</Router>\n\n<style>\n    main {\n        padding-top: 60px; \n    }\n</style>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["linear","create_if_block","isValidKey","DEFAULT_ENTRY_NAME","version$1","logger","name$1","name","version","SDK_VERSION","app","App","target","document","body","props"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,27,28,29,30,31]}